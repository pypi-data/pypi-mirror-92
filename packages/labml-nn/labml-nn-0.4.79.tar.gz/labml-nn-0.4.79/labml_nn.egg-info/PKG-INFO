Metadata-Version: 2.1
Name: labml-nn
Version: 0.4.79
Summary: A collection of PyTorch implementations of neural network architectures and layers.
Home-page: https://github.com/lab-ml/nn
Author: Varuna Jayasiri, Nipun Wijerathne
Author-email: vpjayasiri@gmail.com, hnipun@gmail.com
License: UNKNOWN
Project-URL: Documentation, https://lab-ml.com/
Description: [![Join Slack](https://img.shields.io/badge/slack-chat-green.svg?logo=slack)](https://join.slack.com/t/labforml/shared_invite/zt-egj9zvq9-Dl3hhZqobexgT7aVKnD14g/)
        [![Twitter](https://img.shields.io/twitter/follow/LabML1?style=social)](https://twitter.com/LabML1)
        
        # [LabML Neural Networks](https://lab-ml.com/labml_nn/index.html)
        
        This is a collection of simple PyTorch implementations of
        neural networks and related algorithms.
        These implementations are documented with explanations,
        
        [The website](https://lab-ml.com/labml_nn/index.html)
        renders these as side-by-side formatted notes.
        We believe these would help you understand these algorithms better.
        
        ![Screenshot](https://github.com/lab-ml/nn/blob/master/images/dqn.png)
        
        We are actively maintaining this repo and adding new 
        implementations almost weekly.
        [![Twitter](https://img.shields.io/twitter/follow/LabML1?style=social)](https://twitter.com/LabML1) for updates.
        
        ## Modules
        
        #### ✨ [Transformers](https://lab-ml.com/labml_nn/transformers)
        
        [Transformers module](https://lab-ml.com/labml_nn/transformers)
        contains implementations for
        [multi-headed attention](https://lab-ml.com/labml_nn/transformers/mha.html)
        and
        [relative multi-headed attention](https://lab-ml.com/labml_nn/transformers/relative_mha.html).
        
        * [GPT Architecture](https://lab-ml.com/labml_nn/transformers/gpt)
        * [kNN-LM: Generalization through Memorization](https://lab-ml.com/labml_nn/transformers/knn)
        * [Feedback Transformer](https://lab-ml.com/labml_nn/transformers/feedback)
        
        #### ✨ [Recurrent Highway Networks](https://lab-ml.com/labml_nn/recurrent_highway_networks)
        
        #### ✨ [LSTM](https://lab-ml.com/labml_nn/lstm)
        
        #### ✨ [HyperNetworks - HyperLSTM](https://lab-ml.com/labml_nn/hypernetworks/hyper_lstm.html)
        
        #### ✨ [Capsule Networks](https://lab-ml.com/labml_nn/capsule_networks/)
        
        #### ✨ [Generative Adversarial Networks](https://lab-ml.com/labml_nn/gan/)
        * [GAN with a multi-layer perceptron](https://lab-ml.com/labml_nn/gan/simple_mnist_experiment.html)
        * [GAN with deep convolutional network](https://lab-ml.com/labml_nn/gan/dcgan.html)
        * [Cycle GAN](https://lab-ml.com/labml_nn/gan/cycle_gan.html)
        
        #### ✨ [Sketch RNN](https://lab-ml.com/labml_nn/sketch_rnn/)
        
        #### ✨ [Reinforcement Learning](https://lab-ml.com/labml_nn/rl/)
        * [Proximal Policy Optimization](https://lab-ml.com/labml_nn/rl/ppo/) with
         [Generalized Advantage Estimation](https://lab-ml.com/labml_nn/rl/ppo/gae.html)
        * [Deep Q Networks](https://lab-ml.com/labml_nn/rl/dqn/) with
         with [Dueling Network](https://lab-ml.com/labml_nn/rl/dqn/model.html),
         [Prioritized Replay](https://lab-ml.com/labml_nn/rl/dqn/replay_buffer.html)
         and Double Q Network.
        
        #### ✨ [Optimizers](https://lab-ml.com/labml_nn/optimizers/)
        * [Adam](https://lab-ml.com/labml_nn/optimizers/adam.html)
        * [AMSGrad](https://lab-ml.com/labml_nn/optimizers/amsgrad.html)
        * [Adam Optimizer with warmup](https://lab-ml.com/labml_nn/optimizers/adam_warmup.html)
        * [Noam Optimizer](https://lab-ml.com/labml_nn/optimizers/noam.html)
        * [Rectified Adam Optimizer](https://lab-ml.com/labml_nn/optimizers/radam.html)
        * [AdaBelief Optimizer](https://lab-ml.com/labml_nn/optimizers/ada_belief.html)
        
        ### Installation
        
        ```bash
        pip install labml_nn
        ```
        
        ### Citing LabML
        
        If you use LabML for academic research, please cite the library using the following BibTeX entry.
        
        ```bibtex
        @misc{labml,
         author = {Varuna Jayasiri, Nipun Wijerathne},
         title = {LabML: A library to organize machine learning experiments},
         year = {2020},
         url = {https://lab-ml.com/},
        }
        ```
        
Keywords: machine learning
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Description-Content-Type: text/markdown
