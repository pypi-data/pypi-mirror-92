# coding: utf-8

"""
    PocketSmith

    The public PocketSmith API  # noqa: E501

    The version of the OpenAPI document: 2.0
    Contact: api@pocketsmith.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from pocketsmith.configuration import Configuration


class InlineObject3(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'apply_to_all': 'bool',
        'apply_to_uncategorised': 'bool',
        'payee_matches': 'str'
    }

    attribute_map = {
        'apply_to_all': 'apply_to_all',
        'apply_to_uncategorised': 'apply_to_uncategorised',
        'payee_matches': 'payee_matches'
    }

    def __init__(self, apply_to_all=None, apply_to_uncategorised=None, payee_matches=None, local_vars_configuration=None):  # noqa: E501
        """InlineObject3 - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._apply_to_all = None
        self._apply_to_uncategorised = None
        self._payee_matches = None
        self.discriminator = None

        if apply_to_all is not None:
            self.apply_to_all = apply_to_all
        if apply_to_uncategorised is not None:
            self.apply_to_uncategorised = apply_to_uncategorised
        self.payee_matches = payee_matches

    @property
    def apply_to_all(self):
        """Gets the apply_to_all of this InlineObject3.  # noqa: E501

        Apply the created category rule to all transactions.  # noqa: E501

        :return: The apply_to_all of this InlineObject3.  # noqa: E501
        :rtype: bool
        """
        return self._apply_to_all

    @apply_to_all.setter
    def apply_to_all(self, apply_to_all):
        """Sets the apply_to_all of this InlineObject3.

        Apply the created category rule to all transactions.  # noqa: E501

        :param apply_to_all: The apply_to_all of this InlineObject3.  # noqa: E501
        :type: bool
        """

        self._apply_to_all = apply_to_all

    @property
    def apply_to_uncategorised(self):
        """Gets the apply_to_uncategorised of this InlineObject3.  # noqa: E501

        Apply the created category rule to all uncategorised transactions.  # noqa: E501

        :return: The apply_to_uncategorised of this InlineObject3.  # noqa: E501
        :rtype: bool
        """
        return self._apply_to_uncategorised

    @apply_to_uncategorised.setter
    def apply_to_uncategorised(self, apply_to_uncategorised):
        """Sets the apply_to_uncategorised of this InlineObject3.

        Apply the created category rule to all uncategorised transactions.  # noqa: E501

        :param apply_to_uncategorised: The apply_to_uncategorised of this InlineObject3.  # noqa: E501
        :type: bool
        """

        self._apply_to_uncategorised = apply_to_uncategorised

    @property
    def payee_matches(self):
        """Gets the payee_matches of this InlineObject3.  # noqa: E501

        The keyword/s to match the transaction payees.  # noqa: E501

        :return: The payee_matches of this InlineObject3.  # noqa: E501
        :rtype: str
        """
        return self._payee_matches

    @payee_matches.setter
    def payee_matches(self, payee_matches):
        """Sets the payee_matches of this InlineObject3.

        The keyword/s to match the transaction payees.  # noqa: E501

        :param payee_matches: The payee_matches of this InlineObject3.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and payee_matches is None:  # noqa: E501
            raise ValueError("Invalid value for `payee_matches`, must not be `None`")  # noqa: E501

        self._payee_matches = payee_matches

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineObject3):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InlineObject3):
            return True

        return self.to_dict() != other.to_dict()
