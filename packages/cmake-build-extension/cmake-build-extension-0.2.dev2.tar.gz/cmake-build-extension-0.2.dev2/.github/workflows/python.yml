name: Python CI/CD

on:
  push:
  pull_request:
  release:
    types:
      - published

jobs:

  build-and-test:
    name: 'Python${{ matrix.python-version }}@${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version:
          - 3.6
          - 3.7
          - 3.8
        os:
          - ubuntu-20.04
          - macos-latest
          - windows-latest
        include:
          - os: windows-latest
            python-version: 3.8
            experimental: true

    steps:

      - uses: actions/checkout@master
      - run: git fetch --prune --unshallow

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python tools
        run: pip install pytest

      - name: Install cmake-build-extensions
        run: pip install -v .

      - name: Example dependencies [Windows]
        if: matrix.os == 'windows-latest'
        shell: bash
        run: choco install -y swig

      - name: Example dependencies [macOS]
        if: matrix.os == 'macOS-latest'
        run: |
          brew install swig
          # https://cibuildwheel.readthedocs.io/en/stable/cpp_standards
          echo "MACOSX_DEPLOYMENT_TARGET=10.14" >> $GITHUB_ENV

      - name: Example dependencies [Ubuntu]
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt update
          sudo apt install build-essential swig

      - name: "Test example: SWIG + NumPy"
        shell: bash
        continue-on-error: ${{ matrix.experimental }}
        run: |
          pip install wheel ninja cmake numpy
          cd examples/swig
          pip install --no-build-isolation -v .
          pytest -sv tests

  publish:
    name: 'Publish to PyPI'
    needs: build-and-test
    if: |
      github.repository == 'diegoferigo/cmake-build-extension' &&
      ((github.event_name == 'push' && github.ref == 'refs/heads/master') ||
       (github.event_name == 'release'))
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version:
          - 3.8

    steps:

      - uses: actions/checkout@master
      - run: git fetch --prune --unshallow

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python tools
        run: pip install setuptools_scm wheel

      - name: Create distributions
        run: |
          python setup.py sdist
          pip wheel -w dist/ .
          echo ""
          echo "Distributions:"
          ls -alh dist/

      - name: Check wheel
        run: test $(find dist/ -name *-none-any.whl | wc -l) -gt 0

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          skip_existing: true
