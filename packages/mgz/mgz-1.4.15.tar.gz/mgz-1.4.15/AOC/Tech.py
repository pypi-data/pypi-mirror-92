# automatically generated by the FlatBuffers compiler, do not modify

# namespace: AOC

import flatbuffers

class Tech(object):
    __slots__ = ['_tab']

    # Tech
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Tech
    def IdIndex(self): return self._tab.Get(flatbuffers.number_types.Int16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # Tech
    def IdGame(self): return self._tab.Get(flatbuffers.number_types.Int16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(2))
    # Tech
    def Time(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # Tech
    def State(self): return self._tab.Get(flatbuffers.number_types.Int8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))

def CreateTech(builder, idIndex, idGame, time, state):
    builder.Prep(4, 12)
    builder.Pad(3)
    builder.PrependInt8(state)
    builder.PrependUint32(time)
    builder.PrependInt16(idGame)
    builder.PrependInt16(idIndex)
    return builder.Offset()
