<AnimatedButton@FlatImageButton+LoadingAnim>:
    canvas.before:
        PushMatrix
        Rotate:
            angle: self.angle
            axis: 0, 0, 1
            origin: self.center
    canvas.after:
        PopMatrix

<AnimatedToggleButton@FlatImageToggleButton+LoadingAnim>:
    canvas.before:
        PushMatrix
        Rotate:
            angle: self.angle
            axis: 0, 0, 1
            origin: self.center
    canvas.after:
        PopMatrix


<MainView>:
    orientation: 'vertical'
    spacing: '5dp'
    canvas:
        Color:
            rgba: app.theme.accent
        Rectangle:
            pos: self.pos
            size: self.size
    BoxLayout:
        size_hint_y: None
        size_hint_min_x: self.minimum_width
        height: '40dp'
        padding: '15dp', '3dp'
        spacing: '5dp'
        canvas:
            Color:
                rgba: app.theme.primary
            Rectangle:
                pos: self.pos
                size: self.size
        BoxLayout:
            disabled: screen_manager.current != 'scoring'
            size_hint_x: None
            width: self.minimum_width
            spacing: '5dp'
            DataBar
            FlatDivider:
                color: app.theme.divider
            FlatImageToggleButton:
                test_name: 'play_button'
                disabled: app.player.player_state not in ('playing', 'finished', 'paused')
                source: 'flat_play.png' if self.state == 'normal' else 'flat_pause.png'
                flat_color: app.theme.accent
                state: 'down' if not app.player.paused and not app.player.reached_end else 'normal'
                on_release: app.player.gui_play_button_press()
            FlatDivider:
                color: app.theme.divider
            FlatLabel:
                text: 'No missing frames' if app.storage_controller.saw_all_timestamps else 'Missing frames'
                bold: not app.storage_controller.saw_all_timestamps
                padding: '5dp', 0
                size_hint_x: None
                width: self.texture_size[0]
                center_texture: True
                flat_color: app.theme.text_primary
                canvas.before:
                    Color:
                        rgba: app.theme.primary if app.storage_controller.saw_all_timestamps else (1, 0.53, 0.302, 1)
                    Rectangle:
                        pos: self.pos
                        size: self.size
        FlatDivider:
            color: app.theme.divider
        LightThemedToggleButton:
            disabled: bool(app.export_manager.thread_has_job)
            text: 'Scoring View'
            bold: True
            padding: '5dp', '2dp'
            size_hint_x: None
            width: self.texture_size[0]
            state: 'normal' if screen_manager.current == 'scoring' else 'down'
            on_state: screen_manager.current = 'scoring' if self.state == 'normal' else 'export'
            center_texture: True
        LightThemedToggleButton:
            disabled: bool(app.export_manager.thread_has_job)
            text: 'Export View'
            bold: True
            padding: '5dp', '2dp'
            size_hint_x: None
            width: self.texture_size[0]
            state: 'down' if screen_manager.current == 'scoring' else 'normal'
            on_state: screen_manager.current = 'scoring' if self.state == 'down' else 'export'
            center_texture: True
        FlatDivider:
            color: app.theme.divider
        FlatLabel:
            text: str(error_indicator.count)
            size_hint: None, None
            size: self.texture_size
            padding: '1dp', '5dp'
            flat_color: app.theme.text_primary
        FlatErrorIndicatorPopup:
            id: error_indicator
            scale_down_color: True
            source: 'flat_alert.png'
            flat_color: app.theme.accent
            on_kv_post: app.error_indicator = self
            on_release: self.count = 0
    ScreenManager:
        id: screen_manager
        on_current: app.current_view = self.current
        Screen:
            name: 'scoring'
            BoxLayout:
                spacing: '3dp'
                ControlDisplay
                ChannelList:
                    disabled: not app.player.filename
        Screen:
            name: 'export'
            ExportWidget:
                on_kv_post: app.export_widget = self.__self__



<TickSlider@TickMarker+Slider>


<BoxShowMore@ShowMoreBehavior+BoxLayout>


<ExpandButton@FlatImageToggleButton>:
    height: '34dp'
    size_hint_y: None
    state: 'down'
    scale_down_color: False
    flat_color: app.theme.accent
    source: 'chevron-right.png' if self.state == 'normal' else 'chevron-down.png'


<MinSizeXFlatTextButton@FlatButton>:
    size_hint_y: None
    height: self.texture_size[1]
    size_hint_min_x: self.texture_size[0]
    padding: '5dp', '5dp'
    bold: True
    scale_down_color: True
    flat_color: app.theme.primary_text
    flat_background_color: app.theme.accent


<MinSizeXFlatLabel@FlatLabel>:
    size_hint_y: None
    height: self.texture_size[1]
    size_hint_min_x: self.texture_size[0]
    center_texture: True
    flat_color: app.theme.text_primary


<MinSizeYMaxXFlatLabel@FlatLabel>:
    size_hint_x: None
    width: max(self.texture_size[0], self.width) if self.texture_size[0] else 10
    size_hint_min_y: self.texture_size[1]
    center_texture: True
    flat_color: app.theme.text_primary


<MinSizeYFlatLabel@FlatLabel>:
    size_hint_x: None
    width: self.texture_size[0]
    size_hint_min_y: self.texture_size[1]
    center_texture: True
    flat_color: app.theme.text_primary


<MinSizeXYFlatLabel@FlatLabel>:
    size_hint_min: self.texture_size
    center_texture: True
    flat_color: app.theme.text_primary


<SizedFlatLabel@FlatLabel>:
    size: self.texture_size
    size_hint: None, None
    flat_color: app.theme.text_primary


<SizedFlatSpinner@FlatSpinner>:
    flat_color: app.theme.text_primary
    flat_menu_color: app.theme.accent
    flat_drop_background_color: app.theme.primary_text
    flat_drop_text_color: app.theme.text_primary
    flat_border_color: app.theme.divider
    size_hint: None, None
    size: self.minimum_size
