Metadata-Version: 2.1
Name: cutoml
Version: 0.0.7
Summary: A lightweight automl framework
Home-page: https://github.com/omkarudawant/CutoML
Author: Omkar Udawant
Author-email: omkarudawant97@gmail.com
License: gpl-3.0
Download-URL: https://github.com/omkarudawant/CutoML/archive/0.0.7.tar.gz
Description: <img src="https://user-images.githubusercontent.com/51676294/105076115-ac83e100-5ab0-11eb-8743-9a6dcc21cf45.png" width="90%"></img>
        
        
        [![PyPI version](https://badge.fury.io/py/cutoml.svg)](https://pypi.org/project/cutoml/)
        [![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://github.com/omkarudawant/CutoML/blob/main/LICENSE)
        [![Python 3.6](https://img.shields.io/badge/python-3.6+-blue.svg)](https://www.python.org/downloads/)
        [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](https://github.com/omkarudawant/CutoML/pulls)
        [![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://github.com/omkarudawant/CutoML)
        
        
        A lightweight automl framework for classification/regression tasks.
        
        
        Installation
        ------------
        
            pip install cutoml
        
        Usage Example
        -------------
        
        
        For classification,
        
        ```python
        from cutoml.cutoml import CutoClassifier
        from sklearn.model_selection import train_test_split
        from sklearn import datasets
        
        dataset = datasets.load_digits()
        X_train, X_test, y_train, y_test = train_test_split(dataset.data,
                                                            dataset.target,
                                                            test_size=0.2)
        
        ctc = CutoClassifier(k_folds=3, n_jobs=-1, verbose=1)
        ctc.fit(X=X_train, y=y_train)
        ```
        
        For regression,
        
        ```python
        from cutoml.cutoml import CutoRegressor
        from sklearn.model_selection import train_test_split
        from sklearn import datasets
        
        dataset = datasets.load_boston()
        X_train, X_test, y_train, y_test = train_test_split(dataset.data,
                                                            dataset.target,
                                                            test_size=0.2)
        
        ctr = CutoRegressor(k_folds=3, n_jobs=-1, verbose=1)
        ctr.fit(X=X_train, y=y_train)
        ```
        
        
Keywords: pipeline optimization,hyperparameter optimization,data science,machine learning
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.6
Description-Content-Type: text/markdown
