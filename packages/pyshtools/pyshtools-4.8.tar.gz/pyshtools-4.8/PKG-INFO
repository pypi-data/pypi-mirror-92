Metadata-Version: 2.1
Name: pyshtools
Version: 4.8
Summary: SHTOOLS - Spherical Harmonic Tools
Home-page: https://shtools.github.io/SHTOOLS/
Author: The SHTOOLS developers
Author-email: mark.a.wieczorek@gmail.com
License: BSD-3-Clause
Download-URL: https://github.com/SHTOOLS/SHTOOLS/zipball/master
Description: |Documentation| |DOI| |Paper| |Binder| |Chat on matrix| |Chat at gitter|
        |Twitter|
        
        SHTOOLS/pyshtools is a Fortran-95/Python library that can be used to
        perform spherical harmonic transforms, multitaper spectral analyses,
        expansions of functions into Slepian bases, and standard operations on
        global gravitational and magnetic field data.
        
        FEATURES
        ~~~~~~~~
        
        -  Supports all standard normalizations and phase conventions of the
           spherical harmonic functions.
        
        -  Effortless conversion between real and complex harmonics, between
           phase conventions, and between 4π normalized, Schmidt
           semi-normalized, orthonormalized, and unnormalized harmonics.
        
        -  Use of both regularly sampled geographic grids and grids appropriate
           for Gauss-Legendre quadrature.
        
        -  Spherical harmonic transforms proven to be accurate up to about
           degree 2800.
        
        -  Perform localized multitaper spectral analyses, or expand functions
           in terms of localized Slepian bases.
        
        -  Support for standard data and file formats, including *xarray* and
           *netcdf*.
        
        -  Import research-grade gravity, topography, and magnetic field
           datasets with a single command.
        
        -  Creation of publication quality maps using
           `Cartopy <https://scitools.org.uk/cartopy>`__ and
           `pygmt <https://www.pygmt.org/>`__.
        
        -  OpenMP compatible and OpenMP thread-safe versions of the Fortran
           routines.
        
        INSTALLATION
        ~~~~~~~~~~~~
        
        pyshtools (for Python)
        ^^^^^^^^^^^^^^^^^^^^^^
        
        Install using ``conda``:
        
        .. code:: bash
        
           conda install -c conda-forge pyshtools  # Linux and macOS only
           conda update -c conda-forge pyshtools  # to upgrade a pre-existing installation
        
        Install using ``pip``:
        
        .. code:: bash
        
           pip install pyshtools
           pip install --upgrade pyshtools  # to upgrade a pre-existing installation
           pip install pyshtools --no-binary pyshtools  # build from source
           pip install git+https://github.com/SHTOOLS/SHTOOLS@develop  # install the develop branch from source
        
        For developers, install the requirements
        
        .. code:: bash
        
           # Linux: install gfortran, fftw3, blas, and lapack
           sudo apt-get install g++ gfortran libfftw3-dev libblas-dev liblapack-dev
           # macOS: install fftw using brew or macports
           brew install fftw
           sudo port install fftw-3
           # macOS: for LAPACK, link to the system '-framework Accelerate' or install openblas
        
        then clone the shtools repo and install manually:
        
        .. code:: bash
        
           git clone https://github.com/SHTOOLS/SHTOOLS.git
           cd shtools
           git checkout develop
           pip install -e .  # install into the shtools folder and link to the active python environment
        
        SHTOOLS (for Fortran 95)
        ^^^^^^^^^^^^^^^^^^^^^^^^
        
        Install using the `brew <http://brew.sh/>`__ package manager (macOS,
        linux, windows):
        
        .. code:: bash
        
           brew install shtools
        
        Install using the `macports <https://www.macports.org/>`__ package
        manager (macOS)
        
        .. code:: bash
        
           sudo port install shtools
        
        Install from source. Clone or download the shtools repo, and then
        execute one (or both) of the following commands in the shtools
        directory:
        
        .. code:: bash
        
           make fortran
           make fortran-mp  # for OpenMP Fortran routines
        
        Further installation instructions and options can be found in the `web
        documentation <https://shtools.github.io/SHTOOLS/>`__.
        
        HOW TO USE
        ~~~~~~~~~~
        
        SHTOOLS can be invoked in any Fortran 95 or Python program. The core
        software is written in Fortran 95, and Python wrappers and dedicated
        classes allow simple access to the fortran-compiled routines. A variety
        of Python tutorials and guides are included that demonstrate the major
        features of the library.
        
        To get started, click on the following Python tutorials and then run
        them interactively in Binder:
        
        -  `Spherical harmonic coefficients and
           grids <https://nbviewer.jupyter.org/github/SHTOOLS/SHTOOLS/blob/master/examples/notebooks/grids-and-coefficients.ipynb>`__
        -  `Localization windows and spectral
           analysis <https://nbviewer.jupyter.org/github/SHTOOLS/SHTOOLS/blob/master/examples/notebooks/localized-spectral-analysis.ipynb>`__
        -  `Gravity and magnetic
           fields <https://nbviewer.jupyter.org/github/SHTOOLS/SHTOOLS/blob/master/examples/notebooks/gravity-and-magnetic-fields.ipynb>`__
        -  `Plotting
           maps <https://nbviewer.jupyter.org/github/SHTOOLS/SHTOOLS/blob/master/examples/notebooks/plotting-maps.ipynb>`__
        
        DEVELOPERS
        ~~~~~~~~~~
        
        We work on the ``develop`` branch and only push releases to ``master``.
        Please base all pull requests on ``develop``.
        
        REFERENCE
        ~~~~~~~~~
        
        Mark A. Wieczorek and Matthias Meschede (2018). SHTools — Tools for
        working with spherical harmonics, *Geochemistry, Geophysics,
        Geosystems*, 19, 2574-2592,
        doi:`10.1029/2018GC007529 <https://doi.org/10.1029/2018GC007529>`__.
        
        .. |Documentation| image:: https://img.shields.io/badge/documentation-shtools.github.io%2FSHTOOLS%2F-yellow.svg
           :target: https://shtools.github.io/SHTOOLS/
        .. |DOI| image:: https://zenodo.org/badge/doi/10.5281/zenodo.592762.svg
           :target: https://doi.org/10.5281/zenodo.592762
        .. |Paper| image:: https://img.shields.io/badge/paper-10.1029/2018GC007529-orange.svg
           :target: https://doi.org/10.1029/2018GC007529
        .. |Binder| image:: https://mybinder.org/badge_logo.svg
           :target: https://mybinder.org/v2/gh/SHTOOLS/SHTOOLS/master?filepath=examples%2Fnotebooks%2F
        .. |Chat on matrix| image:: https://img.shields.io/badge/chat-on_%5Bmatrix%5D-4bb596.svg
           :target: https://matrix.to/#/#pyshtools:matrix.org?via=matrix.org&via=gitter.im
        .. |Chat at gitter| image:: https://badges.gitter.im/SHTOOLS/SHTOOLS.svg
           :target: https://gitter.im/SHTOOLS/SHTOOLS?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge
        .. |Twitter| image:: https://img.shields.io/twitter/follow/pyshtools.svg?style=social&label=Follow
           :target: https://twitter.com/intent/follow?screen_name=pyshtools
        
Keywords: Spherical Harmonics,Spectral Estimation,Slepian Functions,Legendre Functions,Gravity Field,Magnetic Field
Platform: OS Independent
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Fortran
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: GIS
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Physics
Requires-Python: >=3.6
Provides-Extra: extras
