/* <dtml-with base_properties> (do not remove this :) */
/* <dtml-call "REQUEST.set('portal_url', portal_url())"> (not this either :) */

#portal-logo {
    margin: 0.3em 0em -2.5em 0.3em !important;
}

#portal-globalnav {
    padding-left: 5.5em !important;
}

#premeetings dd.collapsibleContent {
    margin-left: 0;
}

/* Colors on states */
/* Items */
.state-itemcreated_waiting_advices, .label-state-itemcreated_waiting_advices,
.state-proposed_to_budgetimpact_reviewer, .label-state-proposed_to_budgetimpact_reviewer {
    color: red !important;
}
#plone-contentmenu-workflow .state-itemcreated_waiting_advices,
#plone-contentmenu-workflow .state-proposed_to_budgetimpact_reviewer {
    border-radius: 0.5em 0.5em 0.5em 0.5em;
    background-color: red;
    padding: 0 0.5em;
    color: white !important;
    border: 2px solid red;
}

.state-proposed_to_servicehead, .label-state-proposed_to_servicehead,
.state-proposed_to_officemanager, .label-state-proposed_to_officemanager,
.state-proposed_to_divisionhead, .label-state-proposed_to_divisionhead,
.state-proposed_to_director, .label-state-proposed_to_director {
    color: DarkOrange !important;
}
#plone-contentmenu-workflow .state-proposed_to_servicehead,
#plone-contentmenu-workflow .state-proposed_to_officemanager,
#plone-contentmenu-workflow .state-proposed_to_divisionhead,
#plone-contentmenu-workflow .state-proposed_to_director {
    border-radius: 0.5em 0.5em 0.5em 0.5em;
    background-color: DarkOrange;
    padding: 0 0.5em;
    color: white !important;
    border: 2px solid DarkOrange;
}

.state-item_in_committee,
.state-item_in_council,
.state-in_committee,
.state-in_council,
.state-decided {
    color: black !important;
}
#plone-contentmenu-workflow .state-item_in_committee,
#plone-contentmenu-workflow .state-item_in_council,
#plone-contentmenu-workflow .state-in_committee,
#plone-contentmenu-workflow .state-in_council,
#plone-contentmenu-workflow .state-decided {
    border-radius: 0.5em 0.5em 0.5em 0.5em;
    background-color: black;
    padding: 0 0.5em;
    color: white !important;
    border: 2px solid black;
}

#plone-contentmenu-workflow .state-accepted_but_modified {
    border-radius: 0.5em 0.5em 0.5em 0.5em;
    background-color: green;
    padding: 0 0.5em;
    color: white !important;
    border: 2px solid green;
}

.state-removed {
    color: grey !important;
}

#plone-contentmenu-workflow .state-removed {
    border-radius: 0.5em 0.5em 0.5em 0.5em;
    background-color: grey;
    padding: 0 0.5em;
    color: white !important;
    border: 2px solid grey;
}

.state-refused {
    color: violet !important;
}

/* Add a highlight-red style useable in FCKeditor to highlight modified elements */
.highlight-red {
    color:red;
}

/* input used for Title is to big, use "120%" instead of "160%" to put more text into it */
#archetypes-fieldname-title input, input#form\.title {
    font-size: 120%;
}

.follow_up_no {
background: transparent url(&dtml-portal_url;/follow_up_no.png) no-repeat scroll 0 1px;
padding: 1px 0 1px 18px;
color: grey;
font-weight: bold;
}

.follow_up_yes {
background: transparent url(&dtml-portal_url;/follow_up_yes.png) no-repeat scroll 0 1px;
padding: 1px 0 1px 18px;
color: red;
font-weight: bold;
}

.follow_up_provided, .follow_up_provided_not_printed {
background: transparent url(&dtml-portal_url;/follow_up_provided.png) no-repeat scroll 0 1px;
padding: 1px 0 1px 18px;
color: green;
font-weight: bold;
}

/* </dtml-with> */
/* DOCUMENTATION ON PRE-DEFINED PROPERTIES FROM PLONE */

 /* You can insert colors and other variables from Plone's
    base_properties by doing:

    & dtml-variableName ; (without the spaces, excluded here to not make it render)

    Example:

    myLink {
        color: & dtml-fontColor ;   (again, without the spaces)
    }

   This means you can generate your own elements that use Plone's defaults,
   and respect any customizations people have done. See base_properties for
   the default values.

   These are the available properties:

   logoName - the file name of the portal logo.

   fontFamily - the font family used for all text that is not headers

   fontBaseSize - the base font size that everything is calculated from

   fontColor - the main font color

   backgroundColor - the background color

   linkColor - the color used on normal links

   linkActiveColor - color used on active links

   linkVisitedColor - color used on visited links

   borderWidth - the width of most borders in Plone

   borderStyle - the style of the border lines, normally solid

   borderStyleAnnotations - style of border lines on comments etc

   globalBorderColor - the border color used on the main tabs, the portlets etc

   globalBackgroundColor - background color for the selected tabs, portlet headings etc

   globalFontColor - the color of the font in the tabs and in portlet headings

   headingFontFamily - font family for h1/h2/h3/h4/h5/h6 headlines.

   headingFontBaseSize - the base size used when calculating the different headline sizes

   contentViewBorderColor - the content view tabs border color

   contentViewBackgroundColor - the content view tabs background color

   contentViewFontColor - the font color used in the content view tabs

   textTransform - whether to lowercase text in portlets, tabs etc.

   evenRowBackgroundColor - the background color of even rows in listings

   oddRowBackgroundColor - the background color of even rows in listings

   notifyBorderColor - border color of notification elements like the status message, the calendar focus

   notifyBackgroundColor - background color of notification elements like the status message, the calendar focus

   discreetColor:string=#999999
   helpBackgroundColor:string=#ffffe1

 */
