[tool.poetry]
name = "weasel-pipeline"
version = "1.1.1"
description = "A minimalist pipelining framework for the WEASEL project."
authors = ["Fabian Marquardt <marquard@cs.uni-bonn.de>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.6"
aio-pika = "^6.7.1"
uvloop = "^0.14.0"
configargparse = "^1.2.3"

[tool.poetry.dev-dependencies]
pytest = "^6.2.1"
pylint = "^2.6.0"
rope = "^0.18.0"
pytest-asyncio = "^0.14.0"
pytest-cov = "^2.10.1"
black = "^20.8b1"
isort = "^5.7.0"
colorama = "^0.4.4"
safety = "^1.10.2"
bandit = "^1.7.0"
requests = "^2.25.1"
poethepoet = "^0.9.0"
python-semantic-release = "^7.11.0"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poe.tasks]
test = "pytest --cov weasel_pipeline --cov-report term-missing --amqp-uri=$AMQP_URI"

lint_pylint = "pylint weasel_pipeline"
lint_black = "black weasel_pipeline --check"
lint_isort = "isort weasel_pipeline --check"
lint = ["lint_pylint", "lint_black", "lint_isort"]

format_isort = "isort weasel_pipeline"
format_black = "black weasel_pipeline"
format = ["format_isort", "format_black"]

safety_check_safety = "safety check"
safety_check_bandit = "bandit -s B301,B403 -r weasel_pipeline"
safety_check = ["safety_check_safety", "safety_check_bandit"]

release = "semantic-release publish"

[tool.semantic_release]
version_variable = [
    'weasel_pipeline/__init__.py:__version__',
    'pyproject.toml:version',
]
patch_without_tag = "true"
commit_parser = "semantic_release.history.emoji_parser"
build_command = "poetry build"
hvcs = "gitlab"