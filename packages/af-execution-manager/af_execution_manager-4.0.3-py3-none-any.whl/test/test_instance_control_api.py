# coding: utf-8

"""
    AristaFlowREST/ExecutionManager

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 4.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import af_execution_manager
from af_execution_manager.api.instance_control_api import InstanceControlApi  # noqa: E501
from af_execution_manager.rest import ApiException


class TestInstanceControlApi(unittest.TestCase):
    """InstanceControlApi unit test stubs"""

    def setUp(self):
        self.api = InstanceControlApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_check_for_and_fix_inconsistencies(self):
        """Test case for check_for_and_fix_inconsistencies

        """
        pass

    def test_create_and_start_instance(self):
        """Test case for create_and_start_instance

        """
        pass

    def test_create_and_start_instance_callback(self):
        """Test case for create_and_start_instance_callback

        """
        pass

    def test_create_and_start_instance_sse(self):
        """Test case for create_and_start_instance_sse

        """
        pass

    def test_create_instance_data_container(self):
        """Test case for create_instance_data_container

        """
        pass

    def test_get_instantiable_templ_refs(self):
        """Test case for get_instantiable_templ_refs

        """
        pass

    def test_get_instantiable_templates(self):
        """Test case for get_instantiable_templates

        """
        pass

    def test_get_public_data_context(self):
        """Test case for get_public_data_context

        """
        pass

    def test_get_templ_refs(self):
        """Test case for get_templ_refs

        """
        pass

    def test_resume_instance(self):
        """Test case for resume_instance

        """
        pass

    def test_resume_instance_callback(self):
        """Test case for resume_instance_callback

        """
        pass

    def test_resume_instance_sse(self):
        """Test case for resume_instance_sse

        """
        pass

    def test_stop_and_abort_instance(self):
        """Test case for stop_and_abort_instance

        """
        pass

    def test_suspend_instance(self):
        """Test case for suspend_instance

        """
        pass


if __name__ == '__main__':
    unittest.main()
