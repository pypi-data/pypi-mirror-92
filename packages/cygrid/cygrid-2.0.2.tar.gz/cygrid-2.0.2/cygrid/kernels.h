/* Generated by Cython 0.25.1 */

#ifndef __PYX_HAVE__cygrid__kernels
#define __PYX_HAVE__cygrid__kernels

struct gaussian_1d_params;
struct gaussian_2d_params;
struct tapered_sinc_1d_params;
struct vector_1d_params;
struct matrix_2d_params;

/* "cygrid/kernels.pxd":46
 *     # following:
 * 
 *     public struct gaussian_1d_params:             # <<<<<<<<<<<<<<
 *         double inv_variance  # == 1. / 2. / sigma_kernel ** 2
 * 
 */
struct gaussian_1d_params {
  double inv_variance;
};

/* "cygrid/kernels.pxd":49
 *         double inv_variance  # == 1. / 2. / sigma_kernel ** 2
 * 
 *     public struct gaussian_2d_params:             # <<<<<<<<<<<<<<
 *         double w_a
 *         double w_b
 */
struct gaussian_2d_params {
  double w_a;
  double w_b;
  double alpha;
};

/* "cygrid/kernels.pxd":54
 *         double alpha
 * 
 *     public struct tapered_sinc_1d_params:             # <<<<<<<<<<<<<<
 *         double sigma
 *         double a  # should be set to 2.52
 */
struct tapered_sinc_1d_params {
  double sigma;
  double a;
  double b;
};

/* "cygrid/kernels.pxd":59
 *         double b  # should be set to 1.55
 * 
 *     public struct vector_1d_params:             # <<<<<<<<<<<<<<
 *         uint32_t n  # length of vector
 *         double refpix  # reference pixel number (zero-based!)
 */
struct vector_1d_params {
  __pyx_t_5numpy_uint32_t n;
  double refpix;
  double dx;
  __Pyx_memviewslice vector;
};

/* "cygrid/kernels.pxd":66
 *         double[::1] vector
 * 
 *     public struct matrix_2d_params:             # <<<<<<<<<<<<<<
 *         uint32_t n_x, n_y  # x/y size of matrix
 *         double refpix_x, refpix_y  # reference pixel number (zero-based!)
 */
struct matrix_2d_params {
  __pyx_t_5numpy_uint32_t n_x;
  __pyx_t_5numpy_uint32_t n_y;
  double refpix_x;
  double refpix_y;
  double dx;
  double dy;
  __Pyx_memviewslice matrix;
};

#ifndef __PYX_HAVE_API__cygrid__kernels

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

#endif /* !__PYX_HAVE_API__cygrid__kernels */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initkernels(void);
#else
PyMODINIT_FUNC PyInit_kernels(void);
#endif

#endif /* !__PYX_HAVE__cygrid__kernels */
