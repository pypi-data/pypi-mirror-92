# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _AdaptiveDenoisingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVarianceImageFilterPython
else:
    import _itkVarianceImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkVarianceImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkVarianceImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkBoxImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkVarianceImageFilterID2ID2_New():
    return itkVarianceImageFilterID2ID2.New()

class itkVarianceImageFilterID2ID2(itk.itkBoxImageFilterPython.itkBoxImageFilterID2ID2):
    r"""Proxy of C++ itkVarianceImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkVarianceImageFilterPython.itkVarianceImageFilterID2ID2_Clone)
    InputHasNumericTraitsCheck = _itkVarianceImageFilterPython.itkVarianceImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVarianceImageFilterPython.delete_itkVarianceImageFilterID2ID2
    cast = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkVarianceImageFilterID2ID2

        Create a new object of the class itkVarianceImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVarianceImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVarianceImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVarianceImageFilterID2ID2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVarianceImageFilterID2ID2 in _itkVarianceImageFilterPython:
_itkVarianceImageFilterPython.itkVarianceImageFilterID2ID2_swigregister(itkVarianceImageFilterID2ID2)
itkVarianceImageFilterID2ID2___New_orig__ = _itkVarianceImageFilterPython.itkVarianceImageFilterID2ID2___New_orig__
itkVarianceImageFilterID2ID2_cast = _itkVarianceImageFilterPython.itkVarianceImageFilterID2ID2_cast


def itkVarianceImageFilterID3ID3_New():
    return itkVarianceImageFilterID3ID3.New()

class itkVarianceImageFilterID3ID3(itk.itkBoxImageFilterPython.itkBoxImageFilterID3ID3):
    r"""Proxy of C++ itkVarianceImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkVarianceImageFilterPython.itkVarianceImageFilterID3ID3_Clone)
    InputHasNumericTraitsCheck = _itkVarianceImageFilterPython.itkVarianceImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVarianceImageFilterPython.delete_itkVarianceImageFilterID3ID3
    cast = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkVarianceImageFilterID3ID3

        Create a new object of the class itkVarianceImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVarianceImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVarianceImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVarianceImageFilterID3ID3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVarianceImageFilterID3ID3 in _itkVarianceImageFilterPython:
_itkVarianceImageFilterPython.itkVarianceImageFilterID3ID3_swigregister(itkVarianceImageFilterID3ID3)
itkVarianceImageFilterID3ID3___New_orig__ = _itkVarianceImageFilterPython.itkVarianceImageFilterID3ID3___New_orig__
itkVarianceImageFilterID3ID3_cast = _itkVarianceImageFilterPython.itkVarianceImageFilterID3ID3_cast


def itkVarianceImageFilterID4ID4_New():
    return itkVarianceImageFilterID4ID4.New()

class itkVarianceImageFilterID4ID4(itk.itkBoxImageFilterPython.itkBoxImageFilterID4ID4):
    r"""Proxy of C++ itkVarianceImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkVarianceImageFilterPython.itkVarianceImageFilterID4ID4_Clone)
    InputHasNumericTraitsCheck = _itkVarianceImageFilterPython.itkVarianceImageFilterID4ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVarianceImageFilterPython.delete_itkVarianceImageFilterID4ID4
    cast = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkVarianceImageFilterID4ID4

        Create a new object of the class itkVarianceImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVarianceImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVarianceImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVarianceImageFilterID4ID4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVarianceImageFilterID4ID4 in _itkVarianceImageFilterPython:
_itkVarianceImageFilterPython.itkVarianceImageFilterID4ID4_swigregister(itkVarianceImageFilterID4ID4)
itkVarianceImageFilterID4ID4___New_orig__ = _itkVarianceImageFilterPython.itkVarianceImageFilterID4ID4___New_orig__
itkVarianceImageFilterID4ID4_cast = _itkVarianceImageFilterPython.itkVarianceImageFilterID4ID4_cast


def itkVarianceImageFilterIF2IF2_New():
    return itkVarianceImageFilterIF2IF2.New()

class itkVarianceImageFilterIF2IF2(itk.itkBoxImageFilterPython.itkBoxImageFilterIF2IF2):
    r"""Proxy of C++ itkVarianceImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIF2IF2_Clone)
    InputHasNumericTraitsCheck = _itkVarianceImageFilterPython.itkVarianceImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVarianceImageFilterPython.delete_itkVarianceImageFilterIF2IF2
    cast = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkVarianceImageFilterIF2IF2

        Create a new object of the class itkVarianceImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVarianceImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVarianceImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVarianceImageFilterIF2IF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVarianceImageFilterIF2IF2 in _itkVarianceImageFilterPython:
_itkVarianceImageFilterPython.itkVarianceImageFilterIF2IF2_swigregister(itkVarianceImageFilterIF2IF2)
itkVarianceImageFilterIF2IF2___New_orig__ = _itkVarianceImageFilterPython.itkVarianceImageFilterIF2IF2___New_orig__
itkVarianceImageFilterIF2IF2_cast = _itkVarianceImageFilterPython.itkVarianceImageFilterIF2IF2_cast


def itkVarianceImageFilterIF3IF3_New():
    return itkVarianceImageFilterIF3IF3.New()

class itkVarianceImageFilterIF3IF3(itk.itkBoxImageFilterPython.itkBoxImageFilterIF3IF3):
    r"""Proxy of C++ itkVarianceImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIF3IF3_Clone)
    InputHasNumericTraitsCheck = _itkVarianceImageFilterPython.itkVarianceImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVarianceImageFilterPython.delete_itkVarianceImageFilterIF3IF3
    cast = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkVarianceImageFilterIF3IF3

        Create a new object of the class itkVarianceImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVarianceImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVarianceImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVarianceImageFilterIF3IF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVarianceImageFilterIF3IF3 in _itkVarianceImageFilterPython:
_itkVarianceImageFilterPython.itkVarianceImageFilterIF3IF3_swigregister(itkVarianceImageFilterIF3IF3)
itkVarianceImageFilterIF3IF3___New_orig__ = _itkVarianceImageFilterPython.itkVarianceImageFilterIF3IF3___New_orig__
itkVarianceImageFilterIF3IF3_cast = _itkVarianceImageFilterPython.itkVarianceImageFilterIF3IF3_cast


def itkVarianceImageFilterIF4IF4_New():
    return itkVarianceImageFilterIF4IF4.New()

class itkVarianceImageFilterIF4IF4(itk.itkBoxImageFilterPython.itkBoxImageFilterIF4IF4):
    r"""Proxy of C++ itkVarianceImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIF4IF4_Clone)
    InputHasNumericTraitsCheck = _itkVarianceImageFilterPython.itkVarianceImageFilterIF4IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVarianceImageFilterPython.delete_itkVarianceImageFilterIF4IF4
    cast = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkVarianceImageFilterIF4IF4

        Create a new object of the class itkVarianceImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVarianceImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVarianceImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVarianceImageFilterIF4IF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVarianceImageFilterIF4IF4 in _itkVarianceImageFilterPython:
_itkVarianceImageFilterPython.itkVarianceImageFilterIF4IF4_swigregister(itkVarianceImageFilterIF4IF4)
itkVarianceImageFilterIF4IF4___New_orig__ = _itkVarianceImageFilterPython.itkVarianceImageFilterIF4IF4___New_orig__
itkVarianceImageFilterIF4IF4_cast = _itkVarianceImageFilterPython.itkVarianceImageFilterIF4IF4_cast


def itkVarianceImageFilterISS2ISS2_New():
    return itkVarianceImageFilterISS2ISS2.New()

class itkVarianceImageFilterISS2ISS2(itk.itkBoxImageFilterPython.itkBoxImageFilterISS2ISS2):
    r"""Proxy of C++ itkVarianceImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkVarianceImageFilterPython.itkVarianceImageFilterISS2ISS2_Clone)
    InputHasNumericTraitsCheck = _itkVarianceImageFilterPython.itkVarianceImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVarianceImageFilterPython.delete_itkVarianceImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkVarianceImageFilterISS2ISS2

        Create a new object of the class itkVarianceImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVarianceImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVarianceImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVarianceImageFilterISS2ISS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVarianceImageFilterISS2ISS2 in _itkVarianceImageFilterPython:
_itkVarianceImageFilterPython.itkVarianceImageFilterISS2ISS2_swigregister(itkVarianceImageFilterISS2ISS2)
itkVarianceImageFilterISS2ISS2___New_orig__ = _itkVarianceImageFilterPython.itkVarianceImageFilterISS2ISS2___New_orig__
itkVarianceImageFilterISS2ISS2_cast = _itkVarianceImageFilterPython.itkVarianceImageFilterISS2ISS2_cast


def itkVarianceImageFilterISS3ISS3_New():
    return itkVarianceImageFilterISS3ISS3.New()

class itkVarianceImageFilterISS3ISS3(itk.itkBoxImageFilterPython.itkBoxImageFilterISS3ISS3):
    r"""Proxy of C++ itkVarianceImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkVarianceImageFilterPython.itkVarianceImageFilterISS3ISS3_Clone)
    InputHasNumericTraitsCheck = _itkVarianceImageFilterPython.itkVarianceImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVarianceImageFilterPython.delete_itkVarianceImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkVarianceImageFilterISS3ISS3

        Create a new object of the class itkVarianceImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVarianceImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVarianceImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVarianceImageFilterISS3ISS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVarianceImageFilterISS3ISS3 in _itkVarianceImageFilterPython:
_itkVarianceImageFilterPython.itkVarianceImageFilterISS3ISS3_swigregister(itkVarianceImageFilterISS3ISS3)
itkVarianceImageFilterISS3ISS3___New_orig__ = _itkVarianceImageFilterPython.itkVarianceImageFilterISS3ISS3___New_orig__
itkVarianceImageFilterISS3ISS3_cast = _itkVarianceImageFilterPython.itkVarianceImageFilterISS3ISS3_cast


def itkVarianceImageFilterISS4ISS4_New():
    return itkVarianceImageFilterISS4ISS4.New()

class itkVarianceImageFilterISS4ISS4(itk.itkBoxImageFilterPython.itkBoxImageFilterISS4ISS4):
    r"""Proxy of C++ itkVarianceImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkVarianceImageFilterPython.itkVarianceImageFilterISS4ISS4_Clone)
    InputHasNumericTraitsCheck = _itkVarianceImageFilterPython.itkVarianceImageFilterISS4ISS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVarianceImageFilterPython.delete_itkVarianceImageFilterISS4ISS4
    cast = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkVarianceImageFilterISS4ISS4

        Create a new object of the class itkVarianceImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVarianceImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVarianceImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVarianceImageFilterISS4ISS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVarianceImageFilterISS4ISS4 in _itkVarianceImageFilterPython:
_itkVarianceImageFilterPython.itkVarianceImageFilterISS4ISS4_swigregister(itkVarianceImageFilterISS4ISS4)
itkVarianceImageFilterISS4ISS4___New_orig__ = _itkVarianceImageFilterPython.itkVarianceImageFilterISS4ISS4___New_orig__
itkVarianceImageFilterISS4ISS4_cast = _itkVarianceImageFilterPython.itkVarianceImageFilterISS4ISS4_cast


def itkVarianceImageFilterIUC2IUC2_New():
    return itkVarianceImageFilterIUC2IUC2.New()

class itkVarianceImageFilterIUC2IUC2(itk.itkBoxImageFilterPython.itkBoxImageFilterIUC2IUC2):
    r"""Proxy of C++ itkVarianceImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUC2IUC2_Clone)
    InputHasNumericTraitsCheck = _itkVarianceImageFilterPython.itkVarianceImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVarianceImageFilterPython.delete_itkVarianceImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkVarianceImageFilterIUC2IUC2

        Create a new object of the class itkVarianceImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVarianceImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVarianceImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVarianceImageFilterIUC2IUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVarianceImageFilterIUC2IUC2 in _itkVarianceImageFilterPython:
_itkVarianceImageFilterPython.itkVarianceImageFilterIUC2IUC2_swigregister(itkVarianceImageFilterIUC2IUC2)
itkVarianceImageFilterIUC2IUC2___New_orig__ = _itkVarianceImageFilterPython.itkVarianceImageFilterIUC2IUC2___New_orig__
itkVarianceImageFilterIUC2IUC2_cast = _itkVarianceImageFilterPython.itkVarianceImageFilterIUC2IUC2_cast


def itkVarianceImageFilterIUC3IUC3_New():
    return itkVarianceImageFilterIUC3IUC3.New()

class itkVarianceImageFilterIUC3IUC3(itk.itkBoxImageFilterPython.itkBoxImageFilterIUC3IUC3):
    r"""Proxy of C++ itkVarianceImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUC3IUC3_Clone)
    InputHasNumericTraitsCheck = _itkVarianceImageFilterPython.itkVarianceImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVarianceImageFilterPython.delete_itkVarianceImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkVarianceImageFilterIUC3IUC3

        Create a new object of the class itkVarianceImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVarianceImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVarianceImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVarianceImageFilterIUC3IUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVarianceImageFilterIUC3IUC3 in _itkVarianceImageFilterPython:
_itkVarianceImageFilterPython.itkVarianceImageFilterIUC3IUC3_swigregister(itkVarianceImageFilterIUC3IUC3)
itkVarianceImageFilterIUC3IUC3___New_orig__ = _itkVarianceImageFilterPython.itkVarianceImageFilterIUC3IUC3___New_orig__
itkVarianceImageFilterIUC3IUC3_cast = _itkVarianceImageFilterPython.itkVarianceImageFilterIUC3IUC3_cast


def itkVarianceImageFilterIUC4IUC4_New():
    return itkVarianceImageFilterIUC4IUC4.New()

class itkVarianceImageFilterIUC4IUC4(itk.itkBoxImageFilterPython.itkBoxImageFilterIUC4IUC4):
    r"""Proxy of C++ itkVarianceImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUC4IUC4_Clone)
    InputHasNumericTraitsCheck = _itkVarianceImageFilterPython.itkVarianceImageFilterIUC4IUC4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVarianceImageFilterPython.delete_itkVarianceImageFilterIUC4IUC4
    cast = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkVarianceImageFilterIUC4IUC4

        Create a new object of the class itkVarianceImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVarianceImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVarianceImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVarianceImageFilterIUC4IUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVarianceImageFilterIUC4IUC4 in _itkVarianceImageFilterPython:
_itkVarianceImageFilterPython.itkVarianceImageFilterIUC4IUC4_swigregister(itkVarianceImageFilterIUC4IUC4)
itkVarianceImageFilterIUC4IUC4___New_orig__ = _itkVarianceImageFilterPython.itkVarianceImageFilterIUC4IUC4___New_orig__
itkVarianceImageFilterIUC4IUC4_cast = _itkVarianceImageFilterPython.itkVarianceImageFilterIUC4IUC4_cast


def itkVarianceImageFilterIUS2IUS2_New():
    return itkVarianceImageFilterIUS2IUS2.New()

class itkVarianceImageFilterIUS2IUS2(itk.itkBoxImageFilterPython.itkBoxImageFilterIUS2IUS2):
    r"""Proxy of C++ itkVarianceImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUS2IUS2_Clone)
    InputHasNumericTraitsCheck = _itkVarianceImageFilterPython.itkVarianceImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVarianceImageFilterPython.delete_itkVarianceImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkVarianceImageFilterIUS2IUS2

        Create a new object of the class itkVarianceImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVarianceImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVarianceImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVarianceImageFilterIUS2IUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVarianceImageFilterIUS2IUS2 in _itkVarianceImageFilterPython:
_itkVarianceImageFilterPython.itkVarianceImageFilterIUS2IUS2_swigregister(itkVarianceImageFilterIUS2IUS2)
itkVarianceImageFilterIUS2IUS2___New_orig__ = _itkVarianceImageFilterPython.itkVarianceImageFilterIUS2IUS2___New_orig__
itkVarianceImageFilterIUS2IUS2_cast = _itkVarianceImageFilterPython.itkVarianceImageFilterIUS2IUS2_cast


def itkVarianceImageFilterIUS3IUS3_New():
    return itkVarianceImageFilterIUS3IUS3.New()

class itkVarianceImageFilterIUS3IUS3(itk.itkBoxImageFilterPython.itkBoxImageFilterIUS3IUS3):
    r"""Proxy of C++ itkVarianceImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUS3IUS3_Clone)
    InputHasNumericTraitsCheck = _itkVarianceImageFilterPython.itkVarianceImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVarianceImageFilterPython.delete_itkVarianceImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkVarianceImageFilterIUS3IUS3

        Create a new object of the class itkVarianceImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVarianceImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVarianceImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVarianceImageFilterIUS3IUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVarianceImageFilterIUS3IUS3 in _itkVarianceImageFilterPython:
_itkVarianceImageFilterPython.itkVarianceImageFilterIUS3IUS3_swigregister(itkVarianceImageFilterIUS3IUS3)
itkVarianceImageFilterIUS3IUS3___New_orig__ = _itkVarianceImageFilterPython.itkVarianceImageFilterIUS3IUS3___New_orig__
itkVarianceImageFilterIUS3IUS3_cast = _itkVarianceImageFilterPython.itkVarianceImageFilterIUS3IUS3_cast


def itkVarianceImageFilterIUS4IUS4_New():
    return itkVarianceImageFilterIUS4IUS4.New()

class itkVarianceImageFilterIUS4IUS4(itk.itkBoxImageFilterPython.itkBoxImageFilterIUS4IUS4):
    r"""Proxy of C++ itkVarianceImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUS4IUS4_Clone)
    InputHasNumericTraitsCheck = _itkVarianceImageFilterPython.itkVarianceImageFilterIUS4IUS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVarianceImageFilterPython.delete_itkVarianceImageFilterIUS4IUS4
    cast = _swig_new_static_method(_itkVarianceImageFilterPython.itkVarianceImageFilterIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkVarianceImageFilterIUS4IUS4

        Create a new object of the class itkVarianceImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVarianceImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVarianceImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVarianceImageFilterIUS4IUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVarianceImageFilterIUS4IUS4 in _itkVarianceImageFilterPython:
_itkVarianceImageFilterPython.itkVarianceImageFilterIUS4IUS4_swigregister(itkVarianceImageFilterIUS4IUS4)
itkVarianceImageFilterIUS4IUS4___New_orig__ = _itkVarianceImageFilterPython.itkVarianceImageFilterIUS4IUS4___New_orig__
itkVarianceImageFilterIUS4IUS4_cast = _itkVarianceImageFilterPython.itkVarianceImageFilterIUS4IUS4_cast


from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def variance_image_filter(*args, **kwargs):
    """Procedural interface for VarianceImageFilter"""
    import itk

    instance = itk.VarianceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()


def variance_image_filter_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    if isinstance(itk.VarianceImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.VarianceImageFilter.values()[0]
    else:
        filter_object = itk.VarianceImageFilter

    variance_image_filter.__doc__ = filter_object.__doc__
    variance_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    variance_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.VarianceImageFilter, itkTemplate.itkTemplate):
        variance_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        variance_image_filter.__doc__ += "\n"
        variance_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        variance_image_filter.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )




