# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _AdaptiveDenoisingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkNonLocalPatchBasedImageFilterPython
else:
    import _itkNonLocalPatchBasedImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkNonLocalPatchBasedImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkNonLocalPatchBasedImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkSizePython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_matrix_fixedPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
class itkNonLocalPatchBasedImageFilterEnums(object):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterEnums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SimilarityMetric_PEARSON_CORRELATION = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterEnums_SimilarityMetric_PEARSON_CORRELATION
    
    SimilarityMetric_MEAN_SQUARES = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterEnums_SimilarityMetric_MEAN_SQUARES
    

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNonLocalPatchBasedImageFilterEnums
        __init__(self, arg0) -> itkNonLocalPatchBasedImageFilterEnums

        Parameters
        ----------
        arg0: itkNonLocalPatchBasedImageFilterEnums const &

        """
        _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterEnums_swiginit(self, _itkNonLocalPatchBasedImageFilterPython.new_itkNonLocalPatchBasedImageFilterEnums(*args))
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterEnums

# Register itkNonLocalPatchBasedImageFilterEnums in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterEnums_swigregister(itkNonLocalPatchBasedImageFilterEnums)


def itkNonLocalPatchBasedImageFilterID2ID2_New():
    return itkNonLocalPatchBasedImageFilterID2ID2.New()

class itkNonLocalPatchBasedImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_Clone)
    SetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_SetNeighborhoodSearchRadius)
    GetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_GetNeighborhoodSearchRadius)
    SetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_SetNeighborhoodSearchSize)
    GetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_GetNeighborhoodSearchSize)
    SetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_SetNeighborhoodSearchOffsetList)
    GetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_GetNeighborhoodSearchOffsetList)
    SetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_SetNeighborhoodPatchRadius)
    GetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_GetNeighborhoodPatchRadius)
    SetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_SetNeighborhoodPatchSize)
    GetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_GetNeighborhoodPatchSize)
    SetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_SetNeighborhoodPatchOffsetList)
    GetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_GetNeighborhoodPatchOffsetList)
    SetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_SetSimilarityMetric)
    GetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_GetSimilarityMetric)
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterID2ID2
    cast = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkNonLocalPatchBasedImageFilterID2ID2

        Create a new object of the class itkNonLocalPatchBasedImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNonLocalPatchBasedImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNonLocalPatchBasedImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNonLocalPatchBasedImageFilterID2ID2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNonLocalPatchBasedImageFilterID2ID2 in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_swigregister(itkNonLocalPatchBasedImageFilterID2ID2)
itkNonLocalPatchBasedImageFilterID2ID2___New_orig__ = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2___New_orig__
itkNonLocalPatchBasedImageFilterID2ID2_cast = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID2ID2_cast


def itkNonLocalPatchBasedImageFilterID3ID3_New():
    return itkNonLocalPatchBasedImageFilterID3ID3.New()

class itkNonLocalPatchBasedImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_Clone)
    SetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_SetNeighborhoodSearchRadius)
    GetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_GetNeighborhoodSearchRadius)
    SetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_SetNeighborhoodSearchSize)
    GetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_GetNeighborhoodSearchSize)
    SetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_SetNeighborhoodSearchOffsetList)
    GetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_GetNeighborhoodSearchOffsetList)
    SetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_SetNeighborhoodPatchRadius)
    GetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_GetNeighborhoodPatchRadius)
    SetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_SetNeighborhoodPatchSize)
    GetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_GetNeighborhoodPatchSize)
    SetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_SetNeighborhoodPatchOffsetList)
    GetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_GetNeighborhoodPatchOffsetList)
    SetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_SetSimilarityMetric)
    GetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_GetSimilarityMetric)
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterID3ID3
    cast = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkNonLocalPatchBasedImageFilterID3ID3

        Create a new object of the class itkNonLocalPatchBasedImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNonLocalPatchBasedImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNonLocalPatchBasedImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNonLocalPatchBasedImageFilterID3ID3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNonLocalPatchBasedImageFilterID3ID3 in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_swigregister(itkNonLocalPatchBasedImageFilterID3ID3)
itkNonLocalPatchBasedImageFilterID3ID3___New_orig__ = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3___New_orig__
itkNonLocalPatchBasedImageFilterID3ID3_cast = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID3ID3_cast


def itkNonLocalPatchBasedImageFilterID4ID4_New():
    return itkNonLocalPatchBasedImageFilterID4ID4.New()

class itkNonLocalPatchBasedImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_Clone)
    SetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_SetNeighborhoodSearchRadius)
    GetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_GetNeighborhoodSearchRadius)
    SetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_SetNeighborhoodSearchSize)
    GetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_GetNeighborhoodSearchSize)
    SetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_SetNeighborhoodSearchOffsetList)
    GetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_GetNeighborhoodSearchOffsetList)
    SetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_SetNeighborhoodPatchRadius)
    GetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_GetNeighborhoodPatchRadius)
    SetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_SetNeighborhoodPatchSize)
    GetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_GetNeighborhoodPatchSize)
    SetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_SetNeighborhoodPatchOffsetList)
    GetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_GetNeighborhoodPatchOffsetList)
    SetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_SetSimilarityMetric)
    GetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_GetSimilarityMetric)
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterID4ID4
    cast = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkNonLocalPatchBasedImageFilterID4ID4

        Create a new object of the class itkNonLocalPatchBasedImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNonLocalPatchBasedImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNonLocalPatchBasedImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNonLocalPatchBasedImageFilterID4ID4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNonLocalPatchBasedImageFilterID4ID4 in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_swigregister(itkNonLocalPatchBasedImageFilterID4ID4)
itkNonLocalPatchBasedImageFilterID4ID4___New_orig__ = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4___New_orig__
itkNonLocalPatchBasedImageFilterID4ID4_cast = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterID4ID4_cast


def itkNonLocalPatchBasedImageFilterIF2IF2_New():
    return itkNonLocalPatchBasedImageFilterIF2IF2.New()

class itkNonLocalPatchBasedImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_Clone)
    SetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_SetNeighborhoodSearchRadius)
    GetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_GetNeighborhoodSearchRadius)
    SetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_SetNeighborhoodSearchSize)
    GetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_GetNeighborhoodSearchSize)
    SetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_SetNeighborhoodSearchOffsetList)
    GetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_GetNeighborhoodSearchOffsetList)
    SetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_SetNeighborhoodPatchRadius)
    GetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_GetNeighborhoodPatchRadius)
    SetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_SetNeighborhoodPatchSize)
    GetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_GetNeighborhoodPatchSize)
    SetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_SetNeighborhoodPatchOffsetList)
    GetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_GetNeighborhoodPatchOffsetList)
    SetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_SetSimilarityMetric)
    GetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_GetSimilarityMetric)
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterIF2IF2
    cast = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkNonLocalPatchBasedImageFilterIF2IF2

        Create a new object of the class itkNonLocalPatchBasedImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNonLocalPatchBasedImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNonLocalPatchBasedImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNonLocalPatchBasedImageFilterIF2IF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNonLocalPatchBasedImageFilterIF2IF2 in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_swigregister(itkNonLocalPatchBasedImageFilterIF2IF2)
itkNonLocalPatchBasedImageFilterIF2IF2___New_orig__ = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2___New_orig__
itkNonLocalPatchBasedImageFilterIF2IF2_cast = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF2IF2_cast


def itkNonLocalPatchBasedImageFilterIF3IF3_New():
    return itkNonLocalPatchBasedImageFilterIF3IF3.New()

class itkNonLocalPatchBasedImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_Clone)
    SetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_SetNeighborhoodSearchRadius)
    GetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_GetNeighborhoodSearchRadius)
    SetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_SetNeighborhoodSearchSize)
    GetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_GetNeighborhoodSearchSize)
    SetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_SetNeighborhoodSearchOffsetList)
    GetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_GetNeighborhoodSearchOffsetList)
    SetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_SetNeighborhoodPatchRadius)
    GetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_GetNeighborhoodPatchRadius)
    SetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_SetNeighborhoodPatchSize)
    GetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_GetNeighborhoodPatchSize)
    SetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_SetNeighborhoodPatchOffsetList)
    GetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_GetNeighborhoodPatchOffsetList)
    SetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_SetSimilarityMetric)
    GetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_GetSimilarityMetric)
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterIF3IF3
    cast = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkNonLocalPatchBasedImageFilterIF3IF3

        Create a new object of the class itkNonLocalPatchBasedImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNonLocalPatchBasedImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNonLocalPatchBasedImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNonLocalPatchBasedImageFilterIF3IF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNonLocalPatchBasedImageFilterIF3IF3 in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_swigregister(itkNonLocalPatchBasedImageFilterIF3IF3)
itkNonLocalPatchBasedImageFilterIF3IF3___New_orig__ = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3___New_orig__
itkNonLocalPatchBasedImageFilterIF3IF3_cast = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF3IF3_cast


def itkNonLocalPatchBasedImageFilterIF4IF4_New():
    return itkNonLocalPatchBasedImageFilterIF4IF4.New()

class itkNonLocalPatchBasedImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_Clone)
    SetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_SetNeighborhoodSearchRadius)
    GetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_GetNeighborhoodSearchRadius)
    SetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_SetNeighborhoodSearchSize)
    GetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_GetNeighborhoodSearchSize)
    SetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_SetNeighborhoodSearchOffsetList)
    GetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_GetNeighborhoodSearchOffsetList)
    SetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_SetNeighborhoodPatchRadius)
    GetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_GetNeighborhoodPatchRadius)
    SetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_SetNeighborhoodPatchSize)
    GetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_GetNeighborhoodPatchSize)
    SetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_SetNeighborhoodPatchOffsetList)
    GetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_GetNeighborhoodPatchOffsetList)
    SetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_SetSimilarityMetric)
    GetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_GetSimilarityMetric)
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterIF4IF4
    cast = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkNonLocalPatchBasedImageFilterIF4IF4

        Create a new object of the class itkNonLocalPatchBasedImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNonLocalPatchBasedImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNonLocalPatchBasedImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNonLocalPatchBasedImageFilterIF4IF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNonLocalPatchBasedImageFilterIF4IF4 in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_swigregister(itkNonLocalPatchBasedImageFilterIF4IF4)
itkNonLocalPatchBasedImageFilterIF4IF4___New_orig__ = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4___New_orig__
itkNonLocalPatchBasedImageFilterIF4IF4_cast = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIF4IF4_cast


def itkNonLocalPatchBasedImageFilterISS2ISS2_New():
    return itkNonLocalPatchBasedImageFilterISS2ISS2.New()

class itkNonLocalPatchBasedImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_Clone)
    SetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_SetNeighborhoodSearchRadius)
    GetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_GetNeighborhoodSearchRadius)
    SetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_SetNeighborhoodSearchSize)
    GetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_GetNeighborhoodSearchSize)
    SetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_SetNeighborhoodSearchOffsetList)
    GetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_GetNeighborhoodSearchOffsetList)
    SetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_SetNeighborhoodPatchRadius)
    GetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_GetNeighborhoodPatchRadius)
    SetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_SetNeighborhoodPatchSize)
    GetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_GetNeighborhoodPatchSize)
    SetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_SetNeighborhoodPatchOffsetList)
    GetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_GetNeighborhoodPatchOffsetList)
    SetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_SetSimilarityMetric)
    GetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_GetSimilarityMetric)
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkNonLocalPatchBasedImageFilterISS2ISS2

        Create a new object of the class itkNonLocalPatchBasedImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNonLocalPatchBasedImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNonLocalPatchBasedImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNonLocalPatchBasedImageFilterISS2ISS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNonLocalPatchBasedImageFilterISS2ISS2 in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_swigregister(itkNonLocalPatchBasedImageFilterISS2ISS2)
itkNonLocalPatchBasedImageFilterISS2ISS2___New_orig__ = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2___New_orig__
itkNonLocalPatchBasedImageFilterISS2ISS2_cast = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS2ISS2_cast


def itkNonLocalPatchBasedImageFilterISS3ISS3_New():
    return itkNonLocalPatchBasedImageFilterISS3ISS3.New()

class itkNonLocalPatchBasedImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_Clone)
    SetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_SetNeighborhoodSearchRadius)
    GetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_GetNeighborhoodSearchRadius)
    SetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_SetNeighborhoodSearchSize)
    GetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_GetNeighborhoodSearchSize)
    SetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_SetNeighborhoodSearchOffsetList)
    GetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_GetNeighborhoodSearchOffsetList)
    SetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_SetNeighborhoodPatchRadius)
    GetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_GetNeighborhoodPatchRadius)
    SetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_SetNeighborhoodPatchSize)
    GetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_GetNeighborhoodPatchSize)
    SetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_SetNeighborhoodPatchOffsetList)
    GetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_GetNeighborhoodPatchOffsetList)
    SetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_SetSimilarityMetric)
    GetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_GetSimilarityMetric)
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkNonLocalPatchBasedImageFilterISS3ISS3

        Create a new object of the class itkNonLocalPatchBasedImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNonLocalPatchBasedImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNonLocalPatchBasedImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNonLocalPatchBasedImageFilterISS3ISS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNonLocalPatchBasedImageFilterISS3ISS3 in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_swigregister(itkNonLocalPatchBasedImageFilterISS3ISS3)
itkNonLocalPatchBasedImageFilterISS3ISS3___New_orig__ = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3___New_orig__
itkNonLocalPatchBasedImageFilterISS3ISS3_cast = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS3ISS3_cast


def itkNonLocalPatchBasedImageFilterISS4ISS4_New():
    return itkNonLocalPatchBasedImageFilterISS4ISS4.New()

class itkNonLocalPatchBasedImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_Clone)
    SetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_SetNeighborhoodSearchRadius)
    GetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_GetNeighborhoodSearchRadius)
    SetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_SetNeighborhoodSearchSize)
    GetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_GetNeighborhoodSearchSize)
    SetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_SetNeighborhoodSearchOffsetList)
    GetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_GetNeighborhoodSearchOffsetList)
    SetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_SetNeighborhoodPatchRadius)
    GetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_GetNeighborhoodPatchRadius)
    SetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_SetNeighborhoodPatchSize)
    GetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_GetNeighborhoodPatchSize)
    SetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_SetNeighborhoodPatchOffsetList)
    GetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_GetNeighborhoodPatchOffsetList)
    SetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_SetSimilarityMetric)
    GetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_GetSimilarityMetric)
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterISS4ISS4
    cast = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkNonLocalPatchBasedImageFilterISS4ISS4

        Create a new object of the class itkNonLocalPatchBasedImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNonLocalPatchBasedImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNonLocalPatchBasedImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNonLocalPatchBasedImageFilterISS4ISS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNonLocalPatchBasedImageFilterISS4ISS4 in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_swigregister(itkNonLocalPatchBasedImageFilterISS4ISS4)
itkNonLocalPatchBasedImageFilterISS4ISS4___New_orig__ = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4___New_orig__
itkNonLocalPatchBasedImageFilterISS4ISS4_cast = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterISS4ISS4_cast


def itkNonLocalPatchBasedImageFilterIUC2IUC2_New():
    return itkNonLocalPatchBasedImageFilterIUC2IUC2.New()

class itkNonLocalPatchBasedImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_Clone)
    SetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_SetNeighborhoodSearchRadius)
    GetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_GetNeighborhoodSearchRadius)
    SetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_SetNeighborhoodSearchSize)
    GetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_GetNeighborhoodSearchSize)
    SetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_SetNeighborhoodSearchOffsetList)
    GetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_GetNeighborhoodSearchOffsetList)
    SetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_SetNeighborhoodPatchRadius)
    GetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_GetNeighborhoodPatchRadius)
    SetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_SetNeighborhoodPatchSize)
    GetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_GetNeighborhoodPatchSize)
    SetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_SetNeighborhoodPatchOffsetList)
    GetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_GetNeighborhoodPatchOffsetList)
    SetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_SetSimilarityMetric)
    GetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_GetSimilarityMetric)
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkNonLocalPatchBasedImageFilterIUC2IUC2

        Create a new object of the class itkNonLocalPatchBasedImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNonLocalPatchBasedImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNonLocalPatchBasedImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNonLocalPatchBasedImageFilterIUC2IUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNonLocalPatchBasedImageFilterIUC2IUC2 in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_swigregister(itkNonLocalPatchBasedImageFilterIUC2IUC2)
itkNonLocalPatchBasedImageFilterIUC2IUC2___New_orig__ = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2___New_orig__
itkNonLocalPatchBasedImageFilterIUC2IUC2_cast = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC2IUC2_cast


def itkNonLocalPatchBasedImageFilterIUC3IUC3_New():
    return itkNonLocalPatchBasedImageFilterIUC3IUC3.New()

class itkNonLocalPatchBasedImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_Clone)
    SetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_SetNeighborhoodSearchRadius)
    GetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_GetNeighborhoodSearchRadius)
    SetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_SetNeighborhoodSearchSize)
    GetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_GetNeighborhoodSearchSize)
    SetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_SetNeighborhoodSearchOffsetList)
    GetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_GetNeighborhoodSearchOffsetList)
    SetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_SetNeighborhoodPatchRadius)
    GetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_GetNeighborhoodPatchRadius)
    SetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_SetNeighborhoodPatchSize)
    GetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_GetNeighborhoodPatchSize)
    SetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_SetNeighborhoodPatchOffsetList)
    GetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_GetNeighborhoodPatchOffsetList)
    SetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_SetSimilarityMetric)
    GetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_GetSimilarityMetric)
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkNonLocalPatchBasedImageFilterIUC3IUC3

        Create a new object of the class itkNonLocalPatchBasedImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNonLocalPatchBasedImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNonLocalPatchBasedImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNonLocalPatchBasedImageFilterIUC3IUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNonLocalPatchBasedImageFilterIUC3IUC3 in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_swigregister(itkNonLocalPatchBasedImageFilterIUC3IUC3)
itkNonLocalPatchBasedImageFilterIUC3IUC3___New_orig__ = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3___New_orig__
itkNonLocalPatchBasedImageFilterIUC3IUC3_cast = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC3IUC3_cast


def itkNonLocalPatchBasedImageFilterIUC4IUC4_New():
    return itkNonLocalPatchBasedImageFilterIUC4IUC4.New()

class itkNonLocalPatchBasedImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_Clone)
    SetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_SetNeighborhoodSearchRadius)
    GetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_GetNeighborhoodSearchRadius)
    SetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_SetNeighborhoodSearchSize)
    GetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_GetNeighborhoodSearchSize)
    SetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_SetNeighborhoodSearchOffsetList)
    GetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_GetNeighborhoodSearchOffsetList)
    SetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_SetNeighborhoodPatchRadius)
    GetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_GetNeighborhoodPatchRadius)
    SetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_SetNeighborhoodPatchSize)
    GetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_GetNeighborhoodPatchSize)
    SetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_SetNeighborhoodPatchOffsetList)
    GetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_GetNeighborhoodPatchOffsetList)
    SetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_SetSimilarityMetric)
    GetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_GetSimilarityMetric)
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterIUC4IUC4
    cast = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkNonLocalPatchBasedImageFilterIUC4IUC4

        Create a new object of the class itkNonLocalPatchBasedImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNonLocalPatchBasedImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNonLocalPatchBasedImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNonLocalPatchBasedImageFilterIUC4IUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNonLocalPatchBasedImageFilterIUC4IUC4 in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_swigregister(itkNonLocalPatchBasedImageFilterIUC4IUC4)
itkNonLocalPatchBasedImageFilterIUC4IUC4___New_orig__ = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4___New_orig__
itkNonLocalPatchBasedImageFilterIUC4IUC4_cast = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUC4IUC4_cast


def itkNonLocalPatchBasedImageFilterIUS2IUS2_New():
    return itkNonLocalPatchBasedImageFilterIUS2IUS2.New()

class itkNonLocalPatchBasedImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_Clone)
    SetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_SetNeighborhoodSearchRadius)
    GetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_GetNeighborhoodSearchRadius)
    SetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_SetNeighborhoodSearchSize)
    GetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_GetNeighborhoodSearchSize)
    SetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_SetNeighborhoodSearchOffsetList)
    GetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_GetNeighborhoodSearchOffsetList)
    SetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_SetNeighborhoodPatchRadius)
    GetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_GetNeighborhoodPatchRadius)
    SetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_SetNeighborhoodPatchSize)
    GetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_GetNeighborhoodPatchSize)
    SetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_SetNeighborhoodPatchOffsetList)
    GetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_GetNeighborhoodPatchOffsetList)
    SetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_SetSimilarityMetric)
    GetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_GetSimilarityMetric)
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkNonLocalPatchBasedImageFilterIUS2IUS2

        Create a new object of the class itkNonLocalPatchBasedImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNonLocalPatchBasedImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNonLocalPatchBasedImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNonLocalPatchBasedImageFilterIUS2IUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNonLocalPatchBasedImageFilterIUS2IUS2 in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_swigregister(itkNonLocalPatchBasedImageFilterIUS2IUS2)
itkNonLocalPatchBasedImageFilterIUS2IUS2___New_orig__ = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2___New_orig__
itkNonLocalPatchBasedImageFilterIUS2IUS2_cast = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS2IUS2_cast


def itkNonLocalPatchBasedImageFilterIUS3IUS3_New():
    return itkNonLocalPatchBasedImageFilterIUS3IUS3.New()

class itkNonLocalPatchBasedImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_Clone)
    SetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_SetNeighborhoodSearchRadius)
    GetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_GetNeighborhoodSearchRadius)
    SetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_SetNeighborhoodSearchSize)
    GetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_GetNeighborhoodSearchSize)
    SetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_SetNeighborhoodSearchOffsetList)
    GetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_GetNeighborhoodSearchOffsetList)
    SetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_SetNeighborhoodPatchRadius)
    GetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_GetNeighborhoodPatchRadius)
    SetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_SetNeighborhoodPatchSize)
    GetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_GetNeighborhoodPatchSize)
    SetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_SetNeighborhoodPatchOffsetList)
    GetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_GetNeighborhoodPatchOffsetList)
    SetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_SetSimilarityMetric)
    GetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_GetSimilarityMetric)
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkNonLocalPatchBasedImageFilterIUS3IUS3

        Create a new object of the class itkNonLocalPatchBasedImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNonLocalPatchBasedImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNonLocalPatchBasedImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNonLocalPatchBasedImageFilterIUS3IUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNonLocalPatchBasedImageFilterIUS3IUS3 in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_swigregister(itkNonLocalPatchBasedImageFilterIUS3IUS3)
itkNonLocalPatchBasedImageFilterIUS3IUS3___New_orig__ = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3___New_orig__
itkNonLocalPatchBasedImageFilterIUS3IUS3_cast = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS3IUS3_cast


def itkNonLocalPatchBasedImageFilterIUS4IUS4_New():
    return itkNonLocalPatchBasedImageFilterIUS4IUS4.New()

class itkNonLocalPatchBasedImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkNonLocalPatchBasedImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_Clone)
    SetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_SetNeighborhoodSearchRadius)
    GetNeighborhoodSearchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_GetNeighborhoodSearchRadius)
    SetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_SetNeighborhoodSearchSize)
    GetNeighborhoodSearchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_GetNeighborhoodSearchSize)
    SetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_SetNeighborhoodSearchOffsetList)
    GetNeighborhoodSearchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_GetNeighborhoodSearchOffsetList)
    SetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_SetNeighborhoodPatchRadius)
    GetNeighborhoodPatchRadius = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_GetNeighborhoodPatchRadius)
    SetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_SetNeighborhoodPatchSize)
    GetNeighborhoodPatchSize = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_GetNeighborhoodPatchSize)
    SetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_SetNeighborhoodPatchOffsetList)
    GetNeighborhoodPatchOffsetList = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_GetNeighborhoodPatchOffsetList)
    SetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_SetSimilarityMetric)
    GetSimilarityMetric = _swig_new_instance_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_GetSimilarityMetric)
    __swig_destroy__ = _itkNonLocalPatchBasedImageFilterPython.delete_itkNonLocalPatchBasedImageFilterIUS4IUS4
    cast = _swig_new_static_method(_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkNonLocalPatchBasedImageFilterIUS4IUS4

        Create a new object of the class itkNonLocalPatchBasedImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNonLocalPatchBasedImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNonLocalPatchBasedImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNonLocalPatchBasedImageFilterIUS4IUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNonLocalPatchBasedImageFilterIUS4IUS4 in _itkNonLocalPatchBasedImageFilterPython:
_itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_swigregister(itkNonLocalPatchBasedImageFilterIUS4IUS4)
itkNonLocalPatchBasedImageFilterIUS4IUS4___New_orig__ = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4___New_orig__
itkNonLocalPatchBasedImageFilterIUS4IUS4_cast = _itkNonLocalPatchBasedImageFilterPython.itkNonLocalPatchBasedImageFilterIUS4IUS4_cast


from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def non_local_patch_based_image_filter(*args, **kwargs):
    """Procedural interface for NonLocalPatchBasedImageFilter"""
    import itk

    instance = itk.NonLocalPatchBasedImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()


def non_local_patch_based_image_filter_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    if isinstance(itk.NonLocalPatchBasedImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.NonLocalPatchBasedImageFilter.values()[0]
    else:
        filter_object = itk.NonLocalPatchBasedImageFilter

    non_local_patch_based_image_filter.__doc__ = filter_object.__doc__
    non_local_patch_based_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    non_local_patch_based_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.NonLocalPatchBasedImageFilter, itkTemplate.itkTemplate):
        non_local_patch_based_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        non_local_patch_based_image_filter.__doc__ += "\n"
        non_local_patch_based_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        non_local_patch_based_image_filter.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )




