
# parser_FormulaParser_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALleftLESSEQGREATEREQNOTEQUALleftGREATERLESSleftPLUSMINUSleftMULTDIVleftCARETleftAMPleftPERCENTleftUMINUSABSOLUTE_CELL AMP APOSTROPHE BACKSLASH CARET COLON COMMA DECIMAL DIV EQUAL EXCLAMATION FUNCTION GREATER GREATEREQ HASH LBRACKET LESS LESSEQ LPAREN MINUS MIXED_CELL MULT NOTEQUAL NUMBER PERCENT PLUS QUOTATION RBRACKET RELATIVE_CELL RPAREN SEMICOLON SINGLESPACE STRING VARIABLE WHITESPACE XLERRORexpressions : expression\n        expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULT expression\n                  | expression DIV expression\n                  | expression AMP expression\n        \n        expression : expression GREATER expression\n                   | expression LESS expression\n                   | expression GREATEREQ expression\n                   | expression LESSEQ expression\n                   | expression EQUAL expression\n                   | expression NOTEQUAL expression\n        expression : MINUS expression %prec UMINUS\n        expression : NUMBER\n                   | NUMBER DECIMAL NUMBER\n                   | NUMBER CARET NUMBER\n                   | NUMBER PERCENT\n        \n        expression : STRING\n        \n        expression : FUNCTION LPAREN RPAREN\n        \n        expression : FUNCTION LPAREN expseqcomma RPAREN\n                   | FUNCTION LPAREN expseqsemicolon RPAREN\n                   | FUNCTION LPAREN expseqbackslash RPAREN\n        \n        expression : array\n        \n        array : LBRACKET expseqsemicolon RBRACKET\n              | LBRACKET expseqcomma RBRACKET\n              | LBRACKET expseqbackslash RBRACKET\n        \n        expseqsemicolon : expression\n                        | SEMICOLON SEMICOLON\n                        | SEMICOLON expseqsemicolon\n                        | expseqsemicolon SEMICOLON\n                        | expseqsemicolon SEMICOLON expression\n                        | expseqsemicolon SEMICOLON SEMICOLON expression\n                        | expseqcomma SEMICOLON expseqcomma\n                        | expseqbackslash SEMICOLON expseqbackslash\n        \n        expseqcomma : expression\n                    | COMMA COMMA\n                    | COMMA expseqcomma\n                    | expseqcomma COMMA\n                    | expseqcomma COMMA expression\n                    | expseqcomma COMMA COMMA expression\n        \n        expseqbackslash : expression\n                        | BACKSLASH BACKSLASH\n                        | BACKSLASH expseqbackslash\n                        | expseqbackslash BACKSLASH\n                        | expseqbackslash BACKSLASH expression\n                        | expseqbackslash BACKSLASH BACKSLASH expression\n        \n        expression : XLERROR\n        \n        expression : LPAREN expression RPAREN\n        \n        expression : variable_sequence\n        \n        variable_sequence : VARIABLE\n        \n        variable_sequence : variable_sequence DECIMAL VARIABLE\n        \n        expression :  cell\n        \n        cell : ABSOLUTE_CELL\n             | RELATIVE_CELL\n             | MIXED_CELL\n             | ABSOLUTE_CELL COLON ABSOLUTE_CELL\n             | ABSOLUTE_CELL COLON RELATIVE_CELL\n             | ABSOLUTE_CELL COLON MIXED_CELL\n             | RELATIVE_CELL COLON ABSOLUTE_CELL\n             | RELATIVE_CELL COLON RELATIVE_CELL\n             | RELATIVE_CELL COLON MIXED_CELL\n             | MIXED_CELL COLON ABSOLUTE_CELL\n             | MIXED_CELL COLON RELATIVE_CELL\n             | MIXED_CELL COLON MIXED_CELL\n        '
    
_lr_action_items = {'CARET':([1,],[17,]),'NOTEQUAL':([1,2,5,7,9,11,12,13,14,15,16,19,27,29,31,45,46,47,48,49,54,57,60,63,64,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,97,100,101,102,103,104,105,106,],[-14,-54,-55,-52,-18,-50,-49,-47,-23,33,-53,-17,33,-13,33,-16,-15,-60,-61,-59,33,33,33,-25,-24,-26,-63,-64,-62,-19,33,-48,-51,-12,-7,-8,33,-9,-10,-2,-6,-5,-3,-4,-57,-58,-56,33,33,33,-20,-21,-22,33,33,33,]),'LESS':([1,2,5,7,9,11,12,13,14,15,16,19,27,29,31,45,46,47,48,49,54,57,60,63,64,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,97,100,101,102,103,104,105,106,],[-14,-54,-55,-52,-18,-50,-49,-47,-23,35,-53,-17,35,-13,35,-16,-15,-60,-61,-59,35,35,35,-25,-24,-26,-63,-64,-62,-19,35,-48,-51,35,-7,-8,35,35,35,-2,-6,-5,-3,-4,-57,-58,-56,35,35,35,-20,-21,-22,35,35,35,]),'NUMBER':([0,3,6,10,17,18,21,22,23,30,33,34,35,36,37,38,39,40,41,42,43,50,55,58,61,62,65,66,67,94,96,99,],[1,1,1,1,45,46,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'LBRACKET':([0,3,6,10,21,22,23,30,33,34,35,36,37,38,39,40,41,42,43,50,55,58,61,62,65,66,67,94,96,99,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'COLON':([2,5,16,],[20,28,44,]),'MIXED_CELL':([0,3,6,10,20,21,22,23,28,30,33,34,35,36,37,38,39,40,41,42,43,44,50,55,58,61,62,65,66,67,94,96,99,],[5,5,5,5,48,5,5,5,70,5,5,5,5,5,5,5,5,5,5,5,5,91,5,5,5,5,5,5,5,5,5,5,5,]),'RELATIVE_CELL':([0,3,6,10,20,21,22,23,28,30,33,34,35,36,37,38,39,40,41,42,43,44,50,55,58,61,62,65,66,67,94,96,99,],[2,2,2,2,47,2,2,2,69,2,2,2,2,2,2,2,2,2,2,2,2,90,2,2,2,2,2,2,2,2,2,2,2,]),'MINUS':([0,1,2,3,5,6,7,9,10,11,12,13,14,15,16,19,21,22,23,27,29,30,31,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,54,55,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,99,100,101,102,103,104,105,106,],[6,-14,-54,6,-55,6,-52,-18,6,-50,-49,-47,-23,42,-53,-17,6,6,6,42,-13,6,42,6,6,6,6,6,6,6,6,6,6,6,-16,-15,-60,-61,-59,6,42,6,42,6,42,6,6,-25,-24,6,6,6,-26,-63,-64,-62,-19,42,-48,-51,42,42,42,42,42,42,-2,-6,-5,-3,-4,-57,-58,-56,6,42,6,42,6,42,-20,-21,-22,42,42,42,]),'MULT':([1,2,5,7,9,11,12,13,14,15,16,19,27,29,31,45,46,47,48,49,54,57,60,63,64,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,97,100,101,102,103,104,105,106,],[-14,-54,-55,-52,-18,-50,-49,-47,-23,43,-53,-17,43,-13,43,-16,-15,-60,-61,-59,43,43,43,-25,-24,-26,-63,-64,-62,-19,43,-48,-51,43,43,43,43,43,43,43,-6,-5,43,-4,-57,-58,-56,43,43,43,-20,-21,-22,43,43,43,]),'RPAREN':([1,2,5,7,9,11,12,13,14,16,19,29,30,31,45,46,47,48,49,50,52,54,55,56,57,58,59,60,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,100,101,102,103,104,105,106,],[-14,-54,-55,-52,-18,-50,-49,-47,-23,-53,-17,-13,72,77,-16,-15,-60,-61,-59,-28,-29,-27,-42,-43,-41,-36,-37,-35,-38,-25,-24,-30,-44,-26,-63,-64,-62,-19,101,102,103,-27,-48,-51,-12,-7,-8,-11,-9,-10,-2,-6,-5,-3,-4,-57,-58,-56,-33,-39,-31,-34,-45,-20,-21,-22,-40,-32,-46,]),'SEMICOLON':([1,2,3,5,7,9,11,12,13,14,16,19,21,24,25,26,27,29,30,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,100,101,102,103,104,105,106,],[-14,-54,21,-55,-52,-18,-50,-49,-47,-23,-53,-17,50,61,65,66,-27,-13,21,-16,-15,-60,-61,-59,50,61,65,66,-27,-42,-43,-41,-36,-37,-35,-38,-25,-24,96,-44,-26,-63,-64,-62,-19,61,65,66,-27,-48,-51,-12,-7,-8,-11,-9,-10,-2,-6,-5,-3,-4,-57,-58,-56,-33,-39,-31,-34,-45,-20,-21,-22,-40,-32,-46,]),'BACKSLASH':([1,2,3,5,7,9,11,12,13,14,16,19,21,22,26,27,29,30,45,46,47,48,49,50,53,54,55,56,57,63,64,66,67,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,100,101,102,103,106,],[-14,-54,22,-55,-52,-18,-50,-49,-47,-23,-53,-17,22,55,67,-41,-13,22,-16,-15,-60,-61,-59,22,67,-41,55,67,-41,-25,-24,22,99,-26,-63,-64,-62,-19,67,-41,-48,-51,-12,-7,-8,-11,-9,-10,-2,-6,-5,-3,-4,-57,-58,-56,67,-45,-20,-21,-22,-46,]),'GREATEREQ':([1,2,5,7,9,11,12,13,14,15,16,19,27,29,31,45,46,47,48,49,54,57,60,63,64,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,97,100,101,102,103,104,105,106,],[-14,-54,-55,-52,-18,-50,-49,-47,-23,37,-53,-17,37,-13,37,-16,-15,-60,-61,-59,37,37,37,-25,-24,-26,-63,-64,-62,-19,37,-48,-51,-12,-7,-8,37,-9,-10,-2,-6,-5,-3,-4,-57,-58,-56,37,37,37,-20,-21,-22,37,37,37,]),'PLUS':([1,2,5,7,9,11,12,13,14,15,16,19,27,29,31,45,46,47,48,49,54,57,60,63,64,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,97,100,101,102,103,104,105,106,],[-14,-54,-55,-52,-18,-50,-49,-47,-23,39,-53,-17,39,-13,39,-16,-15,-60,-61,-59,39,39,39,-25,-24,-26,-63,-64,-62,-19,39,-48,-51,39,39,39,39,39,39,-2,-6,-5,-3,-4,-57,-58,-56,39,39,39,-20,-21,-22,39,39,39,]),'AMP':([1,2,5,7,9,11,12,13,14,15,16,19,27,29,31,45,46,47,48,49,54,57,60,63,64,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,97,100,101,102,103,104,105,106,],[-14,-54,-55,-52,-18,-50,-49,-47,-23,40,-53,-17,40,-13,40,-16,-15,-60,-61,-59,40,40,40,-25,-24,-26,-63,-64,-62,-19,40,-48,-51,40,40,40,40,40,40,40,-6,40,40,40,-57,-58,-56,40,40,40,-20,-21,-22,40,40,40,]),'$end':([1,2,4,5,7,9,11,12,13,14,15,16,19,29,45,46,47,48,49,63,64,68,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,101,102,103,],[-14,-54,0,-55,-52,-18,-50,-49,-47,-23,-1,-53,-17,-13,-16,-15,-60,-61,-59,-25,-24,-26,-63,-64,-62,-19,-48,-51,-12,-7,-8,-11,-9,-10,-2,-6,-5,-3,-4,-57,-58,-56,-20,-21,-22,]),'FUNCTION':([0,3,6,10,21,22,23,30,33,34,35,36,37,38,39,40,41,42,43,50,55,58,61,62,65,66,67,94,96,99,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'STRING':([0,3,6,10,21,22,23,30,33,34,35,36,37,38,39,40,41,42,43,50,55,58,61,62,65,66,67,94,96,99,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'DECIMAL':([1,11,12,78,],[18,-50,32,-51,]),'PERCENT':([1,],[19,]),'EQUAL':([1,2,5,7,9,11,12,13,14,15,16,19,27,29,31,45,46,47,48,49,54,57,60,63,64,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,97,100,101,102,103,104,105,106,],[-14,-54,-55,-52,-18,-50,-49,-47,-23,36,-53,-17,36,-13,36,-16,-15,-60,-61,-59,36,36,36,-25,-24,-26,-63,-64,-62,-19,36,-48,-51,-12,-7,-8,-11,-9,-10,-2,-6,-5,-3,-4,-57,-58,-56,36,36,36,-20,-21,-22,36,36,36,]),'LPAREN':([0,3,6,8,10,21,22,23,30,33,34,35,36,37,38,39,40,41,42,43,50,55,58,61,62,65,66,67,94,96,99,],[10,10,10,30,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'VARIABLE':([0,3,6,10,21,22,23,30,32,33,34,35,36,37,38,39,40,41,42,43,50,55,58,61,62,65,66,67,94,96,99,],[11,11,11,11,11,11,11,11,78,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'GREATER':([1,2,5,7,9,11,12,13,14,15,16,19,27,29,31,45,46,47,48,49,54,57,60,63,64,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,97,100,101,102,103,104,105,106,],[-14,-54,-55,-52,-18,-50,-49,-47,-23,34,-53,-17,34,-13,34,-16,-15,-60,-61,-59,34,34,34,-25,-24,-26,-63,-64,-62,-19,34,-48,-51,34,-7,-8,34,34,34,-2,-6,-5,-3,-4,-57,-58,-56,34,34,34,-20,-21,-22,34,34,34,]),'XLERROR':([0,3,6,10,21,22,23,30,33,34,35,36,37,38,39,40,41,42,43,50,55,58,61,62,65,66,67,94,96,99,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LESSEQ':([1,2,5,7,9,11,12,13,14,15,16,19,27,29,31,45,46,47,48,49,54,57,60,63,64,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,97,100,101,102,103,104,105,106,],[-14,-54,-55,-52,-18,-50,-49,-47,-23,38,-53,-17,38,-13,38,-16,-15,-60,-61,-59,38,38,38,-25,-24,-26,-63,-64,-62,-19,38,-48,-51,-12,-7,-8,38,-9,-10,-2,-6,-5,-3,-4,-57,-58,-56,38,38,38,-20,-21,-22,38,38,38,]),'RBRACKET':([1,2,5,7,9,11,12,13,14,16,19,24,25,26,27,29,45,46,47,48,49,50,52,54,55,56,57,58,59,60,62,63,64,65,67,68,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,100,101,102,103,104,105,106,],[-14,-54,-55,-52,-18,-50,-49,-47,-23,-53,-17,63,64,68,-27,-13,-16,-15,-60,-61,-59,-28,-29,-27,-42,-43,-41,-36,-37,-35,-38,-25,-24,-30,-44,-26,-63,-64,-62,-19,-48,-51,-12,-7,-8,-11,-9,-10,-2,-6,-5,-3,-4,-57,-58,-56,-33,-39,-31,-34,-45,-20,-21,-22,-40,-32,-46,]),'COMMA':([1,2,3,5,7,9,11,12,13,14,16,19,21,23,24,27,29,30,45,46,47,48,49,50,51,54,58,59,60,61,62,63,64,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,101,102,103,104,],[-14,-54,23,-55,-52,-18,-50,-49,-47,-23,-53,-17,23,58,62,-35,-13,23,-16,-15,-60,-61,-59,23,62,-35,58,62,-35,23,94,-25,-24,-26,-63,-64,-62,-19,62,-35,-48,-51,-12,-7,-8,-11,-9,-10,-2,-6,-5,-3,-4,-57,-58,-56,62,-39,-20,-21,-22,-40,]),'DIV':([1,2,5,7,9,11,12,13,14,15,16,19,27,29,31,45,46,47,48,49,54,57,60,63,64,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,97,100,101,102,103,104,105,106,],[-14,-54,-55,-52,-18,-50,-49,-47,-23,41,-53,-17,41,-13,41,-16,-15,-60,-61,-59,41,41,41,-25,-24,-26,-63,-64,-62,-19,41,-48,-51,41,41,41,41,41,41,41,-6,-5,41,-4,-57,-58,-56,41,41,41,-20,-21,-22,41,41,41,]),'ABSOLUTE_CELL':([0,3,6,10,20,21,22,23,28,30,33,34,35,36,37,38,39,40,41,42,43,44,50,55,58,61,62,65,66,67,94,96,99,],[16,16,16,16,49,16,16,16,71,16,16,16,16,16,16,16,16,16,16,16,16,92,16,16,16,16,16,16,16,16,16,16,16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'variable_sequence':([0,3,6,10,21,22,23,30,33,34,35,36,37,38,39,40,41,42,43,50,55,58,61,62,65,66,67,94,96,99,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'expseqcomma':([3,21,23,30,50,58,61,],[24,51,59,73,51,59,93,]),'expseqsemicolon':([3,21,30,50,],[25,52,74,52,]),'cell':([0,3,6,10,21,22,23,30,33,34,35,36,37,38,39,40,41,42,43,50,55,58,61,62,65,66,67,94,96,99,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'expseqbackslash':([3,21,22,30,50,55,66,],[26,53,56,75,53,56,98,]),'expressions':([0,],[4,]),'expression':([0,3,6,10,21,22,23,30,33,34,35,36,37,38,39,40,41,42,43,50,55,58,61,62,65,66,67,94,96,99,],[15,27,29,31,54,57,60,76,79,80,81,82,83,84,85,86,87,88,89,54,57,60,60,95,97,57,100,104,105,106,]),'array':([0,3,6,10,21,22,23,30,33,34,35,36,37,38,39,40,41,42,43,50,55,58,61,62,65,66,67,94,96,99,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expressions","S'",1,None,None,None),
  ('expressions -> expression','expressions',1,'p_expressions','parser.py',70),
  ('expression -> expression PLUS expression','expression',3,'p_expression_arithmetic_operator','parser.py',75),
  ('expression -> expression MINUS expression','expression',3,'p_expression_arithmetic_operator','parser.py',76),
  ('expression -> expression MULT expression','expression',3,'p_expression_arithmetic_operator','parser.py',77),
  ('expression -> expression DIV expression','expression',3,'p_expression_arithmetic_operator','parser.py',78),
  ('expression -> expression AMP expression','expression',3,'p_expression_arithmetic_operator','parser.py',79),
  ('expression -> expression GREATER expression','expression',3,'p_expression_logical_operator','parser.py',88),
  ('expression -> expression LESS expression','expression',3,'p_expression_logical_operator','parser.py',89),
  ('expression -> expression GREATEREQ expression','expression',3,'p_expression_logical_operator','parser.py',90),
  ('expression -> expression LESSEQ expression','expression',3,'p_expression_logical_operator','parser.py',91),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_logical_operator','parser.py',92),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_logical_operator','parser.py',93),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',98),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',103),
  ('expression -> NUMBER DECIMAL NUMBER','expression',3,'p_expression_number','parser.py',104),
  ('expression -> NUMBER CARET NUMBER','expression',3,'p_expression_number','parser.py',105),
  ('expression -> NUMBER PERCENT','expression',2,'p_expression_number','parser.py',106),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',119),
  ('expression -> FUNCTION LPAREN RPAREN','expression',3,'p_expression_function','parser.py',125),
  ('expression -> FUNCTION LPAREN expseqcomma RPAREN','expression',4,'p_expression_wargs','parser.py',131),
  ('expression -> FUNCTION LPAREN expseqsemicolon RPAREN','expression',4,'p_expression_wargs','parser.py',132),
  ('expression -> FUNCTION LPAREN expseqbackslash RPAREN','expression',4,'p_expression_wargs','parser.py',133),
  ('expression -> array','expression',1,'p_expression_array','parser.py',139),
  ('array -> LBRACKET expseqsemicolon RBRACKET','array',3,'p_array','parser.py',145),
  ('array -> LBRACKET expseqcomma RBRACKET','array',3,'p_array','parser.py',146),
  ('array -> LBRACKET expseqbackslash RBRACKET','array',3,'p_array','parser.py',147),
  ('expseqsemicolon -> expression','expseqsemicolon',1,'p_expseq_semicolon','parser.py',153),
  ('expseqsemicolon -> SEMICOLON SEMICOLON','expseqsemicolon',2,'p_expseq_semicolon','parser.py',154),
  ('expseqsemicolon -> SEMICOLON expseqsemicolon','expseqsemicolon',2,'p_expseq_semicolon','parser.py',155),
  ('expseqsemicolon -> expseqsemicolon SEMICOLON','expseqsemicolon',2,'p_expseq_semicolon','parser.py',156),
  ('expseqsemicolon -> expseqsemicolon SEMICOLON expression','expseqsemicolon',3,'p_expseq_semicolon','parser.py',157),
  ('expseqsemicolon -> expseqsemicolon SEMICOLON SEMICOLON expression','expseqsemicolon',4,'p_expseq_semicolon','parser.py',158),
  ('expseqsemicolon -> expseqcomma SEMICOLON expseqcomma','expseqsemicolon',3,'p_expseq_semicolon','parser.py',159),
  ('expseqsemicolon -> expseqbackslash SEMICOLON expseqbackslash','expseqsemicolon',3,'p_expseq_semicolon','parser.py',160),
  ('expseqcomma -> expression','expseqcomma',1,'p_expseq_comma','parser.py',182),
  ('expseqcomma -> COMMA COMMA','expseqcomma',2,'p_expseq_comma','parser.py',183),
  ('expseqcomma -> COMMA expseqcomma','expseqcomma',2,'p_expseq_comma','parser.py',184),
  ('expseqcomma -> expseqcomma COMMA','expseqcomma',2,'p_expseq_comma','parser.py',185),
  ('expseqcomma -> expseqcomma COMMA expression','expseqcomma',3,'p_expseq_comma','parser.py',186),
  ('expseqcomma -> expseqcomma COMMA COMMA expression','expseqcomma',4,'p_expseq_comma','parser.py',187),
  ('expseqbackslash -> expression','expseqbackslash',1,'p_expseq_backslash','parser.py',207),
  ('expseqbackslash -> BACKSLASH BACKSLASH','expseqbackslash',2,'p_expseq_backslash','parser.py',208),
  ('expseqbackslash -> BACKSLASH expseqbackslash','expseqbackslash',2,'p_expseq_backslash','parser.py',209),
  ('expseqbackslash -> expseqbackslash BACKSLASH','expseqbackslash',2,'p_expseq_backslash','parser.py',210),
  ('expseqbackslash -> expseqbackslash BACKSLASH expression','expseqbackslash',3,'p_expseq_backslash','parser.py',211),
  ('expseqbackslash -> expseqbackslash BACKSLASH BACKSLASH expression','expseqbackslash',4,'p_expseq_backslash','parser.py',212),
  ('expression -> XLERROR','expression',1,'p_xlerror','parser.py',231),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','parser.py',237),
  ('expression -> variable_sequence','expression',1,'p_expression_varseq','parser.py',243),
  ('variable_sequence -> VARIABLE','variable_sequence',1,'p_variable','parser.py',249),
  ('variable_sequence -> variable_sequence DECIMAL VARIABLE','variable_sequence',3,'p_variable_seq','parser.py',255),
  ('expression -> cell','expression',1,'p_expression_cell','parser.py',262),
  ('cell -> ABSOLUTE_CELL','cell',1,'p_cell','parser.py',268),
  ('cell -> RELATIVE_CELL','cell',1,'p_cell','parser.py',269),
  ('cell -> MIXED_CELL','cell',1,'p_cell','parser.py',270),
  ('cell -> ABSOLUTE_CELL COLON ABSOLUTE_CELL','cell',3,'p_cell','parser.py',271),
  ('cell -> ABSOLUTE_CELL COLON RELATIVE_CELL','cell',3,'p_cell','parser.py',272),
  ('cell -> ABSOLUTE_CELL COLON MIXED_CELL','cell',3,'p_cell','parser.py',273),
  ('cell -> RELATIVE_CELL COLON ABSOLUTE_CELL','cell',3,'p_cell','parser.py',274),
  ('cell -> RELATIVE_CELL COLON RELATIVE_CELL','cell',3,'p_cell','parser.py',275),
  ('cell -> RELATIVE_CELL COLON MIXED_CELL','cell',3,'p_cell','parser.py',276),
  ('cell -> MIXED_CELL COLON ABSOLUTE_CELL','cell',3,'p_cell','parser.py',277),
  ('cell -> MIXED_CELL COLON RELATIVE_CELL','cell',3,'p_cell','parser.py',278),
  ('cell -> MIXED_CELL COLON MIXED_CELL','cell',3,'p_cell','parser.py',279),
]
