# coding: utf-8

"""
    Adobe Experience Manager OSGI config (AEM) API

    Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API  # noqa: E501

    OpenAPI spec version: 1.0.0-pre.0
    Contact: opensource@shinesolutions.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'oauth_provider_id': 'ConfigNodePropertyString',
        'oauth_cloud_config_root': 'ConfigNodePropertyString',
        'provider_config_root': 'ConfigNodePropertyString',
        'provider_config_user_folder': 'ConfigNodePropertyDropDown',
        'provider_config_twitter_enable_params': 'ConfigNodePropertyBoolean',
        'provider_config_twitter_params': 'ConfigNodePropertyArray',
        'provider_config_refresh_userdata_enabled': 'ConfigNodePropertyBoolean'
    }

    attribute_map = {
        'oauth_provider_id': 'oauth.provider.id',
        'oauth_cloud_config_root': 'oauth.cloud.config.root',
        'provider_config_root': 'provider.config.root',
        'provider_config_user_folder': 'provider.config.user.folder',
        'provider_config_twitter_enable_params': 'provider.config.twitter.enable.params',
        'provider_config_twitter_params': 'provider.config.twitter.params',
        'provider_config_refresh_userdata_enabled': 'provider.config.refresh.userdata.enabled'
    }

    def __init__(self, oauth_provider_id=None, oauth_cloud_config_root=None, provider_config_root=None, provider_config_user_folder=None, provider_config_twitter_enable_params=None, provider_config_twitter_params=None, provider_config_refresh_userdata_enabled=None):  # noqa: E501
        """ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties - a model defined in OpenAPI"""  # noqa: E501

        self._oauth_provider_id = None
        self._oauth_cloud_config_root = None
        self._provider_config_root = None
        self._provider_config_user_folder = None
        self._provider_config_twitter_enable_params = None
        self._provider_config_twitter_params = None
        self._provider_config_refresh_userdata_enabled = None
        self.discriminator = None

        if oauth_provider_id is not None:
            self.oauth_provider_id = oauth_provider_id
        if oauth_cloud_config_root is not None:
            self.oauth_cloud_config_root = oauth_cloud_config_root
        if provider_config_root is not None:
            self.provider_config_root = provider_config_root
        if provider_config_user_folder is not None:
            self.provider_config_user_folder = provider_config_user_folder
        if provider_config_twitter_enable_params is not None:
            self.provider_config_twitter_enable_params = provider_config_twitter_enable_params
        if provider_config_twitter_params is not None:
            self.provider_config_twitter_params = provider_config_twitter_params
        if provider_config_refresh_userdata_enabled is not None:
            self.provider_config_refresh_userdata_enabled = provider_config_refresh_userdata_enabled

    @property
    def oauth_provider_id(self):
        """Gets the oauth_provider_id of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501


        :return: The oauth_provider_id of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._oauth_provider_id

    @oauth_provider_id.setter
    def oauth_provider_id(self, oauth_provider_id):
        """Sets the oauth_provider_id of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.


        :param oauth_provider_id: The oauth_provider_id of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._oauth_provider_id = oauth_provider_id

    @property
    def oauth_cloud_config_root(self):
        """Gets the oauth_cloud_config_root of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501


        :return: The oauth_cloud_config_root of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._oauth_cloud_config_root

    @oauth_cloud_config_root.setter
    def oauth_cloud_config_root(self, oauth_cloud_config_root):
        """Sets the oauth_cloud_config_root of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.


        :param oauth_cloud_config_root: The oauth_cloud_config_root of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._oauth_cloud_config_root = oauth_cloud_config_root

    @property
    def provider_config_root(self):
        """Gets the provider_config_root of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501


        :return: The provider_config_root of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._provider_config_root

    @provider_config_root.setter
    def provider_config_root(self, provider_config_root):
        """Sets the provider_config_root of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.


        :param provider_config_root: The provider_config_root of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._provider_config_root = provider_config_root

    @property
    def provider_config_user_folder(self):
        """Gets the provider_config_user_folder of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501


        :return: The provider_config_user_folder of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyDropDown
        """
        return self._provider_config_user_folder

    @provider_config_user_folder.setter
    def provider_config_user_folder(self, provider_config_user_folder):
        """Sets the provider_config_user_folder of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.


        :param provider_config_user_folder: The provider_config_user_folder of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501
        :type: ConfigNodePropertyDropDown
        """

        self._provider_config_user_folder = provider_config_user_folder

    @property
    def provider_config_twitter_enable_params(self):
        """Gets the provider_config_twitter_enable_params of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501


        :return: The provider_config_twitter_enable_params of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._provider_config_twitter_enable_params

    @provider_config_twitter_enable_params.setter
    def provider_config_twitter_enable_params(self, provider_config_twitter_enable_params):
        """Sets the provider_config_twitter_enable_params of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.


        :param provider_config_twitter_enable_params: The provider_config_twitter_enable_params of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._provider_config_twitter_enable_params = provider_config_twitter_enable_params

    @property
    def provider_config_twitter_params(self):
        """Gets the provider_config_twitter_params of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501


        :return: The provider_config_twitter_params of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._provider_config_twitter_params

    @provider_config_twitter_params.setter
    def provider_config_twitter_params(self, provider_config_twitter_params):
        """Sets the provider_config_twitter_params of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.


        :param provider_config_twitter_params: The provider_config_twitter_params of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._provider_config_twitter_params = provider_config_twitter_params

    @property
    def provider_config_refresh_userdata_enabled(self):
        """Gets the provider_config_refresh_userdata_enabled of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501


        :return: The provider_config_refresh_userdata_enabled of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._provider_config_refresh_userdata_enabled

    @provider_config_refresh_userdata_enabled.setter
    def provider_config_refresh_userdata_enabled(self, provider_config_refresh_userdata_enabled):
        """Sets the provider_config_refresh_userdata_enabled of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.


        :param provider_config_refresh_userdata_enabled: The provider_config_refresh_userdata_enabled of this ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._provider_config_refresh_userdata_enabled = provider_config_refresh_userdata_enabled

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
