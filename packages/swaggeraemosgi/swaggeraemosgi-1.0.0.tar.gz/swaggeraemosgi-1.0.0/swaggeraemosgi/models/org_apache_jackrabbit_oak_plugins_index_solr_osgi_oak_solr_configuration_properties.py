# coding: utf-8

"""
    Adobe Experience Manager OSGI config (AEM) API

    Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API  # noqa: E501

    OpenAPI spec version: 1.0.0-pre.0
    Contact: opensource@shinesolutions.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'path_desc_field': 'ConfigNodePropertyString',
        'path_child_field': 'ConfigNodePropertyString',
        'path_parent_field': 'ConfigNodePropertyString',
        'path_exact_field': 'ConfigNodePropertyString',
        'catch_all_field': 'ConfigNodePropertyString',
        'collapsed_path_field': 'ConfigNodePropertyString',
        'path_depth_field': 'ConfigNodePropertyString',
        'commit_policy': 'ConfigNodePropertyDropDown',
        'rows': 'ConfigNodePropertyInteger',
        'path_restrictions': 'ConfigNodePropertyBoolean',
        'property_restrictions': 'ConfigNodePropertyBoolean',
        'primarytypes_restrictions': 'ConfigNodePropertyBoolean',
        'ignored_properties': 'ConfigNodePropertyArray',
        'used_properties': 'ConfigNodePropertyArray',
        'type_mappings': 'ConfigNodePropertyArray',
        'property_mappings': 'ConfigNodePropertyArray',
        'collapse_jcrcontent_nodes': 'ConfigNodePropertyBoolean'
    }

    attribute_map = {
        'path_desc_field': 'path.desc.field',
        'path_child_field': 'path.child.field',
        'path_parent_field': 'path.parent.field',
        'path_exact_field': 'path.exact.field',
        'catch_all_field': 'catch.all.field',
        'collapsed_path_field': 'collapsed.path.field',
        'path_depth_field': 'path.depth.field',
        'commit_policy': 'commit.policy',
        'rows': 'rows',
        'path_restrictions': 'path.restrictions',
        'property_restrictions': 'property.restrictions',
        'primarytypes_restrictions': 'primarytypes.restrictions',
        'ignored_properties': 'ignored.properties',
        'used_properties': 'used.properties',
        'type_mappings': 'type.mappings',
        'property_mappings': 'property.mappings',
        'collapse_jcrcontent_nodes': 'collapse.jcrcontent.nodes'
    }

    def __init__(self, path_desc_field=None, path_child_field=None, path_parent_field=None, path_exact_field=None, catch_all_field=None, collapsed_path_field=None, path_depth_field=None, commit_policy=None, rows=None, path_restrictions=None, property_restrictions=None, primarytypes_restrictions=None, ignored_properties=None, used_properties=None, type_mappings=None, property_mappings=None, collapse_jcrcontent_nodes=None):  # noqa: E501
        """OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties - a model defined in OpenAPI"""  # noqa: E501

        self._path_desc_field = None
        self._path_child_field = None
        self._path_parent_field = None
        self._path_exact_field = None
        self._catch_all_field = None
        self._collapsed_path_field = None
        self._path_depth_field = None
        self._commit_policy = None
        self._rows = None
        self._path_restrictions = None
        self._property_restrictions = None
        self._primarytypes_restrictions = None
        self._ignored_properties = None
        self._used_properties = None
        self._type_mappings = None
        self._property_mappings = None
        self._collapse_jcrcontent_nodes = None
        self.discriminator = None

        if path_desc_field is not None:
            self.path_desc_field = path_desc_field
        if path_child_field is not None:
            self.path_child_field = path_child_field
        if path_parent_field is not None:
            self.path_parent_field = path_parent_field
        if path_exact_field is not None:
            self.path_exact_field = path_exact_field
        if catch_all_field is not None:
            self.catch_all_field = catch_all_field
        if collapsed_path_field is not None:
            self.collapsed_path_field = collapsed_path_field
        if path_depth_field is not None:
            self.path_depth_field = path_depth_field
        if commit_policy is not None:
            self.commit_policy = commit_policy
        if rows is not None:
            self.rows = rows
        if path_restrictions is not None:
            self.path_restrictions = path_restrictions
        if property_restrictions is not None:
            self.property_restrictions = property_restrictions
        if primarytypes_restrictions is not None:
            self.primarytypes_restrictions = primarytypes_restrictions
        if ignored_properties is not None:
            self.ignored_properties = ignored_properties
        if used_properties is not None:
            self.used_properties = used_properties
        if type_mappings is not None:
            self.type_mappings = type_mappings
        if property_mappings is not None:
            self.property_mappings = property_mappings
        if collapse_jcrcontent_nodes is not None:
            self.collapse_jcrcontent_nodes = collapse_jcrcontent_nodes

    @property
    def path_desc_field(self):
        """Gets the path_desc_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The path_desc_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._path_desc_field

    @path_desc_field.setter
    def path_desc_field(self, path_desc_field):
        """Sets the path_desc_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param path_desc_field: The path_desc_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._path_desc_field = path_desc_field

    @property
    def path_child_field(self):
        """Gets the path_child_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The path_child_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._path_child_field

    @path_child_field.setter
    def path_child_field(self, path_child_field):
        """Sets the path_child_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param path_child_field: The path_child_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._path_child_field = path_child_field

    @property
    def path_parent_field(self):
        """Gets the path_parent_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The path_parent_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._path_parent_field

    @path_parent_field.setter
    def path_parent_field(self, path_parent_field):
        """Sets the path_parent_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param path_parent_field: The path_parent_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._path_parent_field = path_parent_field

    @property
    def path_exact_field(self):
        """Gets the path_exact_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The path_exact_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._path_exact_field

    @path_exact_field.setter
    def path_exact_field(self, path_exact_field):
        """Sets the path_exact_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param path_exact_field: The path_exact_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._path_exact_field = path_exact_field

    @property
    def catch_all_field(self):
        """Gets the catch_all_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The catch_all_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._catch_all_field

    @catch_all_field.setter
    def catch_all_field(self, catch_all_field):
        """Sets the catch_all_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param catch_all_field: The catch_all_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._catch_all_field = catch_all_field

    @property
    def collapsed_path_field(self):
        """Gets the collapsed_path_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The collapsed_path_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._collapsed_path_field

    @collapsed_path_field.setter
    def collapsed_path_field(self, collapsed_path_field):
        """Sets the collapsed_path_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param collapsed_path_field: The collapsed_path_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._collapsed_path_field = collapsed_path_field

    @property
    def path_depth_field(self):
        """Gets the path_depth_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The path_depth_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._path_depth_field

    @path_depth_field.setter
    def path_depth_field(self, path_depth_field):
        """Sets the path_depth_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param path_depth_field: The path_depth_field of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._path_depth_field = path_depth_field

    @property
    def commit_policy(self):
        """Gets the commit_policy of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The commit_policy of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyDropDown
        """
        return self._commit_policy

    @commit_policy.setter
    def commit_policy(self, commit_policy):
        """Sets the commit_policy of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param commit_policy: The commit_policy of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyDropDown
        """

        self._commit_policy = commit_policy

    @property
    def rows(self):
        """Gets the rows of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The rows of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._rows

    @rows.setter
    def rows(self, rows):
        """Sets the rows of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param rows: The rows of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._rows = rows

    @property
    def path_restrictions(self):
        """Gets the path_restrictions of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The path_restrictions of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._path_restrictions

    @path_restrictions.setter
    def path_restrictions(self, path_restrictions):
        """Sets the path_restrictions of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param path_restrictions: The path_restrictions of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._path_restrictions = path_restrictions

    @property
    def property_restrictions(self):
        """Gets the property_restrictions of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The property_restrictions of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._property_restrictions

    @property_restrictions.setter
    def property_restrictions(self, property_restrictions):
        """Sets the property_restrictions of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param property_restrictions: The property_restrictions of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._property_restrictions = property_restrictions

    @property
    def primarytypes_restrictions(self):
        """Gets the primarytypes_restrictions of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The primarytypes_restrictions of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._primarytypes_restrictions

    @primarytypes_restrictions.setter
    def primarytypes_restrictions(self, primarytypes_restrictions):
        """Sets the primarytypes_restrictions of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param primarytypes_restrictions: The primarytypes_restrictions of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._primarytypes_restrictions = primarytypes_restrictions

    @property
    def ignored_properties(self):
        """Gets the ignored_properties of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The ignored_properties of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._ignored_properties

    @ignored_properties.setter
    def ignored_properties(self, ignored_properties):
        """Sets the ignored_properties of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param ignored_properties: The ignored_properties of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._ignored_properties = ignored_properties

    @property
    def used_properties(self):
        """Gets the used_properties of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The used_properties of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._used_properties

    @used_properties.setter
    def used_properties(self, used_properties):
        """Sets the used_properties of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param used_properties: The used_properties of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._used_properties = used_properties

    @property
    def type_mappings(self):
        """Gets the type_mappings of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The type_mappings of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._type_mappings

    @type_mappings.setter
    def type_mappings(self, type_mappings):
        """Sets the type_mappings of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param type_mappings: The type_mappings of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._type_mappings = type_mappings

    @property
    def property_mappings(self):
        """Gets the property_mappings of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The property_mappings of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._property_mappings

    @property_mappings.setter
    def property_mappings(self, property_mappings):
        """Sets the property_mappings of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param property_mappings: The property_mappings of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._property_mappings = property_mappings

    @property
    def collapse_jcrcontent_nodes(self):
        """Gets the collapse_jcrcontent_nodes of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501


        :return: The collapse_jcrcontent_nodes of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._collapse_jcrcontent_nodes

    @collapse_jcrcontent_nodes.setter
    def collapse_jcrcontent_nodes(self, collapse_jcrcontent_nodes):
        """Sets the collapse_jcrcontent_nodes of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.


        :param collapse_jcrcontent_nodes: The collapse_jcrcontent_nodes of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._collapse_jcrcontent_nodes = collapse_jcrcontent_nodes

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
