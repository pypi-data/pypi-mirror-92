# coding: utf-8

"""
    Adobe Experience Manager OSGI config (AEM) API

    Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API  # noqa: E501

    OpenAPI spec version: 1.0.0-pre.0
    Contact: opensource@shinesolutions.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'alias': 'ConfigNodePropertyString',
        'dav_create_absolute_uri': 'ConfigNodePropertyBoolean',
        'dav_protectedhandlers': 'ConfigNodePropertyString'
    }

    attribute_map = {
        'alias': 'alias',
        'dav_create_absolute_uri': 'dav.create-absolute-uri',
        'dav_protectedhandlers': 'dav.protectedhandlers'
    }

    def __init__(self, alias=None, dav_create_absolute_uri=None, dav_protectedhandlers=None):  # noqa: E501
        """OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties - a model defined in OpenAPI"""  # noqa: E501

        self._alias = None
        self._dav_create_absolute_uri = None
        self._dav_protectedhandlers = None
        self.discriminator = None

        if alias is not None:
            self.alias = alias
        if dav_create_absolute_uri is not None:
            self.dav_create_absolute_uri = dav_create_absolute_uri
        if dav_protectedhandlers is not None:
            self.dav_protectedhandlers = dav_protectedhandlers

    @property
    def alias(self):
        """Gets the alias of this OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties.  # noqa: E501


        :return: The alias of this OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """Sets the alias of this OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties.


        :param alias: The alias of this OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._alias = alias

    @property
    def dav_create_absolute_uri(self):
        """Gets the dav_create_absolute_uri of this OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties.  # noqa: E501


        :return: The dav_create_absolute_uri of this OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._dav_create_absolute_uri

    @dav_create_absolute_uri.setter
    def dav_create_absolute_uri(self, dav_create_absolute_uri):
        """Sets the dav_create_absolute_uri of this OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties.


        :param dav_create_absolute_uri: The dav_create_absolute_uri of this OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._dav_create_absolute_uri = dav_create_absolute_uri

    @property
    def dav_protectedhandlers(self):
        """Gets the dav_protectedhandlers of this OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties.  # noqa: E501


        :return: The dav_protectedhandlers of this OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._dav_protectedhandlers

    @dav_protectedhandlers.setter
    def dav_protectedhandlers(self, dav_protectedhandlers):
        """Sets the dav_protectedhandlers of this OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties.


        :param dav_protectedhandlers: The dav_protectedhandlers of this OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._dav_protectedhandlers = dav_protectedhandlers

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
