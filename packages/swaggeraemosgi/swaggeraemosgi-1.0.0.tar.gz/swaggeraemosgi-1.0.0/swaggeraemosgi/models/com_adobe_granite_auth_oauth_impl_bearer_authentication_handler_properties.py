# coding: utf-8

"""
    Adobe Experience Manager OSGI config (AEM) API

    Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API  # noqa: E501

    OpenAPI spec version: 1.0.0-pre.0
    Contact: opensource@shinesolutions.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'path': 'ConfigNodePropertyString',
        'oauth_client_ids_allowed': 'ConfigNodePropertyArray',
        'auth_bearer_sync_ims': 'ConfigNodePropertyBoolean',
        'auth_token_request_parameter': 'ConfigNodePropertyString',
        'oauth_bearer_configid': 'ConfigNodePropertyString',
        'oauth_jwt_support': 'ConfigNodePropertyBoolean'
    }

    attribute_map = {
        'path': 'path',
        'oauth_client_ids_allowed': 'oauth.clientIds.allowed',
        'auth_bearer_sync_ims': 'auth.bearer.sync.ims',
        'auth_token_request_parameter': 'auth.tokenRequestParameter',
        'oauth_bearer_configid': 'oauth.bearer.configid',
        'oauth_jwt_support': 'oauth.jwt.support'
    }

    def __init__(self, path=None, oauth_client_ids_allowed=None, auth_bearer_sync_ims=None, auth_token_request_parameter=None, oauth_bearer_configid=None, oauth_jwt_support=None):  # noqa: E501
        """ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties - a model defined in OpenAPI"""  # noqa: E501

        self._path = None
        self._oauth_client_ids_allowed = None
        self._auth_bearer_sync_ims = None
        self._auth_token_request_parameter = None
        self._oauth_bearer_configid = None
        self._oauth_jwt_support = None
        self.discriminator = None

        if path is not None:
            self.path = path
        if oauth_client_ids_allowed is not None:
            self.oauth_client_ids_allowed = oauth_client_ids_allowed
        if auth_bearer_sync_ims is not None:
            self.auth_bearer_sync_ims = auth_bearer_sync_ims
        if auth_token_request_parameter is not None:
            self.auth_token_request_parameter = auth_token_request_parameter
        if oauth_bearer_configid is not None:
            self.oauth_bearer_configid = oauth_bearer_configid
        if oauth_jwt_support is not None:
            self.oauth_jwt_support = oauth_jwt_support

    @property
    def path(self):
        """Gets the path of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501


        :return: The path of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.


        :param path: The path of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._path = path

    @property
    def oauth_client_ids_allowed(self):
        """Gets the oauth_client_ids_allowed of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501


        :return: The oauth_client_ids_allowed of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._oauth_client_ids_allowed

    @oauth_client_ids_allowed.setter
    def oauth_client_ids_allowed(self, oauth_client_ids_allowed):
        """Sets the oauth_client_ids_allowed of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.


        :param oauth_client_ids_allowed: The oauth_client_ids_allowed of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._oauth_client_ids_allowed = oauth_client_ids_allowed

    @property
    def auth_bearer_sync_ims(self):
        """Gets the auth_bearer_sync_ims of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501


        :return: The auth_bearer_sync_ims of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._auth_bearer_sync_ims

    @auth_bearer_sync_ims.setter
    def auth_bearer_sync_ims(self, auth_bearer_sync_ims):
        """Sets the auth_bearer_sync_ims of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.


        :param auth_bearer_sync_ims: The auth_bearer_sync_ims of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._auth_bearer_sync_ims = auth_bearer_sync_ims

    @property
    def auth_token_request_parameter(self):
        """Gets the auth_token_request_parameter of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501


        :return: The auth_token_request_parameter of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._auth_token_request_parameter

    @auth_token_request_parameter.setter
    def auth_token_request_parameter(self, auth_token_request_parameter):
        """Sets the auth_token_request_parameter of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.


        :param auth_token_request_parameter: The auth_token_request_parameter of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._auth_token_request_parameter = auth_token_request_parameter

    @property
    def oauth_bearer_configid(self):
        """Gets the oauth_bearer_configid of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501


        :return: The oauth_bearer_configid of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._oauth_bearer_configid

    @oauth_bearer_configid.setter
    def oauth_bearer_configid(self, oauth_bearer_configid):
        """Sets the oauth_bearer_configid of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.


        :param oauth_bearer_configid: The oauth_bearer_configid of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._oauth_bearer_configid = oauth_bearer_configid

    @property
    def oauth_jwt_support(self):
        """Gets the oauth_jwt_support of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501


        :return: The oauth_jwt_support of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._oauth_jwt_support

    @oauth_jwt_support.setter
    def oauth_jwt_support(self, oauth_jwt_support):
        """Sets the oauth_jwt_support of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.


        :param oauth_jwt_support: The oauth_jwt_support of this ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._oauth_jwt_support = oauth_jwt_support

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
