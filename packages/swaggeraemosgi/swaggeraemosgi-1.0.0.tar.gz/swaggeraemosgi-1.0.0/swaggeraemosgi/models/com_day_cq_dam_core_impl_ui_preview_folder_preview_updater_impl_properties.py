# coding: utf-8

"""
    Adobe Experience Manager OSGI config (AEM) API

    Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API  # noqa: E501

    OpenAPI spec version: 1.0.0-pre.0
    Contact: opensource@shinesolutions.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'create_preview_enabled': 'ConfigNodePropertyBoolean',
        'update_preview_enabled': 'ConfigNodePropertyBoolean',
        'queue_size': 'ConfigNodePropertyInteger',
        'folder_preview_rendition_regex': 'ConfigNodePropertyString'
    }

    attribute_map = {
        'create_preview_enabled': 'createPreviewEnabled',
        'update_preview_enabled': 'updatePreviewEnabled',
        'queue_size': 'queueSize',
        'folder_preview_rendition_regex': 'folderPreviewRenditionRegex'
    }

    def __init__(self, create_preview_enabled=None, update_preview_enabled=None, queue_size=None, folder_preview_rendition_regex=None):  # noqa: E501
        """ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties - a model defined in OpenAPI"""  # noqa: E501

        self._create_preview_enabled = None
        self._update_preview_enabled = None
        self._queue_size = None
        self._folder_preview_rendition_regex = None
        self.discriminator = None

        if create_preview_enabled is not None:
            self.create_preview_enabled = create_preview_enabled
        if update_preview_enabled is not None:
            self.update_preview_enabled = update_preview_enabled
        if queue_size is not None:
            self.queue_size = queue_size
        if folder_preview_rendition_regex is not None:
            self.folder_preview_rendition_regex = folder_preview_rendition_regex

    @property
    def create_preview_enabled(self):
        """Gets the create_preview_enabled of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.  # noqa: E501


        :return: The create_preview_enabled of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._create_preview_enabled

    @create_preview_enabled.setter
    def create_preview_enabled(self, create_preview_enabled):
        """Sets the create_preview_enabled of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.


        :param create_preview_enabled: The create_preview_enabled of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._create_preview_enabled = create_preview_enabled

    @property
    def update_preview_enabled(self):
        """Gets the update_preview_enabled of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.  # noqa: E501


        :return: The update_preview_enabled of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._update_preview_enabled

    @update_preview_enabled.setter
    def update_preview_enabled(self, update_preview_enabled):
        """Sets the update_preview_enabled of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.


        :param update_preview_enabled: The update_preview_enabled of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._update_preview_enabled = update_preview_enabled

    @property
    def queue_size(self):
        """Gets the queue_size of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.  # noqa: E501


        :return: The queue_size of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._queue_size

    @queue_size.setter
    def queue_size(self, queue_size):
        """Sets the queue_size of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.


        :param queue_size: The queue_size of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._queue_size = queue_size

    @property
    def folder_preview_rendition_regex(self):
        """Gets the folder_preview_rendition_regex of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.  # noqa: E501


        :return: The folder_preview_rendition_regex of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._folder_preview_rendition_regex

    @folder_preview_rendition_regex.setter
    def folder_preview_rendition_regex(self, folder_preview_rendition_regex):
        """Sets the folder_preview_rendition_regex of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.


        :param folder_preview_rendition_regex: The folder_preview_rendition_regex of this ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._folder_preview_rendition_regex = folder_preview_rendition_regex

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
