# coding: utf-8

"""
    Adobe Experience Manager OSGI config (AEM) API

    Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API  # noqa: E501

    OpenAPI spec version: 1.0.0-pre.0
    Contact: opensource@shinesolutions.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'path': 'ConfigNodePropertyString',
        'service_ranking': 'ConfigNodePropertyInteger',
        'jaas_control_flag': 'ConfigNodePropertyString',
        'jaas_realm_name': 'ConfigNodePropertyString',
        'jaas_ranking': 'ConfigNodePropertyInteger',
        'headers': 'ConfigNodePropertyArray',
        'cookies': 'ConfigNodePropertyArray',
        'parameters': 'ConfigNodePropertyArray',
        'usermap': 'ConfigNodePropertyArray',
        'format': 'ConfigNodePropertyString',
        'trusted_credentials_attribute': 'ConfigNodePropertyString'
    }

    attribute_map = {
        'path': 'path',
        'service_ranking': 'service.ranking',
        'jaas_control_flag': 'jaas.controlFlag',
        'jaas_realm_name': 'jaas.realmName',
        'jaas_ranking': 'jaas.ranking',
        'headers': 'headers',
        'cookies': 'cookies',
        'parameters': 'parameters',
        'usermap': 'usermap',
        'format': 'format',
        'trusted_credentials_attribute': 'trustedCredentialsAttribute'
    }

    def __init__(self, path=None, service_ranking=None, jaas_control_flag=None, jaas_realm_name=None, jaas_ranking=None, headers=None, cookies=None, parameters=None, usermap=None, format=None, trusted_credentials_attribute=None):  # noqa: E501
        """ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties - a model defined in OpenAPI"""  # noqa: E501

        self._path = None
        self._service_ranking = None
        self._jaas_control_flag = None
        self._jaas_realm_name = None
        self._jaas_ranking = None
        self._headers = None
        self._cookies = None
        self._parameters = None
        self._usermap = None
        self._format = None
        self._trusted_credentials_attribute = None
        self.discriminator = None

        if path is not None:
            self.path = path
        if service_ranking is not None:
            self.service_ranking = service_ranking
        if jaas_control_flag is not None:
            self.jaas_control_flag = jaas_control_flag
        if jaas_realm_name is not None:
            self.jaas_realm_name = jaas_realm_name
        if jaas_ranking is not None:
            self.jaas_ranking = jaas_ranking
        if headers is not None:
            self.headers = headers
        if cookies is not None:
            self.cookies = cookies
        if parameters is not None:
            self.parameters = parameters
        if usermap is not None:
            self.usermap = usermap
        if format is not None:
            self.format = format
        if trusted_credentials_attribute is not None:
            self.trusted_credentials_attribute = trusted_credentials_attribute

    @property
    def path(self):
        """Gets the path of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501


        :return: The path of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.


        :param path: The path of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._path = path

    @property
    def service_ranking(self):
        """Gets the service_ranking of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501


        :return: The service_ranking of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._service_ranking

    @service_ranking.setter
    def service_ranking(self, service_ranking):
        """Sets the service_ranking of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.


        :param service_ranking: The service_ranking of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._service_ranking = service_ranking

    @property
    def jaas_control_flag(self):
        """Gets the jaas_control_flag of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501


        :return: The jaas_control_flag of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._jaas_control_flag

    @jaas_control_flag.setter
    def jaas_control_flag(self, jaas_control_flag):
        """Sets the jaas_control_flag of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.


        :param jaas_control_flag: The jaas_control_flag of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._jaas_control_flag = jaas_control_flag

    @property
    def jaas_realm_name(self):
        """Gets the jaas_realm_name of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501


        :return: The jaas_realm_name of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._jaas_realm_name

    @jaas_realm_name.setter
    def jaas_realm_name(self, jaas_realm_name):
        """Sets the jaas_realm_name of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.


        :param jaas_realm_name: The jaas_realm_name of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._jaas_realm_name = jaas_realm_name

    @property
    def jaas_ranking(self):
        """Gets the jaas_ranking of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501


        :return: The jaas_ranking of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._jaas_ranking

    @jaas_ranking.setter
    def jaas_ranking(self, jaas_ranking):
        """Sets the jaas_ranking of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.


        :param jaas_ranking: The jaas_ranking of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._jaas_ranking = jaas_ranking

    @property
    def headers(self):
        """Gets the headers of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501


        :return: The headers of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.


        :param headers: The headers of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._headers = headers

    @property
    def cookies(self):
        """Gets the cookies of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501


        :return: The cookies of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._cookies

    @cookies.setter
    def cookies(self, cookies):
        """Sets the cookies of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.


        :param cookies: The cookies of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._cookies = cookies

    @property
    def parameters(self):
        """Gets the parameters of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501


        :return: The parameters of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.


        :param parameters: The parameters of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._parameters = parameters

    @property
    def usermap(self):
        """Gets the usermap of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501


        :return: The usermap of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._usermap

    @usermap.setter
    def usermap(self, usermap):
        """Sets the usermap of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.


        :param usermap: The usermap of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._usermap = usermap

    @property
    def format(self):
        """Gets the format of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501


        :return: The format of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.


        :param format: The format of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._format = format

    @property
    def trusted_credentials_attribute(self):
        """Gets the trusted_credentials_attribute of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501


        :return: The trusted_credentials_attribute of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._trusted_credentials_attribute

    @trusted_credentials_attribute.setter
    def trusted_credentials_attribute(self, trusted_credentials_attribute):
        """Sets the trusted_credentials_attribute of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.


        :param trusted_credentials_attribute: The trusted_credentials_attribute of this ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._trusted_credentials_attribute = trusted_credentials_attribute

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
