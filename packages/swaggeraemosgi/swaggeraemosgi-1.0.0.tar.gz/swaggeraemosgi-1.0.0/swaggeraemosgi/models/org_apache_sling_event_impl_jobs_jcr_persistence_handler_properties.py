# coding: utf-8

"""
    Adobe Experience Manager OSGI config (AEM) API

    Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API  # noqa: E501

    OpenAPI spec version: 1.0.0-pre.0
    Contact: opensource@shinesolutions.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class OrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'job_consumermanager_disable_distribution': 'ConfigNodePropertyBoolean',
        'startup_delay': 'ConfigNodePropertyInteger',
        'cleanup_period': 'ConfigNodePropertyInteger'
    }

    attribute_map = {
        'job_consumermanager_disable_distribution': 'job.consumermanager.disableDistribution',
        'startup_delay': 'startup.delay',
        'cleanup_period': 'cleanup.period'
    }

    def __init__(self, job_consumermanager_disable_distribution=None, startup_delay=None, cleanup_period=None):  # noqa: E501
        """OrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties - a model defined in OpenAPI"""  # noqa: E501

        self._job_consumermanager_disable_distribution = None
        self._startup_delay = None
        self._cleanup_period = None
        self.discriminator = None

        if job_consumermanager_disable_distribution is not None:
            self.job_consumermanager_disable_distribution = job_consumermanager_disable_distribution
        if startup_delay is not None:
            self.startup_delay = startup_delay
        if cleanup_period is not None:
            self.cleanup_period = cleanup_period

    @property
    def job_consumermanager_disable_distribution(self):
        """Gets the job_consumermanager_disable_distribution of this OrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties.  # noqa: E501


        :return: The job_consumermanager_disable_distribution of this OrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._job_consumermanager_disable_distribution

    @job_consumermanager_disable_distribution.setter
    def job_consumermanager_disable_distribution(self, job_consumermanager_disable_distribution):
        """Sets the job_consumermanager_disable_distribution of this OrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties.


        :param job_consumermanager_disable_distribution: The job_consumermanager_disable_distribution of this OrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._job_consumermanager_disable_distribution = job_consumermanager_disable_distribution

    @property
    def startup_delay(self):
        """Gets the startup_delay of this OrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties.  # noqa: E501


        :return: The startup_delay of this OrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._startup_delay

    @startup_delay.setter
    def startup_delay(self, startup_delay):
        """Sets the startup_delay of this OrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties.


        :param startup_delay: The startup_delay of this OrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._startup_delay = startup_delay

    @property
    def cleanup_period(self):
        """Gets the cleanup_period of this OrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties.  # noqa: E501


        :return: The cleanup_period of this OrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._cleanup_period

    @cleanup_period.setter
    def cleanup_period(self, cleanup_period):
        """Sets the cleanup_period of this OrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties.


        :param cleanup_period: The cleanup_period of this OrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._cleanup_period = cleanup_period

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
