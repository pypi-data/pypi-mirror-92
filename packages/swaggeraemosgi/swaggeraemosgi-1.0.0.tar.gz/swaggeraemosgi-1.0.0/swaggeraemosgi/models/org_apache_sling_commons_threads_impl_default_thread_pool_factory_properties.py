# coding: utf-8

"""
    Adobe Experience Manager OSGI config (AEM) API

    Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API  # noqa: E501

    OpenAPI spec version: 1.0.0-pre.0
    Contact: opensource@shinesolutions.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'name': 'ConfigNodePropertyString',
        'min_pool_size': 'ConfigNodePropertyInteger',
        'max_pool_size': 'ConfigNodePropertyInteger',
        'queue_size': 'ConfigNodePropertyInteger',
        'max_thread_age': 'ConfigNodePropertyInteger',
        'keep_alive_time': 'ConfigNodePropertyInteger',
        'block_policy': 'ConfigNodePropertyDropDown',
        'shutdown_graceful': 'ConfigNodePropertyBoolean',
        'daemon': 'ConfigNodePropertyBoolean',
        'shutdown_wait_time': 'ConfigNodePropertyInteger',
        'priority': 'ConfigNodePropertyDropDown'
    }

    attribute_map = {
        'name': 'name',
        'min_pool_size': 'minPoolSize',
        'max_pool_size': 'maxPoolSize',
        'queue_size': 'queueSize',
        'max_thread_age': 'maxThreadAge',
        'keep_alive_time': 'keepAliveTime',
        'block_policy': 'blockPolicy',
        'shutdown_graceful': 'shutdownGraceful',
        'daemon': 'daemon',
        'shutdown_wait_time': 'shutdownWaitTime',
        'priority': 'priority'
    }

    def __init__(self, name=None, min_pool_size=None, max_pool_size=None, queue_size=None, max_thread_age=None, keep_alive_time=None, block_policy=None, shutdown_graceful=None, daemon=None, shutdown_wait_time=None, priority=None):  # noqa: E501
        """OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties - a model defined in OpenAPI"""  # noqa: E501

        self._name = None
        self._min_pool_size = None
        self._max_pool_size = None
        self._queue_size = None
        self._max_thread_age = None
        self._keep_alive_time = None
        self._block_policy = None
        self._shutdown_graceful = None
        self._daemon = None
        self._shutdown_wait_time = None
        self._priority = None
        self.discriminator = None

        if name is not None:
            self.name = name
        if min_pool_size is not None:
            self.min_pool_size = min_pool_size
        if max_pool_size is not None:
            self.max_pool_size = max_pool_size
        if queue_size is not None:
            self.queue_size = queue_size
        if max_thread_age is not None:
            self.max_thread_age = max_thread_age
        if keep_alive_time is not None:
            self.keep_alive_time = keep_alive_time
        if block_policy is not None:
            self.block_policy = block_policy
        if shutdown_graceful is not None:
            self.shutdown_graceful = shutdown_graceful
        if daemon is not None:
            self.daemon = daemon
        if shutdown_wait_time is not None:
            self.shutdown_wait_time = shutdown_wait_time
        if priority is not None:
            self.priority = priority

    @property
    def name(self):
        """Gets the name of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501


        :return: The name of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.


        :param name: The name of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._name = name

    @property
    def min_pool_size(self):
        """Gets the min_pool_size of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501


        :return: The min_pool_size of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._min_pool_size

    @min_pool_size.setter
    def min_pool_size(self, min_pool_size):
        """Sets the min_pool_size of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.


        :param min_pool_size: The min_pool_size of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._min_pool_size = min_pool_size

    @property
    def max_pool_size(self):
        """Gets the max_pool_size of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501


        :return: The max_pool_size of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._max_pool_size

    @max_pool_size.setter
    def max_pool_size(self, max_pool_size):
        """Sets the max_pool_size of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.


        :param max_pool_size: The max_pool_size of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._max_pool_size = max_pool_size

    @property
    def queue_size(self):
        """Gets the queue_size of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501


        :return: The queue_size of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._queue_size

    @queue_size.setter
    def queue_size(self, queue_size):
        """Sets the queue_size of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.


        :param queue_size: The queue_size of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._queue_size = queue_size

    @property
    def max_thread_age(self):
        """Gets the max_thread_age of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501


        :return: The max_thread_age of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._max_thread_age

    @max_thread_age.setter
    def max_thread_age(self, max_thread_age):
        """Sets the max_thread_age of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.


        :param max_thread_age: The max_thread_age of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._max_thread_age = max_thread_age

    @property
    def keep_alive_time(self):
        """Gets the keep_alive_time of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501


        :return: The keep_alive_time of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._keep_alive_time

    @keep_alive_time.setter
    def keep_alive_time(self, keep_alive_time):
        """Sets the keep_alive_time of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.


        :param keep_alive_time: The keep_alive_time of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._keep_alive_time = keep_alive_time

    @property
    def block_policy(self):
        """Gets the block_policy of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501


        :return: The block_policy of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :rtype: ConfigNodePropertyDropDown
        """
        return self._block_policy

    @block_policy.setter
    def block_policy(self, block_policy):
        """Sets the block_policy of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.


        :param block_policy: The block_policy of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :type: ConfigNodePropertyDropDown
        """

        self._block_policy = block_policy

    @property
    def shutdown_graceful(self):
        """Gets the shutdown_graceful of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501


        :return: The shutdown_graceful of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._shutdown_graceful

    @shutdown_graceful.setter
    def shutdown_graceful(self, shutdown_graceful):
        """Sets the shutdown_graceful of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.


        :param shutdown_graceful: The shutdown_graceful of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._shutdown_graceful = shutdown_graceful

    @property
    def daemon(self):
        """Gets the daemon of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501


        :return: The daemon of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._daemon

    @daemon.setter
    def daemon(self, daemon):
        """Sets the daemon of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.


        :param daemon: The daemon of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._daemon = daemon

    @property
    def shutdown_wait_time(self):
        """Gets the shutdown_wait_time of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501


        :return: The shutdown_wait_time of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._shutdown_wait_time

    @shutdown_wait_time.setter
    def shutdown_wait_time(self, shutdown_wait_time):
        """Sets the shutdown_wait_time of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.


        :param shutdown_wait_time: The shutdown_wait_time of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._shutdown_wait_time = shutdown_wait_time

    @property
    def priority(self):
        """Gets the priority of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501


        :return: The priority of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :rtype: ConfigNodePropertyDropDown
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.


        :param priority: The priority of this OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties.  # noqa: E501
        :type: ConfigNodePropertyDropDown
        """

        self._priority = priority

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
