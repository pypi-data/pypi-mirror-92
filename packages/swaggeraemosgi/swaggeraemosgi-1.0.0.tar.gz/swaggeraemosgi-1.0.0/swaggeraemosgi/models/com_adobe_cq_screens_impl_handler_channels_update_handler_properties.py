# coding: utf-8

"""
    Adobe Experience Manager OSGI config (AEM) API

    Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API  # noqa: E501

    OpenAPI spec version: 1.0.0-pre.0
    Contact: opensource@shinesolutions.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'cq_pagesupdatehandler_imageresourcetypes': 'ConfigNodePropertyArray',
        'cq_pagesupdatehandler_productresourcetypes': 'ConfigNodePropertyArray',
        'cq_pagesupdatehandler_videoresourcetypes': 'ConfigNodePropertyArray',
        'cq_pagesupdatehandler_dynamicsequenceresourcetypes': 'ConfigNodePropertyArray',
        'cq_pagesupdatehandler_previewmodepaths': 'ConfigNodePropertyArray'
    }

    attribute_map = {
        'cq_pagesupdatehandler_imageresourcetypes': 'cq.pagesupdatehandler.imageresourcetypes',
        'cq_pagesupdatehandler_productresourcetypes': 'cq.pagesupdatehandler.productresourcetypes',
        'cq_pagesupdatehandler_videoresourcetypes': 'cq.pagesupdatehandler.videoresourcetypes',
        'cq_pagesupdatehandler_dynamicsequenceresourcetypes': 'cq.pagesupdatehandler.dynamicsequenceresourcetypes',
        'cq_pagesupdatehandler_previewmodepaths': 'cq.pagesupdatehandler.previewmodepaths'
    }

    def __init__(self, cq_pagesupdatehandler_imageresourcetypes=None, cq_pagesupdatehandler_productresourcetypes=None, cq_pagesupdatehandler_videoresourcetypes=None, cq_pagesupdatehandler_dynamicsequenceresourcetypes=None, cq_pagesupdatehandler_previewmodepaths=None):  # noqa: E501
        """ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties - a model defined in OpenAPI"""  # noqa: E501

        self._cq_pagesupdatehandler_imageresourcetypes = None
        self._cq_pagesupdatehandler_productresourcetypes = None
        self._cq_pagesupdatehandler_videoresourcetypes = None
        self._cq_pagesupdatehandler_dynamicsequenceresourcetypes = None
        self._cq_pagesupdatehandler_previewmodepaths = None
        self.discriminator = None

        if cq_pagesupdatehandler_imageresourcetypes is not None:
            self.cq_pagesupdatehandler_imageresourcetypes = cq_pagesupdatehandler_imageresourcetypes
        if cq_pagesupdatehandler_productresourcetypes is not None:
            self.cq_pagesupdatehandler_productresourcetypes = cq_pagesupdatehandler_productresourcetypes
        if cq_pagesupdatehandler_videoresourcetypes is not None:
            self.cq_pagesupdatehandler_videoresourcetypes = cq_pagesupdatehandler_videoresourcetypes
        if cq_pagesupdatehandler_dynamicsequenceresourcetypes is not None:
            self.cq_pagesupdatehandler_dynamicsequenceresourcetypes = cq_pagesupdatehandler_dynamicsequenceresourcetypes
        if cq_pagesupdatehandler_previewmodepaths is not None:
            self.cq_pagesupdatehandler_previewmodepaths = cq_pagesupdatehandler_previewmodepaths

    @property
    def cq_pagesupdatehandler_imageresourcetypes(self):
        """Gets the cq_pagesupdatehandler_imageresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.  # noqa: E501


        :return: The cq_pagesupdatehandler_imageresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._cq_pagesupdatehandler_imageresourcetypes

    @cq_pagesupdatehandler_imageresourcetypes.setter
    def cq_pagesupdatehandler_imageresourcetypes(self, cq_pagesupdatehandler_imageresourcetypes):
        """Sets the cq_pagesupdatehandler_imageresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.


        :param cq_pagesupdatehandler_imageresourcetypes: The cq_pagesupdatehandler_imageresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._cq_pagesupdatehandler_imageresourcetypes = cq_pagesupdatehandler_imageresourcetypes

    @property
    def cq_pagesupdatehandler_productresourcetypes(self):
        """Gets the cq_pagesupdatehandler_productresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.  # noqa: E501


        :return: The cq_pagesupdatehandler_productresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._cq_pagesupdatehandler_productresourcetypes

    @cq_pagesupdatehandler_productresourcetypes.setter
    def cq_pagesupdatehandler_productresourcetypes(self, cq_pagesupdatehandler_productresourcetypes):
        """Sets the cq_pagesupdatehandler_productresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.


        :param cq_pagesupdatehandler_productresourcetypes: The cq_pagesupdatehandler_productresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._cq_pagesupdatehandler_productresourcetypes = cq_pagesupdatehandler_productresourcetypes

    @property
    def cq_pagesupdatehandler_videoresourcetypes(self):
        """Gets the cq_pagesupdatehandler_videoresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.  # noqa: E501


        :return: The cq_pagesupdatehandler_videoresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._cq_pagesupdatehandler_videoresourcetypes

    @cq_pagesupdatehandler_videoresourcetypes.setter
    def cq_pagesupdatehandler_videoresourcetypes(self, cq_pagesupdatehandler_videoresourcetypes):
        """Sets the cq_pagesupdatehandler_videoresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.


        :param cq_pagesupdatehandler_videoresourcetypes: The cq_pagesupdatehandler_videoresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._cq_pagesupdatehandler_videoresourcetypes = cq_pagesupdatehandler_videoresourcetypes

    @property
    def cq_pagesupdatehandler_dynamicsequenceresourcetypes(self):
        """Gets the cq_pagesupdatehandler_dynamicsequenceresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.  # noqa: E501


        :return: The cq_pagesupdatehandler_dynamicsequenceresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._cq_pagesupdatehandler_dynamicsequenceresourcetypes

    @cq_pagesupdatehandler_dynamicsequenceresourcetypes.setter
    def cq_pagesupdatehandler_dynamicsequenceresourcetypes(self, cq_pagesupdatehandler_dynamicsequenceresourcetypes):
        """Sets the cq_pagesupdatehandler_dynamicsequenceresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.


        :param cq_pagesupdatehandler_dynamicsequenceresourcetypes: The cq_pagesupdatehandler_dynamicsequenceresourcetypes of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._cq_pagesupdatehandler_dynamicsequenceresourcetypes = cq_pagesupdatehandler_dynamicsequenceresourcetypes

    @property
    def cq_pagesupdatehandler_previewmodepaths(self):
        """Gets the cq_pagesupdatehandler_previewmodepaths of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.  # noqa: E501


        :return: The cq_pagesupdatehandler_previewmodepaths of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._cq_pagesupdatehandler_previewmodepaths

    @cq_pagesupdatehandler_previewmodepaths.setter
    def cq_pagesupdatehandler_previewmodepaths(self, cq_pagesupdatehandler_previewmodepaths):
        """Sets the cq_pagesupdatehandler_previewmodepaths of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.


        :param cq_pagesupdatehandler_previewmodepaths: The cq_pagesupdatehandler_previewmodepaths of this ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._cq_pagesupdatehandler_previewmodepaths = cq_pagesupdatehandler_previewmodepaths

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
