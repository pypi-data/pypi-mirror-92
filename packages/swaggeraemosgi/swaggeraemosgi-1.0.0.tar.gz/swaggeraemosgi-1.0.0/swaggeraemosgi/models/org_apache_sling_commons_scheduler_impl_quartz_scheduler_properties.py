# coding: utf-8

"""
    Adobe Experience Manager OSGI config (AEM) API

    Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API  # noqa: E501

    OpenAPI spec version: 1.0.0-pre.0
    Contact: opensource@shinesolutions.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'pool_name': 'ConfigNodePropertyString',
        'allowed_pool_names': 'ConfigNodePropertyArray',
        'scheduler_useleaderforsingle': 'ConfigNodePropertyBoolean',
        'metrics_filters': 'ConfigNodePropertyArray',
        'slow_threshold_millis': 'ConfigNodePropertyInteger'
    }

    attribute_map = {
        'pool_name': 'poolName',
        'allowed_pool_names': 'allowedPoolNames',
        'scheduler_useleaderforsingle': 'scheduler.useleaderforsingle',
        'metrics_filters': 'metrics.filters',
        'slow_threshold_millis': 'slowThresholdMillis'
    }

    def __init__(self, pool_name=None, allowed_pool_names=None, scheduler_useleaderforsingle=None, metrics_filters=None, slow_threshold_millis=None):  # noqa: E501
        """OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties - a model defined in OpenAPI"""  # noqa: E501

        self._pool_name = None
        self._allowed_pool_names = None
        self._scheduler_useleaderforsingle = None
        self._metrics_filters = None
        self._slow_threshold_millis = None
        self.discriminator = None

        if pool_name is not None:
            self.pool_name = pool_name
        if allowed_pool_names is not None:
            self.allowed_pool_names = allowed_pool_names
        if scheduler_useleaderforsingle is not None:
            self.scheduler_useleaderforsingle = scheduler_useleaderforsingle
        if metrics_filters is not None:
            self.metrics_filters = metrics_filters
        if slow_threshold_millis is not None:
            self.slow_threshold_millis = slow_threshold_millis

    @property
    def pool_name(self):
        """Gets the pool_name of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.  # noqa: E501


        :return: The pool_name of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._pool_name

    @pool_name.setter
    def pool_name(self, pool_name):
        """Sets the pool_name of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.


        :param pool_name: The pool_name of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._pool_name = pool_name

    @property
    def allowed_pool_names(self):
        """Gets the allowed_pool_names of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.  # noqa: E501


        :return: The allowed_pool_names of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._allowed_pool_names

    @allowed_pool_names.setter
    def allowed_pool_names(self, allowed_pool_names):
        """Sets the allowed_pool_names of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.


        :param allowed_pool_names: The allowed_pool_names of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._allowed_pool_names = allowed_pool_names

    @property
    def scheduler_useleaderforsingle(self):
        """Gets the scheduler_useleaderforsingle of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.  # noqa: E501


        :return: The scheduler_useleaderforsingle of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._scheduler_useleaderforsingle

    @scheduler_useleaderforsingle.setter
    def scheduler_useleaderforsingle(self, scheduler_useleaderforsingle):
        """Sets the scheduler_useleaderforsingle of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.


        :param scheduler_useleaderforsingle: The scheduler_useleaderforsingle of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._scheduler_useleaderforsingle = scheduler_useleaderforsingle

    @property
    def metrics_filters(self):
        """Gets the metrics_filters of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.  # noqa: E501


        :return: The metrics_filters of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyArray
        """
        return self._metrics_filters

    @metrics_filters.setter
    def metrics_filters(self, metrics_filters):
        """Sets the metrics_filters of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.


        :param metrics_filters: The metrics_filters of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.  # noqa: E501
        :type: ConfigNodePropertyArray
        """

        self._metrics_filters = metrics_filters

    @property
    def slow_threshold_millis(self):
        """Gets the slow_threshold_millis of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.  # noqa: E501


        :return: The slow_threshold_millis of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._slow_threshold_millis

    @slow_threshold_millis.setter
    def slow_threshold_millis(self, slow_threshold_millis):
        """Sets the slow_threshold_millis of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.


        :param slow_threshold_millis: The slow_threshold_millis of this OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._slow_threshold_millis = slow_threshold_millis

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
