# coding: utf-8

"""
    Adobe Experience Manager OSGI config (AEM) API

    Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API  # noqa: E501

    OpenAPI spec version: 1.0.0-pre.0
    Contact: opensource@shinesolutions.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class ComDayCqDamCoreImplExpiryNotificationJobImplProperties(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'cq_dam_expiry_notification_scheduler_istimebased': 'ConfigNodePropertyBoolean',
        'cq_dam_expiry_notification_scheduler_timebased_rule': 'ConfigNodePropertyString',
        'cq_dam_expiry_notification_scheduler_period_rule': 'ConfigNodePropertyInteger',
        'send_email': 'ConfigNodePropertyBoolean',
        'asset_expired_limit': 'ConfigNodePropertyInteger',
        'prior_notification_seconds': 'ConfigNodePropertyInteger',
        'cq_dam_expiry_notification_url_protocol': 'ConfigNodePropertyString'
    }

    attribute_map = {
        'cq_dam_expiry_notification_scheduler_istimebased': 'cq.dam.expiry.notification.scheduler.istimebased',
        'cq_dam_expiry_notification_scheduler_timebased_rule': 'cq.dam.expiry.notification.scheduler.timebased.rule',
        'cq_dam_expiry_notification_scheduler_period_rule': 'cq.dam.expiry.notification.scheduler.period.rule',
        'send_email': 'send_email',
        'asset_expired_limit': 'asset_expired_limit',
        'prior_notification_seconds': 'prior_notification_seconds',
        'cq_dam_expiry_notification_url_protocol': 'cq.dam.expiry.notification.url.protocol'
    }

    def __init__(self, cq_dam_expiry_notification_scheduler_istimebased=None, cq_dam_expiry_notification_scheduler_timebased_rule=None, cq_dam_expiry_notification_scheduler_period_rule=None, send_email=None, asset_expired_limit=None, prior_notification_seconds=None, cq_dam_expiry_notification_url_protocol=None):  # noqa: E501
        """ComDayCqDamCoreImplExpiryNotificationJobImplProperties - a model defined in OpenAPI"""  # noqa: E501

        self._cq_dam_expiry_notification_scheduler_istimebased = None
        self._cq_dam_expiry_notification_scheduler_timebased_rule = None
        self._cq_dam_expiry_notification_scheduler_period_rule = None
        self._send_email = None
        self._asset_expired_limit = None
        self._prior_notification_seconds = None
        self._cq_dam_expiry_notification_url_protocol = None
        self.discriminator = None

        if cq_dam_expiry_notification_scheduler_istimebased is not None:
            self.cq_dam_expiry_notification_scheduler_istimebased = cq_dam_expiry_notification_scheduler_istimebased
        if cq_dam_expiry_notification_scheduler_timebased_rule is not None:
            self.cq_dam_expiry_notification_scheduler_timebased_rule = cq_dam_expiry_notification_scheduler_timebased_rule
        if cq_dam_expiry_notification_scheduler_period_rule is not None:
            self.cq_dam_expiry_notification_scheduler_period_rule = cq_dam_expiry_notification_scheduler_period_rule
        if send_email is not None:
            self.send_email = send_email
        if asset_expired_limit is not None:
            self.asset_expired_limit = asset_expired_limit
        if prior_notification_seconds is not None:
            self.prior_notification_seconds = prior_notification_seconds
        if cq_dam_expiry_notification_url_protocol is not None:
            self.cq_dam_expiry_notification_url_protocol = cq_dam_expiry_notification_url_protocol

    @property
    def cq_dam_expiry_notification_scheduler_istimebased(self):
        """Gets the cq_dam_expiry_notification_scheduler_istimebased of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501


        :return: The cq_dam_expiry_notification_scheduler_istimebased of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._cq_dam_expiry_notification_scheduler_istimebased

    @cq_dam_expiry_notification_scheduler_istimebased.setter
    def cq_dam_expiry_notification_scheduler_istimebased(self, cq_dam_expiry_notification_scheduler_istimebased):
        """Sets the cq_dam_expiry_notification_scheduler_istimebased of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.


        :param cq_dam_expiry_notification_scheduler_istimebased: The cq_dam_expiry_notification_scheduler_istimebased of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._cq_dam_expiry_notification_scheduler_istimebased = cq_dam_expiry_notification_scheduler_istimebased

    @property
    def cq_dam_expiry_notification_scheduler_timebased_rule(self):
        """Gets the cq_dam_expiry_notification_scheduler_timebased_rule of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501


        :return: The cq_dam_expiry_notification_scheduler_timebased_rule of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._cq_dam_expiry_notification_scheduler_timebased_rule

    @cq_dam_expiry_notification_scheduler_timebased_rule.setter
    def cq_dam_expiry_notification_scheduler_timebased_rule(self, cq_dam_expiry_notification_scheduler_timebased_rule):
        """Sets the cq_dam_expiry_notification_scheduler_timebased_rule of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.


        :param cq_dam_expiry_notification_scheduler_timebased_rule: The cq_dam_expiry_notification_scheduler_timebased_rule of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._cq_dam_expiry_notification_scheduler_timebased_rule = cq_dam_expiry_notification_scheduler_timebased_rule

    @property
    def cq_dam_expiry_notification_scheduler_period_rule(self):
        """Gets the cq_dam_expiry_notification_scheduler_period_rule of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501


        :return: The cq_dam_expiry_notification_scheduler_period_rule of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._cq_dam_expiry_notification_scheduler_period_rule

    @cq_dam_expiry_notification_scheduler_period_rule.setter
    def cq_dam_expiry_notification_scheduler_period_rule(self, cq_dam_expiry_notification_scheduler_period_rule):
        """Sets the cq_dam_expiry_notification_scheduler_period_rule of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.


        :param cq_dam_expiry_notification_scheduler_period_rule: The cq_dam_expiry_notification_scheduler_period_rule of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._cq_dam_expiry_notification_scheduler_period_rule = cq_dam_expiry_notification_scheduler_period_rule

    @property
    def send_email(self):
        """Gets the send_email of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501


        :return: The send_email of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyBoolean
        """
        return self._send_email

    @send_email.setter
    def send_email(self, send_email):
        """Sets the send_email of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.


        :param send_email: The send_email of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501
        :type: ConfigNodePropertyBoolean
        """

        self._send_email = send_email

    @property
    def asset_expired_limit(self):
        """Gets the asset_expired_limit of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501


        :return: The asset_expired_limit of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._asset_expired_limit

    @asset_expired_limit.setter
    def asset_expired_limit(self, asset_expired_limit):
        """Sets the asset_expired_limit of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.


        :param asset_expired_limit: The asset_expired_limit of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._asset_expired_limit = asset_expired_limit

    @property
    def prior_notification_seconds(self):
        """Gets the prior_notification_seconds of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501


        :return: The prior_notification_seconds of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyInteger
        """
        return self._prior_notification_seconds

    @prior_notification_seconds.setter
    def prior_notification_seconds(self, prior_notification_seconds):
        """Sets the prior_notification_seconds of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.


        :param prior_notification_seconds: The prior_notification_seconds of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501
        :type: ConfigNodePropertyInteger
        """

        self._prior_notification_seconds = prior_notification_seconds

    @property
    def cq_dam_expiry_notification_url_protocol(self):
        """Gets the cq_dam_expiry_notification_url_protocol of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501


        :return: The cq_dam_expiry_notification_url_protocol of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501
        :rtype: ConfigNodePropertyString
        """
        return self._cq_dam_expiry_notification_url_protocol

    @cq_dam_expiry_notification_url_protocol.setter
    def cq_dam_expiry_notification_url_protocol(self, cq_dam_expiry_notification_url_protocol):
        """Sets the cq_dam_expiry_notification_url_protocol of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.


        :param cq_dam_expiry_notification_url_protocol: The cq_dam_expiry_notification_url_protocol of this ComDayCqDamCoreImplExpiryNotificationJobImplProperties.  # noqa: E501
        :type: ConfigNodePropertyString
        """

        self._cq_dam_expiry_notification_url_protocol = cq_dam_expiry_notification_url_protocol

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ComDayCqDamCoreImplExpiryNotificationJobImplProperties):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
