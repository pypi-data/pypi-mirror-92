Metadata-Version: 2.1
Name: asyncgTTS
Version: 0.1.0
Summary: Async interfaces to the official Google Text to Speech or easygtts APIs
Home-page: https://github.com/gnome-py/asyncgTTS
Author: Gnome-py
Author-email: gnome6669.py@gmail.com
License: MIT
Download-URL: https://github.com/Gnome-py/asyncgTTS/archive/v0.1.0.tar.gz
Keywords: async,TTS,gtts,text to speech
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Description-Content-Type: text/markdown
Requires-Dist: aiohttp

# asyncgTTS

Asynchronous interfaces to the [official Google Text to Speech](https://cloud.google.com/text-to-speech) or [easygTTS](https://github.com/Gnome-py/easy-gtts-api) APIs written with aiohttp.  

## Examples

### asyncgTTS
```python
import asyncio
import asyncgTTS
from subprocess import PIPE, run

async def main():
    token = run(['gcloud', 'auth', 'application-default', 'print-access-token'], stdout=PIPE).stdout.decode().replace("\n", "")
    async with await asyncgTTS.setup(premium=True, auth_token=token) as gtts:
        hello_world_ogg = await gtts.get("Hello World", voice_lang=("en-US-Standard-B", "en-us"))
        hello_world_mp3 = await gtts.get("Hello World", voice_lang=("en-US-Standard-A", "en-us"), ret_type="MP3")

    with open("Hello_world.ogg", "wb") as f:
        f.write(hello_world_ogg)
    with open("Hello_world.mp3", "wb") as f:
        f.write(hello_world_mp3)

asyncio.run(main())
```

### easygTTS
```python
import asyncgTTS
import asyncio

async def main():
    async with await asyncgTTS.setup(premium=False) as gtts:
        hello_world = await gtts.get(text="Hello World")

    with open("Hello_world.mp3", "wb") as f:
        f.write(hello_world)

asyncio.run(main())
```

