[build-system]
    requires = ["poetry>=0.12"]
    build-backend = "poetry.masonry.api"


#: -- POETRY CONFIG --------------------------------------------------------------------
[tool.poetry]
    name = "formelsammlung"
    version = "3.2.0"
    description = "Collection of different functions"
    authors = ["Cielquan <cielquan@protonmail.com>"]
    license = "GPL-3.0-or-later"
    repository = "https://github.com/Cielquan/formelsammlung"
    documentation = "https://formelsammlung.readthedocs.io/en/stable/"
    readme = "README.rst"
    classifiers = [
        "Development Status :: 5 - Production/Stable",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
        "Natural Language :: English",
        "Operating System :: MacOS",
        "Operating System :: Microsoft :: Windows :: Windows 10",
        "Operating System :: POSIX :: Linux",
        "Programming Language :: Python",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3 :: Only",
        "Programming Language :: Python :: 3.6",
        "Programming Language :: Python :: 3.7",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: Implementation :: CPython",
        "Topic :: Software Development",
        "Topic :: Utilities",
    ]
    packages = [
        { include = "formelsammlung", from = "src" },
    ]

    [tool.poetry.dependencies]
        python = "^3.6.1"
        importlib-metadata = {version = ">1.6;<3.0", python = "<3.8"}
        flask = {version = "^1.1.2", optional = true}
        #: Testing
        pytest = {version = "^6", optional = true}
        pytest-xdist = {version = "^1.34", optional = true}
        pytest-cov = {version = "^2.10", optional = true}
        coverage = {extras = ["toml"], version = "^5.2.1", optional = true}
        pytest-sugar = {version = "^0.9.4", optional = true}
        pytest-randomly = {version = "^3.4", optional = true}
        pytest-flask = {version = "^1.0", optional = true}
        #: Docs
        sphinx = {version = "^3.2", optional = true}
        sphinx-rtd-theme = {version = "^0.5", optional = true}
        sphinx-autodoc-typehints = {version = "^1.11.0", optional = true}
        sphinxcontrib-apidoc = {version = "^0.3.0", optional = true}
        #: Code check
        pre-commit = {version = "^2.7", optional = true}
        mypy = {version = "0.782", optional = true}
        pylint = {version = "^2.6.0", optional = true}

    [tool.poetry.dev-dependencies]
        devtools = {version = "^0.6", extras = ["pygments"]}
        towncrier = {version = "19.9.0rc1"}
        ipython = "^7.15.0"
        sphinx-autobuild = "^2020.9.1"

    [tool.poetry.extras]
        testing = [
            "pytest", "pytest-xdist",
            "pytest-cov", "coverage",
            "pytest-sugar",
            "pytest-randomly",
            "pytest-mock", "mock",
            "pytest-flask",
        ]
        docs = [
            "sphinx",
            "sphinx-rtd-theme",
            "sphinx-autodoc-typehints",
            "sphinxcontrib-apidoc",
        ]
        pre-commit = ["pre-commit", "mypy", "pylint"]
        flask = ["flask"]

    [tool.poetry.scripts]
        env_exe_runner = 'formelsammlung.env_exe_runner:cli_caller'


#: -- TOWNCRIER CONFIG -----------------------------------------------------------------
[tool.towncrier]
    package = "formelsammlung"
    package_dir = "src"
    # single_file = true  # if false, filename is formatted like `title_format`.
    filename = "CHANGELOG.rst"
    directory = "docs/.changes"
    template = "docs/.changes/template.jinja2"
    # start_line = "start of generated content" # u".. towncrier release notes start\n"
    title_format = "v{version} ({project_date})"
    issue_format = "`#{issue} <https://github.com/Cielquan/formelsammlung/issues/{issue}>`_"
    underlines = ["-", "~"]
    wrap = false  # Wrap text to 79 characters
    all_bullets = true  # make all fragments bullet points

    [[tool.towncrier.type]]
        directory = "bugfix"
        name = "Bugfixes"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "feature"
        name = "New Features"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "breaking"
        name = "Backwards incompatible changes"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "deprecation"
        name = "Deprecations (removal in next major release)"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "docs"
        name = "Documentation"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "misc"
        name = "Miscellaneous"
        showcontent = true


#: -- BLACK CONFIG ---------------------------------------------------------------------
[tool.black]
    line-length = 88
    exclude = "venv/"
    include = '\.pyi?$'


#: -- ISORT CONFIG ---------------------------------------------------------------------
[tool.isort]
    profile = "black"
    lines_after_imports = 2
    lines_between_types = 1
    skip_gitignore = true


#: -- PYLINT CONFIG --------------------------------------------------------------------
[tool.pylint.messages_control]
    disable = "C0330, C0326"  #: deactivated for black

[tool.pylint.format]
    max-line-length = "88"


#: -- COVERAGE CONFIG ------------------------------------------------------------------
[tool.coverage]
    [tool.coverage.run]
        branch = true
        parallel = true
        context = "static-context"
        omit = [
            "tests/*",
            "docs/*",
        ]

    [tool.coverage.paths]
        combine = [
            "src/formelsammlung",
            "*/.tox/*/lib/python*/site-packages/formelsammlung",
            "*/.tox/pypy*/site-packages/formelsammlung",
            "*/.tox\\*\\Lib\\site-packages\\formelsammlung",
            "*/src/formelsammlung",
            "*\\src\\formelsammlung",
        ]

    [tool.coverage.report]
        show_missing = true
        exclude_lines = [
            "# pragma: no cover",
            "if __name__ == ['\"]__main__['\"]:",
            "def __str__",
            "def __repr__",
            "if self.debug:",
            "if settings.DEBUG",
            "if 0:",
            "if False:",
            "if TYPE_CHECKING:",
            "if MYPY:",
        ]

    [tool.coverage.html]
        show_contexts = true


#: -- PYTEST CONFIG --------------------------------------------------------------------
[tool.pytest.ini_options]
    addopts = "-ra --showlocals"
    junit_family = "xunit2"
