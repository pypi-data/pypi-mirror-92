{"version":3,"sources":["commentDialogView.es6.js"],"names":[],"mappings":";;AAAA,CAAC,YAAW;;AAGZ;;;;;;;;;;AAUA,QAAM,mBAAmB,SAAS,IAAT,CAAc,MAAd,CAAqB;AAC1C,sBAAc,EAAE,QAAF,ibAD4B;;AAgB1C;;;;;;;;;;AAUA,mBA1B0C,uBA0B9B,QA1B8B,EA0BpB,SA1BoB,EA0BT;AAAA;;AAC7B,gBAAI,SAAS,MAAT,KAAoB,CAAxB,EAA2B;AACvB;AACH;;AAED,gBAAM,mBAAmB,KAAK,OAAL,CAAa,gBAAtC;AACA,gBAAM,sBAAsB,KAAK,OAAL,CAAa,mBAAzC;AACA,gBAAM,cAAc,KAAK,OAAL,CAAa,iBAAjC;AACA,gBAAI,MAAM,IAAV;AACA,gBAAI,SAAS,GAAb;;AAEA,cAAE,IAAF,CAAO,QAAP,EAAiB,6BAAqB;AAClC,oBAAM,YAAY,kBAAkB,UAApC;AACA,oBAAM,QAAQ,EAAE,MAAK,YAAL,CAAkB;AAC9B,6BAAS,iBADqB;AAE9B,+BAAW,MAAM,KAAN,GAAc,MAFK;AAG9B,sCAAkB,gBAHY;AAI9B,+BAAW,iBAAiB,UAJE;AAK9B,+BAAW,SALmB;AAM9B,8BAAU,iBAAiB;AANG,iBAAlB,CAAF,CAAd;;AASA,oBAAI,kBAAkB,YAAtB,EAAoC;AAChC,wBAAM,kBAAkB,IAAI,GAAG,mBAAP,CAA2B;AAC/C,kCAAU,kBAAkB,SADmB;AAE/C,mCAAW,SAFoC;AAG/C,qCAAa,SAHkC;AAI/C,qCAAa,kBAAkB,YAJgB;AAK/C,qCAAa,WALkC;AAM/C,6CAAqB;AAN0B,qBAA3B,CAAxB;AAQA,oCAAgB,MAAhB,GAAyB,GAAzB,CAA6B,QAA7B,CAAsC,KAAtC;;AAEA;;;;;AAKA,0BAAK,QAAL,CACI,mBADJ,EACyB,oBADzB,EAC+C,mBAAW;AAClD,4BAAI,QAAQ,EAAR,KAAe,SAAnB,EAA8B;AAC1B,8CAAkB,YAAlB,GACI,QAAQ,GAAR,CAAY,aAAZ,CADJ;AAEH;AACJ,qBANL;AAOH;;AAED,yBAAS,OAAO,GAAP,CAAW,KAAX,CAAT;AACA,sBAAM,CAAC,GAAP;AACH,aAtCD;;AAwCA,iBAAK,GAAL,CACK,KADL,GAEK,MAFL,CAEY,MAFZ;AAGH;AAhFyC,KAArB,EAkFzB;AACI,oCADJ;AAEI;AAFJ,KAlFyB,CAAzB;;AAwFA;;;;;;;;AAQA,OAAG,iBAAH,GAAuB,SAAS,IAAT,CAAc,MAAd,CAAqB;AACxC,6BAAqB,GADmB;AAExC,oCAA4B,GAFY;AAGxC,wBAAgB,EAHwB;AAIxC,4BAAoB,GAJoB;AAKxC,wBAAgB,GALwB;;AAOxC,mBAAW,aAP6B;AAQxC,kBAAU,EAAE,QAAF,yjDAR8B;;AAwDxC,gBAAQ;AACJ,sCAA0B,kBADtB;AAEJ,qCAAyB,kBAFrB;AAGJ,sCAA0B,kBAHtB;AAIJ,oCAAwB,MAJpB;AAKJ,2CAA+B;AAL3B,SAxDgC;;AAgExC;;;;;;;AAOA,cAvEwC,oBAuE/B;AAAA;;AACL,gBAAM,cAAc,GAAG,WAAH,CAAe,QAAnC;AACA,gBAAM,gBAAgB,KAAK,KAAL,CAAW,GAAX,CAAe,eAAf,CAAtB;AACA,gBAAM,sBAAsB,KAAK,KAAL,CAAW,GAAX,CAAe,qBAAf,CAA5B;;AAEA,iBAAK,OAAL,CAAa,OAAb,GAAwB,KAAK,OAAL,CAAa,OAAb,KAAyB,KAAjD;;AAEA,iBAAK,GAAL,CACK,IADL,GAEK,IAFL,CAEU,KAAK,QAAL,CAAc;AAChB,+BAAe,YAAY,GAAZ,CAAgB,eAAhB,CADC;AAEhB,0BAAU,cAAc,GAAd,CAAkB,UAAlB,CAFM;AAGhB,iCAAiB,aAAa,iBAHd;AAIhB,8BAAc,GAAG,iBAAH,CAAqB,aAJnB;AAKhB,kCAAkB,GAAG,iBAAH,CAAqB,iBALvB;AAMhB,2BAAW,YACP,GAAG,iBAAH,CAAqB,kBADd,EAEP,CAAC,YAAY,GAAZ,CAAgB,UAAhB,CAAD,CAFO,CANK;AAShB,8BAAc,YACV,GAAG,iBAAH,CAAqB,yBADX,EAEV,CAAC,cAAc,GAAd,CAAkB,WAAlB,CAAD,CAFU,CATE;AAYhB,iCAAiB,GAAG,iBAAH,CAAqB,gBAZtB;AAahB,oCAAoB,GAAG,iBAAH,CAAqB,mBAbzB;AAchB,4BAAY,GAAG,iBAAH,CAAqB,SAdjB;AAehB,8BAAc,GAAG,iBAAH,CAAqB,WAfnB;AAgBhB,8BAAc,GAAG,iBAAH,CAAqB,WAhBnB;AAiBhB,6BAAa,GAAG,iBAAH,CAAqB,UAjBlB;AAkBhB,4BAAY,GAAG,eAAH,CAAmB,iBAlBf;AAmBhB,iCAAiB,GAAG,iBAAH,CAAqB;AAnBtB,aAAd,CAFV;;AAwBA,iBAAK,cAAL,GAAsB,KAAK,CAAL,CAAO,iBAAP,CAAtB;AACA,iBAAK,WAAL,GAAmB,KAAK,CAAL,CAAO,MAAP,CAAnB;AACA,iBAAK,MAAL,GAAc,KAAK,WAAL,CAAiB,QAAjB,CAA0B,mBAA1B,CAAd;AACA,iBAAK,QAAL,GAAgB,KAAK,WAAL,CAAiB,QAAjB,CAA0B,qBAA1B,CAAhB;AACA,iBAAK,QAAL,GAAgB,KAAK,WAAL,CAAiB,QAAjB,CAA0B,qBAA1B,CAAhB;AACA,iBAAK,OAAL,GAAe,KAAK,QAAL,CAAc,QAAd,CAAuB,QAAvB,CAAf;;AAEA,iBAAK,gBAAL,GAAwB,KAAK,MAAL,CAAY,QAAZ,CAAqB,sBAArB,CAAxB;;AAEA,iBAAK,cAAL,GACI,KAAK,gBAAL,CAAsB,QAAtB,CAA+B,wBAA/B,EACK,cADL,CACoB,KAAK,KADzB,EACgC,SADhC,CADJ;AAGA,iBAAK,iBAAL,GACI,KAAK,gBAAL,CAAsB,QAAtB,CAA+B,2BAA/B,EACK,cADL,CACoB,KAAK,KADzB,EACgC,SADhC,CADJ;;AAIA,iBAAK,YAAL,GAAoB,KAAK,cAAL,CACf,IADe,CACV,gBADU,EAEX,YAFW,CAEE,SAFF,EAEa,KAAK,KAFlB,EAEyB,WAFzB,EAGX,YAHW,CAGE,UAHF,EAGc,KAAK,KAHnB,EAG0B,SAH1B,EAGqC;AAC7C,gCAAgB,KAD6B;AAE7C,yBAAS;AAFoC,aAHrC,CAApB;;AAQA,iBAAK,wBAAL,GAAgC,KAAK,cAAL,CAC3B,IAD2B,CACtB,uBADsB,EAEvB,YAFuB,CAEV,SAFU,EAEC,KAAK,KAFN,EAEa,qBAFb,EAGvB,YAHuB,CAGV,UAHU,EAGE,KAAK,KAHP,EAGc,SAHd,EAGyB;AAC7C,gCAAgB,KAD6B;AAE7C,yBAAS;AAFoC,aAHzB,CAAhC;;AAQA,iBAAK,qBAAL,GAA6B,KAAK,iBAAL,CACxB,IADwB,CACnB,kBADmB,EAEpB,YAFoB,CAEP,SAFO,EAEI,KAAK,KAFT,EAEgB,UAFhB,EAGpB,YAHoB,CAGP,UAHO,EAGK,KAAK,KAHV,EAGiB,SAHjB,EAG4B;AAC7C,gCAAgB,KAD6B;AAE7C,yBAAS;AAFoC,aAH5B,CAA7B;;AAQA,iBAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,IAAd,CAAmB,UAAnB,CAAhB;;AAEA,iBAAK,WAAL,GAAmB,KAAK,QAAL,CAAc,IAAd,CAAmB,YAAnB,EACd,cADc,CACC,KAAK,KADN,EACa,SADb,EAEd,YAFc,CAED,UAFC,EAEW,KAAK,KAFhB,EAEuB,SAFvB,EAEkC;AAC7C,gCAAgB,KAD6B;AAE7C,yBAAS;AAFoC,aAFlC,CAAnB;;AAOA,iBAAK,aAAL,GAAqB,KAAK,QAAL,CAAc,IAAd,CAAmB,cAAnB,EAChB,cADgB,CACD,KAAK,KADJ,EACW,SADX,CAArB;;AAGA,iBAAK,aAAL,GAAqB,KAAK,QAAL,CAAc,IAAd,CAAmB,cAAnB,EAChB,cADgB,CACD,KAAK,KADJ,EACW,WADX,EAEhB,YAFgB,CAEH,UAFG,EAES,KAAK,KAFd,EAEqB,WAFrB,EAEkC;AAC/C,gCAAgB,KAD+B;AAE/C,yBAAS;AAFsC,aAFlC,CAArB;;AAOA,iBAAK,YAAL,GAAoB,KAAK,QAAL,CAAc,IAAd,CAAmB,aAAnB,EACf,cADe,CACA,KAAK,KADL,EACY,SADZ,EACuB;AACnC,yBAAS;AAD0B,aADvB,CAApB;;AAKA,iBAAK,YAAL,GAAoB,IAAI,gBAAJ,CAAqB;AACrC,oBAAI,KAAK,cAAL,CAAoB,IAApB,CAAyB,IAAzB,CADiC;AAErC,kCAAkB,cAAc,GAAd,CAAkB,WAAlB,CAFmB;AAGrC,qCAAqB,KAAK,OAAL,CAAa,mBAHG;AAIrC,mCAAmB,oBAAoB,GAApB,CAAwB,UAAxB;AAJkB,aAArB,CAApB;;AAOA;;;;AAIA,iBAAK,WAAL,GAAmB,IAAI,GAAG,cAAP,CAAsB;AACrC,oBAAI,KAAK,WAAL,CAAiB,IAAjB,CAAsB,qBAAtB,CADiC;AAErC,0BAAU,KAF2B;AAGrC,2BAAW,CAH0B;AAIrC,sBAAM,KAAK,KAAL,CAAW,GAAX,CAAe,MAAf,CAJ+B;AAKrC,8BAAc;AACV,2BAAO,KAAK,KADF;AAEV,8BAAU;AAFA;AALuB,aAAtB,CAAnB;AAUA,iBAAK,WAAL,CAAiB,MAAjB;AACA,iBAAK,WAAL,CAAiB,IAAjB;AACA,iBAAK,WAAL,CAAiB,GAAjB,CAAqB,cAArB,CAAoC,KAAK,KAAzC,EAAgD,SAAhD;AACA,iBAAK,QAAL,CAAc,KAAK,WAAnB,EAAgC,QAAhC,EACc;AAAA,uBAAM,OAAK,KAAL,CAAW,GAAX,CAAe,MAAf,EACe,OAAK,WAAL,CAAiB,OAAjB,EADf,CAAN;AAAA,aADd;AAGA,iBAAK,WAAL,CAAiB,oBAAjB,CAAsC,KAAK,qBAA3C;AACA,iBAAK,WAAL,CAAiB,sBAAjB,CACI,KAAK,WAAL,CAAiB,IAAjB,CAAsB,gBAAtB,CADJ;;AAGA,iBAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,aAA1B,EACc;AAAA,uBAAM,OAAK,WAAL,CAAiB,OAAjB,CAAyB,OAAK,KAAL,CAAW,GAAX,CAAe,MAAf,CAAzB,CAAN;AAAA,aADd;;AAGA,iBAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,iBAA1B,EAA6C,KAAK,aAAlD;;AAEA,iBAAK,GAAL,CACK,GADL,CACS,UADT,EACqB,UADrB,EAEK,SAFL,CAEe,eAAO;AACd;;;;AAIA,oBAAI,eAAJ;AACH,aARL,EASK,SATL,CASe;AACP,yBAAS,EAAE,OAAF,CAAU,KAAV,GAAkB,SAAlB,GACkB,0BAFpB;AAGP,6BAAa,IAHN;AAIP,wBAAQ,EAAE,IAAF,CAAO,KAAK,aAAZ,EAA2B,IAA3B;AAJD,aATf,EAeK,gBAfL;;AAiBA,iBAAK,QAAL,CAAc,GAAd,CAAkB,QAAlB,EAA4B,MAA5B;AACA,iBAAK,GAAL,CAAS,SAAT,CAAmB;AACf,wBAAQ;AADO,aAAnB;;AAIA,iBAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,cAA1B,EAA0C,KAAK,YAA/C;AACA,iBAAK,YAAL;;AAEA,iBAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,0BAA1B,EACc;AAAA,uBAAM,OAAK,2BAAL,EAAN;AAAA,aADd;AAEA,iBAAK,2BAAL;;AAEA;AACA,eAAG,iBAAH,CAAqB,IAArB,CAA0B,gBAAQ;AAC9B,oBAAM,eAAe,KAAK,GAAL,CAAS,UAAT,CAArB;AACA,oBAAM,WAAW,IAAI,YAAJ,CAAiB;AAC9B,+BAAW,KAAK,GAAL,CAAS,WAAT,CADmB;AAE9B,mCAAe,MAFe;AAG9B,mCAAe,OAAK,KAHU;AAI9B,wBAAI,OAAK;AAJqB,iBAAjB,CAAjB;;AAOA,yBAAS,MAAT;AACH,aAVD;;AAYA,mBAAO,IAAP;AACH,SArPuC;;;AAuPxC;;;;;AAKA,YA5PwC,kBA4PjC;AACH;;;;AAIA,iBAAK,KAAL,CAAW,GAAX,CAAe,MAAf,EAAuB,KAAK,WAAL,CAAiB,OAAjB,EAAvB;;AAEA,gBAAI,KAAK,KAAL,CAAW,GAAX,CAAe,SAAf,CAAJ,EAA+B;AAC3B,qBAAK,KAAL,CAAW,IAAX,CAAgB;AACZ,2BAAO,eAAC,KAAD,EAAQ,GAAR,EAAgB;AACnB,8BAAM,mCAAoC,IAAI,SAA9C;AACH;AAHW,iBAAhB;AAKA,qBAAK,KAAL;AACH;AACJ,SA3QuC;;;AA6QxC;;;AAGA,YAhRwC,kBAgRjC;AACH,qBAAS,UAAT,GAAsB;AAClB,qBAAK,GAAL,CAAS,cAAT;AACA,qBAAK,WAAL,CAAiB,KAAjB;AACH;;AAED,iBAAK,GAAL,CACK,GADL,CACS;AACD,qBAAK,SAAS,KAAK,GAAL,CAAS,GAAT,CAAa,KAAb,CAAT,EAA8B,EAA9B,IAAoC,KAAK,cAD7C;AAED,yBAAS;AAFR,aADT,EAKK,IALL;;AAOA,iBAAK,aAAL;;AAEA,gBAAI,KAAK,KAAL,CAAW,GAAX,CAAe,SAAf,CAAJ,EAA+B;AAC3B,qBAAK,KAAL,CAAW,SAAX;AACH;;AAED,gBAAI,KAAK,OAAL,CAAa,OAAjB,EAA0B;AACtB,qBAAK,GAAL,CAAS,OAAT,CAAiB;AACb,gCAAU,KAAK,cAAf,OADa;AAEb,6BAAS;AAFI,iBAAjB,EAGG,GAHH,EAGQ,OAHR,EAGiB,EAAE,IAAF,CAAO,UAAP,EAAmB,IAAnB,CAHjB;AAIH,aALD,MAKO;AACH,2BAAW,IAAX,CAAgB,IAAhB;AACH;AACJ,SA3SuC;;;AA6SxC;;;;;;;;;;;;;AAaA,aA1TwC,mBA0TF;AAAA,gBAAhC,QAAgC,uEAAvB,SAAuB;AAAA,gBAAZ,OAAY,uEAAJ,EAAI;;AAClC,qBAAS,WAAT,GAAuB;AACnB,qBAAK,KAAL,CAAW,KAAX;AACA,qBAAK,GAAL,CAAS,MAAT;AACA,qBAAK,OAAL,CAAa,QAAb;;AAEA,oBAAI,EAAE,UAAF,CAAa,QAAb,CAAJ,EAA4B;AACxB,6BAAS,IAAT,CAAc,OAAd;AACH;AACJ;;AAED,gBAAI,KAAK,OAAL,CAAa,OAAb,IAAwB,KAAK,GAAL,CAAS,EAAT,CAAY,UAAZ,CAA5B,EAAqD;AACjD,qBAAK,GAAL,CAAS,OAAT,CAAiB;AACb,gCAAU,KAAK,cAAf,OADa;AAEb,6BAAS;AAFI,iBAAjB,EAGG,GAHH,EAGQ,OAHR,EAGiB,EAAE,IAAF,CAAO,WAAP,EAAoB,IAApB,CAHjB;AAIH,aALD,MAKO;AACH,4BAAY,IAAZ,CAAiB,IAAjB;AACH;AACJ,SA7UuC;;;AA+UxC;;;;;;;;;;AAUA,YAzVwC,gBAyVnC,CAzVmC,EAyVhC,CAzVgC,EAyV7B;AACP,iBAAK,GAAL,CAAS,IAAT,CAAc,CAAd,EAAiB,CAAjB;AACH,SA3VuC;;;AA6VxC;;;;;;;;;;;;AAYA,sBAzWwC,0BAyWzB,GAzWyB,EAyWpB,OAzWoB,EAyWX;AACzB,iBAAK,GAAL,CAAS,cAAT,CAAwB,GAAxB,EAA6B,OAA7B;AACH,SA3WuC;;;AA6WxC;;;AAGA,oBAhXwC,0BAgXzB;AACX,iBAAK,OAAL,CAAa,IAAb,CAAkB,KAAK,KAAL,CAAW,GAAX,CAAe,OAAf,IACE,GAAG,iBAAH,CAAqB,qBADvB,GAEE,GAAG,iBAAH,CAAqB,gBAFzC;AAGH,SApXuC;;;AAsXxC;;;;;;AAMA,mCA5XwC,yCA4XV;AAC1B,gBAAM,WAAW,KAAK,KAAL,CAAW,GAAX,CAAe,mBAAf,KAAuC,EAAxD;AACA,iBAAK,YAAL,CAAkB,WAAlB,CAA8B,QAA9B,EAC+B,KAAK,KAAL,CAAW,GAAX,CAAe,uBAAf,CAD/B;;AAGA,gBAAM,eAAgB,SAAS,MAAT,GAAkB,CAAxC;AACA,iBAAK,cAAL,CAAoB,UAApB,CAA+B,YAA/B;;AAEA;AACA,gBAAI,QAAQ,KAAK,cAAjB;;AAEA,gBAAI,YAAJ,EAAkB;AACd,yBAAS,KAAK,kBAAd;AACH;;AAED,iBAAK,GAAL,CACK,KADL,CACW,KADX,EAEK,MAFL,CAEY,KAAK,KAAL,CAAW,GAAX,CAAe,SAAf,IACE,KAAK,mBADP,GAEE,KAAK,0BAJnB;AAKH,SAhZuC;;;AAkZxC;;;;;AAKA,qBAvZwC,2BAuZxB;AACZ,gBAAM,SAAS,KAAK,GAAL,CAAS,MAAT,EAAf;AACA,gBAAI,QAAQ,KAAK,GAAL,CAAS,KAAT,EAAZ;AACA,gBAAI,gBAAgB,CAApB;;AAEA,gBAAI,KAAK,cAAL,CAAoB,EAApB,CAAuB,UAAvB,CAAJ,EAAwC;AACpC,qBAAK,cAAL,CACK,UADL,CACgB,KAAK,kBADrB,EAEK,WAFL,CAEiB,MAFjB,EAGK,IAHL,CAGU,CAHV,EAGa,CAHb,EAGgB,UAHhB;;AAKA,oBAAM,gBAAgB,KAAK,YAAL,CAAkB,GAAxC;AACA,8BAAc,MAAd,CAAqB,KAAK,cAAL,CAAoB,MAApB,KACA,cAAc,QAAd,GAAyB,GAD9C;;AAGA,gCAAgB,KAAK,cAAL,CAAoB,UAApB,CAA+B,IAA/B,CAAhB;AACA,yBAAS,aAAT;AACH;;AAED,iBAAK,WAAL,CACK,UADL,CACgB,KADhB,EAEK,WAFL,CAEiB,MAFjB,EAGK,IAHL,CAGU,aAHV,EAGyB,CAHzB,EAG4B,UAH5B;;AAKA,gBAAM,aAAa,KAAK,WAAL,CAAiB,GAApC;AACA,iBAAK,WAAL,CAAiB,OAAjB,CACK,KAAK,MAAL,CAAY,KAAZ,KACA,WAAW,UAAX,CAAsB,GAAtB,EAA2B,IAA3B,CAFL,EAGK,KAAK,WAAL,CAAiB,MAAjB,KACA,KAAK,QAAL,CAAc,WAAd,EADA,GAEA,KAAK,gBAAL,CAAsB,WAAtB,EAFA,GAGA,KAAK,QAAL,CAAc,WAAd,EAHA,GAIA,WAAW,UAAX,CAAsB,GAAtB,EAA2B,IAA3B,CAPL;AAQH,SAxbuC;;;AA0bxC;;;;;;AAMA,wBAhcwC,8BAgcrB;AACf,gBAAI,aAAa,IAAjB;;AAEA,gBAAI,KAAK,KAAL,CAAW,GAAX,CAAe,OAAf,CAAJ,EAA6B;AACzB,6BAAa,QAAQ,GAAG,iBAAH,CAAqB,eAA7B,CAAb;AACH;;AAED,gBAAI,UAAJ,EAAgB;AACZ,qBAAK,KAAL,CAAW,MAAX;AACA,qBAAK,KAAL;AACH;AACJ,SA3cuC;;;AA6cxC;;;;;AAKA,wBAldwC,8BAkdrB;AACf,gBAAI,KAAK,KAAL,CAAW,GAAX,CAAe,WAAf,CAAJ,EAAiC;AAC7B,qBAAK,KAAL,CAAW,aAAX;AACA,qBAAK,KAAL;AACH;AACJ,SAvduC;;;AAydxC;;;;;;;;;;;;;;;;AAgBA,sBAzewC,0BAyezB,CAzeyB,EAyetB;AACd,cAAE,eAAF;;AAEA,oBAAQ,EAAE,KAAV;AACI,qBAAK,EAAE,EAAF,CAAK,OAAL,CAAa,MAAlB;AACI,yBAAK,gBAAL;AACA,2BAAO,KAAP;;AAEJ,qBAAK,EAAL;AACA,qBAAK,EAAE,EAAF,CAAK,OAAL,CAAa,KAAlB;AACI;AACA,wBAAI,EAAE,OAAF,IAAa,EAAE,OAAnB,EAA4B;AACxB,6BAAK,IAAL;AACA,0BAAE,cAAF;AACA,0BAAE,eAAF;AACH;AACD;;AAEJ,qBAAK,EAAL;AACA,qBAAK,GAAL;AACI;AACA,wBAAI,EAAE,OAAF,IAAa,EAAE,MAAnB,EAA2B;AACvB;AACA,0BAAE,cAAF;AACA,6BAAK,KAAL,CAAW,GAAX,CAAe,WAAf,EAA4B,CAAC,KAAK,KAAL,CAAW,GAAX,CAAe,WAAf,CAA7B;AACH;AACD;;AAEJ,qBAAK,EAAL;AACA,qBAAK,GAAL;AACI;AACA,wBAAI,EAAE,OAAF,IAAa,EAAE,MAAnB,EAA2B;AACvB;AACA,0BAAE,cAAF;AACA,6BAAK,KAAL,CAAW,GAAX,CAAe,UAAf,EAA2B,CAAC,KAAK,KAAL,CAAW,GAAX,CAAe,UAAf,CAA5B;AACH;AACD;;AAEJ;AACI;AApCR;AAsCH;AAlhBuC,KAArB,EAmhBpB;AACC;;;AAGA,mBAAW,IAJZ;;AAMC;;;;;;;;;;;;;AAaA,gBAAQ,kBAAqB;AAAA,gBAAZ,OAAY,uEAAJ,EAAI;;AACzB,oBAAQ,MAAR,CAAe,QAAQ,OAAvB,EAAgC,6BAAhC;;AAEA,gBAAM,sBACF,QAAQ,mBAAR,IACA,GAAG,WAAH,CAAe,OAAf,GAAyB,KAAzB,CAA+B,mBAFnC;;AAIA,gBAAM,MAAM,IAAI,GAAG,iBAAP,CAAyB;AACjC,yBAAS,QAAQ,OADgB;AAEjC,qCAAqB,QAAQ,mBAAR,IACA,oBAAoB,GAApB,CAAwB,qBAAxB,CAHY;AAIjC,uBAAO,IAAI,GAAG,aAAP,CAAqB;AACxB,6BAAS,QAAQ,OADO;AAExB,mCAAe,oBAAoB,GAApB,CAAwB,eAAxB,CAFS;AAGxB,yCAAqB,mBAHG;AAIxB,uCAAmB,QAAQ,iBAAR,IAA6B,SAJxB;AAKxB,2CAAuB,QAAQ,qBAAR,IACA;AANC,iBAArB;AAJ0B,aAAzB,CAAZ;;AAcA,gBAAI,MAAJ,GAAa,GAAb,CACK,GADL,CACS,SADT,EACoB,GADpB,EACyB;AADzB,aAEK,QAFL,CAEc,QAAQ,SAAR,IAAqB,SAAS,IAF5C;;AAIA,oBAAQ,QAAR,GAAmB,QAAQ,QAAR,IAAoB,EAAvC;;AAEA,gBAAI,EAAE,UAAF,CAAa,QAAQ,QAArB,CAAJ,EAAoC;AAChC,wBAAQ,QAAR,CAAiB,GAAjB;AACH,aAFD,MAEO,IAAI,QAAQ,QAAR,CAAiB,MAArB,EAA6B;AAChC,oBAAI,cAAJ,CAAmB,QAAQ,QAAR,CAAiB,MAAjB,CAAwB,EAA3C,EACmB,QAAQ,QAAR,CAAiB,MADpC;AAEH,aAHM,MAGA;AACH,oBAAI,IAAI,QAAQ,QAAR,CAAiB,CAAzB;AACA,oBAAI,IAAI,QAAQ,QAAR,CAAiB,CAAzB;;AAEA,oBAAI,MAAM,SAAV,EAAqB;AACjB;AACA,wBAAI,EAAE,QAAF,EAAY,UAAZ,KACA,CAAC,EAAE,MAAF,EAAU,KAAV,KAAoB,IAAI,GAAJ,CAAQ,KAAR,EAArB,IAAwC,CAD5C;AAEH;;AAED,oBAAI,MAAM,SAAV,EAAqB;AACjB;AACA,wBAAI,EAAE,QAAF,EAAY,SAAZ,KACA,CAAC,EAAE,MAAF,EAAU,MAAV,KAAqB,IAAI,GAAJ,CAAQ,MAAR,EAAtB,IAA0C,CAD9C;AAEH;;AAED,oBAAI,IAAJ,CAAS,CAAT,EAAY,CAAZ;AACH;;AAED,gBAAI,EAAJ,CAAO,QAAP,EAAiB;AAAA,uBAAM,GAAG,iBAAH,CAAqB,SAArB,GAAiC,IAAvC;AAAA,aAAjB;;AAEA,gBAAM,WAAW,GAAG,iBAAH,CAAqB,SAAtC;AACA,gBAAM,iBAAiB,SAAS,cAAT,GAA0B;AAC7C,oBAAI;AACA,wBAAI,IAAJ;AACH,iBAFD,CAEE,OAAM,CAAN,EAAS;AACP,wBAAI,KAAJ;AACA,0BAAM,CAAN;AACH;;AAED,mBAAG,iBAAH,CAAqB,SAArB,GAAiC,GAAjC;AACH,aATD;;AAWA,gBAAI,QAAJ,EAAc;AACV,yBAAS,EAAT,CAAY,QAAZ,EAAsB,cAAtB;AACA,yBAAS,KAAT;AACH,aAHD,MAGO;AACH;AACH;;AAED,mBAAO,GAAP;AACH,SA5FF;;AA8FC,sCA9FD;AA+FC,oCA/FD;AAgGC,sCAhGD;AAiGC,gJAjGD;AAkGC,8DAlGD;AAmGC,0FAnGD;AAoGC,0CApGD;AAqGC,yDArGD;AAsGC,mDAtGD;AAuGC,kCAvGD;AAwGC,4FAxGD;AAyGC,yDAzGD;AA0GC,iDA1GD;AA2GC;AA3GD,KAnhBoB,CAAvB;AAkoBC,CA/uBD","file":"commentDialogView.js","sourcesContent":["(function() {\n\n\n/**\n * Displays a list of existing comments within a comment dialog.\n *\n * Each comment in the list is an existing, published comment that a user\n * has made. They will be displayed, along with any issue states and\n * identifying information, and links for viewing the comment on the review\n * or replying to it.\n *\n * This is used internally in CommentDialogView.\n */\nconst CommentsListView = Backbone.View.extend({\n    itemTemplate: _.template(dedent`\n        <li class=\"<%= itemClass %>\">\n         <h2>\n          <%- comment.user.name %>\n          <span class=\"actions\">\n           <a class=\"comment-list-view-action\" href=\"<%= comment.url %>\"><%- viewText %></a>\n           <a class=\"comment-list-reply-action\"\n              href=\"<%= reviewRequestURL %>?reply_id=<%= comment.reply_to_id || comment.comment_id %>&reply_type=<%= replyType %>\"\n              ><%- replyText %></a>\n          </span>\n         </h2>\n         <pre><%- comment.text %></pre>\n        </li>\n    `),\n\n    /**\n     * Set the list of displayed comments.\n     *\n     * Args:\n     *     comments (Array of object):\n     *         The serialized comments.\n     *\n     *     replyType (string):\n     *         The type of comment, for use in creating replies.\n     */\n    setComments(comments, replyType) {\n        if (comments.length === 0) {\n            return;\n        }\n\n        const reviewRequestURL = this.options.reviewRequestURL;\n        const commentIssueManager = this.options.commentIssueManager;\n        const interactive = this.options.issuesInteractive;\n        let odd = true;\n        let $items = $();\n\n        _.each(comments, serializedComment => {\n            const commentID = serializedComment.comment_id;\n            const $item = $(this.itemTemplate({\n                comment: serializedComment,\n                itemClass: odd ? 'odd' : 'even',\n                reviewRequestURL: reviewRequestURL,\n                replyText: CommentsListView._replyText,\n                replyType: replyType,\n                viewText: CommentsListView._viewText,\n            }));\n\n            if (serializedComment.issue_opened) {\n                const commentIssueBar = new RB.CommentIssueBarView({\n                    reviewID: serializedComment.review_id,\n                    commentID: commentID,\n                    commentType: replyType,\n                    issueStatus: serializedComment.issue_status,\n                    interactive: interactive,\n                    commentIssueManager: commentIssueManager,\n                });\n                commentIssueBar.render().$el.appendTo($item);\n\n                /*\n                 * Update the serialized comment's issue status whenever\n                 * the real comment's status is changed so we will\n                 * display it correctly the next time we render it.\n                 */\n                this.listenTo(\n                    commentIssueManager, 'issueStatusUpdated', comment => {\n                        if (comment.id === commentID) {\n                            serializedComment.issue_status =\n                                comment.get('issueStatus');\n                        }\n                    });\n            }\n\n            $items = $items.add($item);\n            odd = !odd;\n        });\n\n        this.$el\n            .empty()\n            .append($items);\n    },\n},\n{\n    _replyText: gettext('Reply'),\n    _viewText: gettext('View'),\n});\n\n\n/**\n * A dialog that allows for creating, editing or deleting draft comments on\n * a diff or file attachment. The dialog can be moved around on the page.\n *\n * Any existing comments for the selected region will be displayed alongside\n * the dialog for reference. However, this dialog is not intended to be\n * used to reply to those comments.\n */\nRB.CommentDialogView = Backbone.View.extend({\n    DIALOG_TOTAL_HEIGHT: 350,\n    DIALOG_NON_EDITABLE_HEIGHT: 120,\n    SLIDE_DISTANCE: 10,\n    COMMENTS_BOX_WIDTH: 280,\n    FORM_BOX_WIDTH: 450,\n\n    className: 'comment-dlg',\n    template: _.template(dedent`\n        <div class=\"other-comments\">\n         <h1 class=\"title\"><%- otherReviewsText %></h1>\n         <ul></ul>\n        </div>\n        <form method=\"post\">\n         <h1 class=\"comment-dlg-header\">\n          <span class=\"title\"></span>\n          <% if (authenticated && !hasDraft) { %>\n           <a class=\"markdown-info\" href=\"<%- markdownDocsURL %>\"\n              target=\"_blank\"><%- markdownText %></a>\n          <% } %>\n         </h1>\n         <% if (!authenticated) { %>\n          <p class=\"login-text\"><%= loginText %></p>\n         <% } else if (hasDraft) { %>\n          <p class=\"draft-warning\"><%= draftWarning %></p>\n         <% } %>\n         <div class=\"comment-dlg-body\">\n          <div class=\"comment-text-field\"></div>\n          <ul class=\"comment-dlg-options\">\n           <li class=\"comment-issue-options\">\n            <input type=\"checkbox\" id=\"comment_issue\">\n            <label for=\"comment_issue\" accesskey=\"i\"><%= openAnIssueText %></label>\n            <% if (showVerify) { %>\n             <input type=\"checkbox\" id=\"comment_issue_verify\">\n             <label for=\"comment_issue_verify\"><%= verifyIssueText %></label>\n            <% } %>\n           </li>\n           <li class=\"comment-markdown-options\">\n            <input type=\"checkbox\" id=\"enable_markdown\">\n            <label for=\"enable_markdown\" accesskey=\"m\"><%= enableMarkdownText %></label>\n           </li>\n          </ul>\n         </div>\n         <div class=\"comment-dlg-footer\">\n          <div class=\"buttons\">\n           <input type=\"button\" class=\"save\" value=\"<%- saveButton %>\"\n                  disabled=\"true\">\n           <input type=\"button\" class=\"cancel\" value=\"<%- cancelButton %>\">\n           <input type=\"button\" class=\"delete\" value=\"<%- deleteButton %>\"\n                  disabled=\"true\">\n           <input type=\"button\" class=\"close\" value=\"<%- closeButton %>\">\n          </div>\n         </div>\n        </form>\n    `),\n\n    events: {\n        'click .buttons .cancel': '_onCancelClicked',\n        'click .buttons .close': '_onCancelClicked',\n        'click .buttons .delete': '_onDeleteClicked',\n        'click .buttons .save': 'save',\n        'keydown .comment-text-field': '_onTextKeyDown',\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.CommentDialogView:\n     *     This object, for chaining.\n     */\n    render() {\n        const userSession = RB.UserSession.instance;\n        const reviewRequest = this.model.get('reviewRequest');\n        const reviewRequestEditor = this.model.get('reviewRequestEditor');\n\n        this.options.animate = (this.options.animate !== false);\n\n        this.$el\n            .hide()\n            .html(this.template({\n                authenticated: userSession.get('authenticated'),\n                hasDraft: reviewRequest.get('hasDraft'),\n                markdownDocsURL: MANUAL_URL + 'users/markdown/',\n                markdownText: RB.CommentDialogView._markdownText,\n                otherReviewsText: RB.CommentDialogView._otherReviewsText,\n                loginText: interpolate(\n                    RB.CommentDialogView._loginTextTemplate,\n                    [userSession.get('loginURL')]),\n                draftWarning: interpolate(\n                    RB.CommentDialogView._draftWarningTextTemplate,\n                    [reviewRequest.get('reviewURL')]),\n                openAnIssueText: RB.CommentDialogView._openAnIssueText,\n                enableMarkdownText: RB.CommentDialogView._enableMarkdownText,\n                saveButton: RB.CommentDialogView._saveText,\n                cancelButton: RB.CommentDialogView._cancelText,\n                deleteButton: RB.CommentDialogView._deleteText,\n                closeButton: RB.CommentDialogView._closeText,\n                showVerify: RB.EnabledFeatures.issueVerification,\n                verifyIssueText: RB.CommentDialogView._verifyIssueText,\n            }));\n\n        this._$commentsPane = this.$('.other-comments');\n        this._$draftForm = this.$('form');\n        this._$body = this._$draftForm.children('.comment-dlg-body');\n        this._$header = this._$draftForm.children('.comment-dlg-header');\n        this._$footer = this._$draftForm.children('.comment-dlg-footer');\n        this._$title = this._$header.children('.title');\n\n        this._$commentOptions = this._$body.children('.comment-dlg-options');\n\n        this._$issueOptions =\n            this._$commentOptions.children('.comment-issue-options')\n                .bindVisibility(this.model, 'canEdit');\n        this._$markdownOptions =\n            this._$commentOptions.children('.comment-markdown-options')\n                .bindVisibility(this.model, 'canEdit');\n\n        this._$issueField = this._$issueOptions\n            .find('#comment_issue')\n                .bindProperty('checked', this.model, 'openIssue')\n                .bindProperty('disabled', this.model, 'editing', {\n                    elementToModel: false,\n                    inverse: true,\n                });\n\n        this._$issueVerificationField = this._$issueOptions\n            .find('#comment_issue_verify')\n                .bindProperty('checked', this.model, 'requireVerification')\n                .bindProperty('disabled', this.model, 'editing', {\n                    elementToModel: false,\n                    inverse: true,\n                });\n\n        this._$enableMarkdownField = this._$markdownOptions\n            .find('#enable_markdown')\n                .bindProperty('checked', this.model, 'richText')\n                .bindProperty('disabled', this.model, 'editing', {\n                    elementToModel: false,\n                    inverse: true,\n                });\n\n        this.$buttons = this._$footer.find('.buttons');\n\n        this.$saveButton = this.$buttons.find('input.save')\n            .bindVisibility(this.model, 'canEdit')\n            .bindProperty('disabled', this.model, 'canSave', {\n                elementToModel: false,\n                inverse: true,\n            });\n\n        this.$cancelButton = this.$buttons.find('input.cancel')\n            .bindVisibility(this.model, 'canEdit');\n\n        this.$deleteButton = this.$buttons.find('input.delete')\n            .bindVisibility(this.model, 'canDelete')\n            .bindProperty('disabled', this.model, 'canDelete', {\n                elementToModel: false,\n                inverse: true,\n            });\n\n        this.$closeButton = this.$buttons.find('input.close')\n            .bindVisibility(this.model, 'canEdit', {\n                inverse: true,\n            });\n\n        this.commentsList = new CommentsListView({\n            el: this._$commentsPane.find('ul'),\n            reviewRequestURL: reviewRequest.get('reviewURL'),\n            commentIssueManager: this.options.commentIssueManager,\n            issuesInteractive: reviewRequestEditor.get('editable'),\n        });\n\n        /*\n         * We need to handle keypress here, rather than in events above,\n         * because jQuery will actually handle it. Backbone fails to.\n         */\n        this._textEditor = new RB.TextEditorView({\n            el: this._$draftForm.find('.comment-text-field'),\n            autoSize: false,\n            minHeight: 0,\n            text: this.model.get('text'),\n            bindRichText: {\n                model: this.model,\n                attrName: 'richText',\n            },\n        });\n        this._textEditor.render();\n        this._textEditor.show();\n        this._textEditor.$el.bindVisibility(this.model, 'canEdit');\n        this.listenTo(this._textEditor, 'change',\n                      () => this.model.set('text',\n                                           this._textEditor.getText()));\n        this._textEditor.bindRichTextCheckbox(this._$enableMarkdownField);\n        this._textEditor.bindRichTextVisibility(\n            this._$draftForm.find('.markdown-info'));\n\n        this.listenTo(this.model, 'change:text',\n                      () => this._textEditor.setText(this.model.get('text')));\n\n        this.listenTo(this.model, 'change:richText', this._handleResize);\n\n        this.$el\n            .css('position', 'absolute')\n            .mousedown(evt => {\n                /*\n                 * Prevent this from reaching the selection area, which will\n                 * swallow the default action for the mouse down.\n                 */\n                evt.stopPropagation();\n            })\n            .resizable({\n                handles: $.support.touch ? 'grip,se'\n                                         : 'grip,n,e,s,w,se,sw,ne,nw',\n                transparent: true,\n                resize: _.bind(this._handleResize, this),\n            })\n            .proxyTouchEvents();\n\n        this._$header.css('cursor', 'move');\n        this.$el.draggable({\n            handle: '.comment-dlg-header',\n        });\n\n        this.listenTo(this.model, 'change:dirty', this._updateTitle);\n        this._updateTitle();\n\n        this.listenTo(this.model, 'change:publishedComments',\n                      () => this._onPublishedCommentsChanged());\n        this._onPublishedCommentsChanged();\n\n        /* Add any hooks. */\n        RB.CommentDialogHook.each(hook => {\n            const HookViewType = hook.get('viewType');\n            const hookView = new HookViewType({\n                extension: hook.get('extension'),\n                commentDialog: this,\n                commentEditor: this.model,\n                el: this.el,\n            });\n\n            hookView.render();\n        });\n\n        return this;\n    },\n\n    /**\n     * Callback for when the Save button is pressed.\n     *\n     * Saves the comment, creating it if it's new, and closes the dialog.\n     */\n    save() {\n        /*\n         * Set this immediately, in case new text has been set in the editor\n         * that we haven't been notified about yet.\n         */\n        this.model.set('text', this._textEditor.getText());\n\n        if (this.model.get('canSave')) {\n            this.model.save({\n                error: (model, xhr) => {\n                    alert(gettext('Error saving comment: ') + xhr.errorText);\n                }\n            });\n            this.close();\n        }\n    },\n\n    /**\n     * Open the comment dialog and focuses the text field.\n     */\n    open() {\n        function openDialog() {\n            this.$el.scrollIntoView();\n            this._textEditor.focus();\n        }\n\n        this.$el\n            .css({\n                top: parseInt(this.$el.css('top'), 10) - this.SLIDE_DISTANCE,\n                opacity: 0,\n            })\n            .show();\n\n        this._handleResize();\n\n        if (this.model.get('canEdit')) {\n            this.model.beginEdit();\n        }\n\n        if (this.options.animate) {\n            this.$el.animate({\n                top: `+=${this.SLIDE_DISTANCE}px`,\n                opacity: 1,\n            }, 350, 'swing', _.bind(openDialog, this));\n        } else {\n            openDialog.call(this);\n        }\n    },\n\n    /**\n     * Close the comment dialog, discarding the comment block if empty.\n     *\n     * This can optionally take a callback and context to notify when the\n     * dialog has been closed.\n     *\n     * Args:\n     *     onClosed (function, optional):\n     *         An optional callback to call once the dialog has been closed.\n     *\n     *     context (object, optional):\n     *         Context to use when calling ``onClosed``.\n     */\n    close(onClosed=undefined, context={}) {\n        function closeDialog() {\n            this.model.close();\n            this.$el.remove();\n            this.trigger('closed');\n\n            if (_.isFunction(onClosed)) {\n                onClosed.call(context);\n            }\n        }\n\n        if (this.options.animate && this.$el.is(':visible')) {\n            this.$el.animate({\n                top: `-=${this.SLIDE_DISTANCE}px`,\n                opacity: 0,\n            }, 350, 'swing', _.bind(closeDialog, this));\n        } else {\n            closeDialog.call(this);\n        }\n    },\n\n    /**\n     * Move the comment dialog to the given coordinates.\n     *\n     * Args:\n     *     x (number):\n     *         The X-coordinate to move the dialog to.\n     *\n     *     y (number):\n     *         The Y-coordinate to move the dialog to.\n     */\n    move(x, y) {\n        this.$el.move(x, y);\n    },\n\n    /**\n     * Position the dialog beside an element.\n     *\n     * This takes the same arguments that $.fn.positionToSide takes.\n     *\n     * Args:\n     *     $el (jQuery):\n     *        The element to move the dialog next to.\n     *\n     *     options (object):\n     *         Options for the ``positionToSide`` call.\n     */\n    positionBeside($el, options) {\n        this.$el.positionToSide($el, options);\n    },\n\n    /**\n     * Update the title of the comment dialog, based on the current state.\n     */\n    _updateTitle() {\n        this._$title.text(this.model.get('dirty')\n                          ? RB.CommentDialogView._yourCommentDirtyText\n                          : RB.CommentDialogView._yourCommentText);\n    },\n\n    /**\n     * Callback for when the list of published comments changes.\n     *\n     * Sets the list of comments in the CommentsList, and factors in some\n     * new layout properties.\n     */\n    _onPublishedCommentsChanged() {\n        const comments = this.model.get('publishedComments') || [];\n        this.commentsList.setComments(comments,\n                                       this.model.get('publishedCommentsType'));\n\n        const showComments = (comments.length > 0);\n        this._$commentsPane.setVisible(showComments);\n\n        /* Do this here so that calculations can be done before open() */\n        let width = this.FORM_BOX_WIDTH;\n\n        if (showComments) {\n            width += this.COMMENTS_BOX_WIDTH;\n        }\n\n        this.$el\n            .width(width)\n            .height(this.model.get('canEdit')\n                    ? this.DIALOG_TOTAL_HEIGHT\n                    : this.DIALOG_NON_EDITABLE_HEIGHT);\n    },\n\n    /**\n     * Handle the resize of the comment dialog.\n     *\n     * This will lay out the elements in the dialog appropriately.\n     */\n    _handleResize() {\n        const height = this.$el.height();\n        let width = this.$el.width();\n        let commentsWidth = 0;\n\n        if (this._$commentsPane.is(':visible')) {\n            this._$commentsPane\n                .outerWidth(this.COMMENTS_BOX_WIDTH)\n                .outerHeight(height)\n                .move(0, 0, 'absolute');\n\n            const $commentsList = this.commentsList.$el;\n            $commentsList.height(this._$commentsPane.height() -\n                                 $commentsList.position().top);\n\n            commentsWidth = this._$commentsPane.outerWidth(true);\n            width -= commentsWidth;\n        }\n\n        this._$draftForm\n            .outerWidth(width)\n            .outerHeight(height)\n            .move(commentsWidth, 0, 'absolute');\n\n        const $textField = this._textEditor.$el;\n        this._textEditor.setSize(\n            (this._$body.width() -\n             $textField.getExtents('b', 'lr')),\n            (this._$draftForm.height() -\n             this._$header.outerHeight() -\n             this._$commentOptions.outerHeight() -\n             this._$footer.outerHeight() -\n             $textField.getExtents('b', 'tb')));\n    },\n\n    /**\n     * Callback for when the Cancel button is pressed.\n     *\n     * Cancels the comment (which may delete the comment block, if it's new)\n     * and closes the dialog.\n     */\n    _onCancelClicked() {\n        let shouldExit = true;\n\n        if (this.model.get('dirty')) {\n            shouldExit = confirm(RB.CommentDialogView._shouldExitText);\n        }\n\n        if (shouldExit) {\n            this.model.cancel();\n            this.close();\n        }\n    },\n\n    /**\n     * Callback for when the Delete button is pressed.\n     *\n     * Deletes the comment and closes the dialog.\n     */\n    _onDeleteClicked() {\n        if (this.model.get('canDelete')) {\n            this.model.deleteComment();\n            this.close();\n        }\n    },\n\n    /**\n     * Callback for keydown events in the text field.\n     *\n     * If the Escape key is pressed, the dialog will be closed.\n     * If the Control-Enter or Alt-I keys are pressed, we'll handle them\n     * specially. Control-Enter is the same thing as clicking Save.\n     *\n     * metaKey used as alternative for Mac key shortcut philosophy.\n     * metaKey is only fired on keydown in Chrome and Brave.\n     *\n     * The keydown event won't be propagated to the parent elements.\n     *\n     * Args:\n     *     e (Event):\n     *         The keydown event.\n     */\n    _onTextKeyDown(e) {\n        e.stopPropagation();\n\n        switch (e.which) {\n            case $.ui.keyCode.ESCAPE:\n                this._onCancelClicked();\n                return false;\n\n            case 10:\n            case $.ui.keyCode.ENTER:\n                /* Enter */\n                if (e.metaKey || e.ctrlKey) {\n                    this.save();\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n\n            case 73:\n            case 105:\n                /* I */\n                if (e.metaKey || e.altKey) {\n                    // preventDefault is called to avoid Firefox info window.\n                    e.preventDefault();\n                    this.model.set('openIssue', !this.model.get('openIssue'));\n                }\n                break;\n\n            case 77:\n            case 109:\n                /* M */\n                if (e.metaKey || e.altKey) {\n                    // preventDefault is called to avoid Mac's window minimize.\n                    e.preventDefault();\n                    this.model.set('richText', !this.model.get('richText'));\n                }\n                break;\n\n            default:\n                break;\n        }\n    },\n}, {\n    /**\n     * The singleton instance.\n     */\n    _instance: null,\n\n    /**\n     * Create and shows a new comment dialog and associated model.\n     *\n     * This is a class method that handles providing a comment dialog\n     * ready to use with the given state.\n     *\n     * Only one comment dialog can appear on the screen at any given time\n     * when using this.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the view construction.\n     */\n    create: function(options={}) {\n        console.assert(options.comment, 'A comment must be specified');\n\n        const reviewRequestEditor =\n            options.reviewRequestEditor ||\n            RB.PageManager.getPage().model.reviewRequestEditor;\n\n        const dlg = new RB.CommentDialogView({\n            animate: options.animate,\n            commentIssueManager: options.commentIssueManager ||\n                                 reviewRequestEditor.get('commentIssueManager'),\n            model: new RB.CommentEditor({\n                comment: options.comment,\n                reviewRequest: reviewRequestEditor.get('reviewRequest'),\n                reviewRequestEditor: reviewRequestEditor,\n                publishedComments: options.publishedComments || undefined,\n                publishedCommentsType: options.publishedCommentsType ||\n                                       undefined,\n            })\n        });\n\n        dlg.render().$el\n            .css('z-index', 999) // XXX Use classes for z-indexes.\n            .appendTo(options.container || document.body);\n\n        options.position = options.position || {};\n\n        if (_.isFunction(options.position)) {\n            options.position(dlg);\n        } else if (options.position.beside) {\n            dlg.positionBeside(options.position.beside.el,\n                               options.position.beside);\n        } else {\n            let x = options.position.x;\n            let y = options.position.y;\n\n            if (x === undefined) {\n                /* Center it. */\n                x = $(document).scrollLeft() +\n                    ($(window).width() - dlg.$el.width()) / 2;\n            }\n\n            if (y === undefined) {\n                /* Center it. */\n                y = $(document).scrollTop() +\n                    ($(window).height() - dlg.$el.height()) / 2;\n            }\n\n            dlg.move(x, y);\n        }\n\n        dlg.on('closed', () => RB.CommentDialogView._instance = null);\n\n        const instance = RB.CommentDialogView._instance;\n        const showCommentDlg = function showCommentDlg() {\n            try {\n                dlg.open();\n            } catch(e) {\n                dlg.close();\n                throw e;\n            }\n\n            RB.CommentDialogView._instance = dlg;\n        };\n\n        if (instance) {\n            instance.on('closed', showCommentDlg);\n            instance.close();\n        } else {\n            showCommentDlg();\n        }\n\n        return dlg;\n    },\n\n    _cancelText: gettext('Cancel'),\n    _closeText: gettext('Close'),\n    _deleteText: gettext('Delete'),\n    _draftWarningTextTemplate: gettext('The review request\\'s current <a href=\"%s\">draft</a> needs to be published before you can comment.'),\n    _enableMarkdownText: gettext('Enable <u>M</u>arkdown'),\n    _loginTextTemplate: gettext('You must <a href=\"%s\">log in</a> to post a comment.'),\n    _markdownText: gettext('Markdown'),\n    _openAnIssueText: gettext('Open an <u>I</u>ssue'),\n    _otherReviewsText: gettext('Other reviews'),\n    _saveText: gettext('Save'),\n    _shouldExitText: gettext('You have unsaved changes. Are you sure you want to exit?'),\n    _verifyIssueText: gettext('Require Verification'),\n    _yourCommentText: gettext('Your comment'),\n    _yourCommentDirtyText: gettext('Your comment (unsaved)'),\n});\n\n\n})();\n"]}