{"version":3,"sources":["screenshotModel.es6.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;AAaA,GAAG,UAAH,GAAgB,GAAG,YAAH,CAAgB,MAAhB,CAAuB;AACnC,YADmC,sBACxB;AACP,eAAO,EAAE,QAAF,CAAW;AACd,qBAAS,IADK;AAEd,sBAAU,IAFI;AAGd,uBAAW;AAHG,SAAX,EAIJ,GAAG,YAAH,CAAgB,SAAhB,CAA0B,QAA1B,EAJI,CAAP;AAKH,KAPkC;;;AASnC,kBAAc,YATqB;;AAWnC,mBAAe;AACX,mBAAW;AADA,KAXoB;;AAenC,qBAAiB,CAAC,SAAD,CAfkB;AAgBnC,uBAAmB,CAAC,SAAD,EAAY,UAAZ,EAAwB,WAAxB,CAhBgB;;AAkBnC;;;;;;;;;;AAUA,kBA5BmC,4BA4BlB;AACb,eAAO,KAAK,GAAL,CAAS,SAAT,KAAuB,KAAK,GAAL,CAAS,UAAT,CAA9B;AACH;AA9BkC,CAAvB,CAAhB","file":"screenshotModel.js","sourcesContent":["/**\n * A screenshot.\n *\n * Model Attributes:\n *     caption (string):\n *         The screenshot's caption.\n *\n *     filename (string):\n *         The name of the file for the screenshot.\n *\n *     reviewURL (string):\n *         The URL of the review UI for this screenshot.\n */\nRB.Screenshot = RB.BaseResource.extend({\n    defaults() {\n        return _.defaults({\n            caption: null,\n            filename: null,\n            reviewURL: null\n        }, RB.BaseResource.prototype.defaults());\n    },\n\n    rspNamespace: 'screenshot',\n\n    attrToJsonMap: {\n        reviewURL: 'review_url'\n    },\n\n    serializedAttrs: ['caption'],\n    deserializedAttrs: ['caption', 'filename', 'reviewURL'],\n\n    /**\n     * Return a displayable name for the screenshot.\n     *\n     * This will return the caption, if one is set. Otherwise, the filename\n     * is returned.\n     *\n     * Returns:\n     *     string:\n     *     A string to show in the UI.\n     */\n    getDisplayName() {\n        return this.get('caption') || this.get('filename');\n    }\n});\n"]}