{"version":3,"sources":["changeEntryView.es6.js"],"names":[],"mappings":"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","file":"changeEntryView.js","sourcesContent":["(function() {\n\n\nconst ParentView = RB.ReviewRequestPage.BaseStatusUpdatesEntryView;\n\n\n/**\n * Displays the \"Review request changed\" entry on the review request page.\n *\n * This handles any rendering needed for special contents in the box,\n * such as the diff complexity icons and the file attachment thumbnails.\n */\nRB.ReviewRequestPage.ChangeEntryView = ParentView.extend({\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *          Options for the view.\n     *\n     * Option Args:\n     *     reviewRequestEditorView (RB.ReviewRequestEditorView):\n     *         The review request editor.\n     */\n    initialize(options) {\n        ParentView.prototype.initialize.apply(this, arguments);\n\n        const reviewRequestEditor = this.model.get('reviewRequestEditor');\n\n        this.reviewRequest = reviewRequestEditor.get('reviewRequest');\n        this.reviewRequestEditorView = options.reviewRequestEditorView;\n\n        this._$boxStatus = null;\n        this._$fixItLabel = null;\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.ReviewRequestPage.ChangeEntryView:\n     *     This object, for chaining.\n     */\n    render() {\n        ParentView.prototype.render.call(this);\n\n        this._$boxStatus = this.$('.box-status');\n        this._$fixItLabel = $('<label class=\"fix-it-label\">')\n            .hide()\n            .appendTo(this.$('.labels-container'));\n\n        RB.formatText(this.$('.changedesc-text'), {\n            bugTrackerURL: this.reviewRequest.get('bugTrackerURL'),\n            isHTMLEncoded: true,\n        });\n\n        this._updateLabels();\n\n        _.each(this.$('.diff-index tr'), rowEl => {\n            const $row = $(rowEl);\n            const iconView = new RB.DiffComplexityIconView({\n                numInserts: $row.data('insert-count'),\n                numDeletes: $row.data('delete-count'),\n                numReplaces: $row.data('replace-count'),\n                totalLines: $row.data('total-line-count'),\n            });\n\n            $row.find('.diff-file-icon')\n                .empty()\n                .append(iconView.$el);\n\n            iconView.render();\n        });\n\n        _.each(this.$('.file-container'), thumbnailEl => {\n            const $thumbnail = $(thumbnailEl);\n            const $caption = $thumbnail.find('.file-caption .edit');\n            const model = this.reviewRequest.draft.createFileAttachment({\n                id: $thumbnail.data('file-id')\n            });\n\n            if (!$caption.hasClass('empty-caption')) {\n                model.set('caption', $caption.text());\n            }\n\n            this.reviewRequestEditorView.buildFileAttachmentThumbnail(\n                model, null,\n                {\n                    $el: $thumbnail,\n                    canEdit: false,\n                });\n        });\n\n        return this;\n    },\n\n    /**\n     * Set up a review view.\n     *\n     * This will begin listening for changes to the issue counts and\n     * update the labels on the box.\n     *\n     * Args:\n     *     view (RB.ReviewRequestPage.ReviewView):\n     *         The review view being set up.\n     */\n    setupReviewView(view) {\n        this.listenTo(view, 'openIssuesChanged', this._updateLabels);\n    },\n\n    /**\n     * Update the \"Fix It\" label based on the open issue counts.\n     *\n     * If there are open issues, there will be a \"Fix it!\" label.\n     */\n    _updateLabels() {\n        if (this._reviewViews.some(view => view.hasOpenIssues())) {\n            const openIssueCount = this._reviewViews.reduce(\n                (sum, view) => sum + view.getOpenIssueCount(),\n                0);\n\n            this._$boxStatus.addClass('has-issues');\n            this._$fixItLabel\n                .empty()\n                .append(\n                    $('<span class=\"open-issue-count\">')\n                        .text(interpolate(gettext('%s failed'),\n                                          [openIssueCount]))\n                )\n                .append(document.createTextNode(gettext('Fix it!')))\n                .show()\n                .css({\n                    opacity: 1,\n                    left: 0,\n                });\n        } else {\n            this._$fixItLabel.css({\n                opacity: 0,\n                left: '-100px',\n            });\n            this._$boxStatus.removeClass('has-issues');\n        }\n    }\n});\n\n\n})();\n"]}