{"version":3,"sources":["diffReviewableCollectionTests.es6.js"],"names":[],"mappings":"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","file":"diffReviewableCollectionTests.js","sourcesContent":["suite('rb/diffviewer/collections/DiffReviewableCollection', function() {\n    describe('Construction', function() {\n        it('Sets reviewRequest', function() {\n            const reviewRequest = new RB.ReviewRequest();\n            const collection = new RB.DiffReviewableCollection([], {\n                reviewRequest: reviewRequest,\n            });\n\n            expect(collection.reviewRequest).toBe(reviewRequest);\n        });\n    });\n\n    describe('watchFiles', function() {\n        let collection;\n        let files;\n\n        beforeEach(function() {\n            collection = new RB.DiffReviewableCollection([], {\n                reviewRequest: new RB.ReviewRequest(),\n            });\n            files = new RB.DiffFileCollection();\n        });\n\n        it('Initially populates', function() {\n            spyOn(collection, '_populateFromFiles');\n\n            collection.watchFiles(files);\n\n            expect(collection._populateFromFiles).toHaveBeenCalled();\n        });\n\n        it('Populates on files.reset', function() {\n            spyOn(collection, 'trigger');\n            spyOn(collection, 'reset');\n\n            collection.watchFiles(files);\n\n            files.reset([\n                new RB.DiffFile({\n                    filediff: {\n                        id: 300,\n                        revision: 1,\n                    },\n                    index: 1,\n                    id: 100,\n                }),\n                new RB.DiffFile({\n                    filediff: {\n                        id: 301,\n                        revision: 1,\n                    },\n                    interfilediff: {\n                        id: 400,\n                        revision: 2,\n                    },\n                    index: 2,\n                    id: 101,\n                    commentCounts: [1],\n                }),\n                new RB.DiffFile({\n                    filediff: {\n                        id: 302,\n                        revision: 2,\n                    },\n                    forceInterdiff: true,\n                    forceInterdiffRevision: 1,\n                    index: 3,\n                    id: 102,\n                }),\n            ]);\n\n            expect(collection.reset).toHaveBeenCalled();\n            expect(collection.trigger).toHaveBeenCalledWith('populating');\n            expect(collection.trigger).toHaveBeenCalledWith('populated');\n            expect(collection.length).toBe(3);\n\n            let diffReviewable = collection.at(0);\n            expect(diffReviewable.get('file').id).toBe(100);\n            expect(diffReviewable.get('reviewRequest'))\n                .toBe(collection.reviewRequest);\n            expect(diffReviewable.get('fileDiffID')).toBe(300);\n            expect(diffReviewable.get('interFileDiffID')).toBe(null);\n            expect(diffReviewable.get('revision')).toBe(1);\n            expect(diffReviewable.get('interdiffRevision')).toBe(null);\n\n            diffReviewable = collection.at(1);\n            expect(diffReviewable.get('file').id).toBe(101);\n            expect(diffReviewable.get('reviewRequest'))\n                .toBe(collection.reviewRequest);\n            expect(diffReviewable.get('fileDiffID')).toBe(301);\n            expect(diffReviewable.get('interFileDiffID')).toBe(400);\n            expect(diffReviewable.get('revision')).toBe(1);\n            expect(diffReviewable.get('interdiffRevision')).toBe(2);\n            expect(diffReviewable.get('serializedCommentBlocks')).toEqual([1]);\n\n            diffReviewable = collection.at(2);\n            expect(diffReviewable.get('file').id).toBe(102);\n            expect(diffReviewable.get('reviewRequest'))\n                .toBe(collection.reviewRequest);\n            expect(diffReviewable.get('fileDiffID')).toBe(302);\n            expect(diffReviewable.get('interFileDiffID')).toBe(null);\n            expect(diffReviewable.get('revision')).toBe(2);\n            expect(diffReviewable.get('interdiffRevision')).toBe(1);\n        });\n    });\n});\n"]}