{"version":3,"sources":["infoboxManagerViewTests.es6.js"],"names":[],"mappings":"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","file":"infoboxManagerViewTests.js","sourcesContent":["suite('rb/ui/views/InfoboxManagerView', () => {\n    const DummyInfoboxView = RB.BaseInfoboxView.extend({\n        infoboxID: 'dummy-infobox',\n    });\n\n    let infoboxManagerView;\n\n    beforeEach(() => {\n        infoboxManagerView = RB.InfoboxManagerView.getInstance();\n\n        spyOn(infoboxManagerView, '_fetchInfoboxContents')\n            .and.callFake((url, onDone) => {\n                expect(url).toBe('/foo/infobox/');\n                onDone('<strong>Hi!</strong>');\n            });\n    });\n\n    afterEach(() => {\n        infoboxManagerView.remove();\n        RB.InfoboxManagerView._instance = null;\n    });\n\n    describe('addTargets', () => {\n        let $el1;\n        let $el2;\n        let $els;\n\n        beforeEach(() => {\n            $el1 = $('<div/>');\n            $el2 = $('<div/>');\n            $els = $([$el1[0], $el2[0]]);\n        });\n\n        it('Registers new targets', () => {\n            infoboxManagerView.addTargets(DummyInfoboxView, $els);\n\n            expect($el1.data('has-infobox')).toBe(true);\n            expect($el2.data('has-infobox')).toBe(true);\n        });\n\n        it('Registers event handlers', () => {\n            spyOn(infoboxManagerView, '_onTargetMouseEnter');\n            spyOn(infoboxManagerView, '_onMouseLeave');\n\n            infoboxManagerView.addTargets(DummyInfoboxView, $els);\n\n            $el1.triggerHandler('mouseenter');\n            expect(infoboxManagerView._onTargetMouseEnter).toHaveBeenCalled();\n\n            $el1.triggerHandler('mouseleave');\n            expect(infoboxManagerView._onMouseLeave).toHaveBeenCalled();\n        });\n\n        it('Skips already-registered targets', () => {\n            spyOn(infoboxManagerView, '_onTargetMouseEnter');\n\n            infoboxManagerView.addTargets(DummyInfoboxView, $els);\n            infoboxManagerView.addTargets(DummyInfoboxView, $els);\n\n            $el1.triggerHandler('mouseenter');\n            expect(infoboxManagerView._onTargetMouseEnter.calls.count())\n                .toBe(1);\n        });\n    });\n\n    describe('getOrCreateInfobox', () => {\n        it('Caches infobox views', () => {\n            const infoboxView1 = infoboxManagerView.getOrCreateInfobox(\n                DummyInfoboxView);\n            const infoboxView2 = infoboxManagerView.getOrCreateInfobox(\n                DummyInfoboxView);\n\n            expect(infoboxView1.cid).toBe(infoboxView2.cid);\n        });\n\n        it('Starts infobox hidden', () => {\n            const infoboxView = infoboxManagerView.getOrCreateInfobox(\n                DummyInfoboxView);\n\n            expect(infoboxView.$el.is(':visible')).toBe(false);\n        });\n\n        it('Registers events', () => {\n            spyOn(infoboxManagerView, '_onInfoboxMouseEnter');\n            spyOn(infoboxManagerView, '_onMouseLeave');\n\n            const infoboxView = infoboxManagerView.getOrCreateInfobox(\n                DummyInfoboxView);\n\n            infoboxView.$el.triggerHandler('mouseenter');\n            expect(infoboxManagerView._onInfoboxMouseEnter).toHaveBeenCalled();\n\n            infoboxView.$el.triggerHandler('mouseleave');\n            expect(infoboxManagerView._onMouseLeave).toHaveBeenCalled();\n        });\n    });\n\n    describe('setPositioning', () => {\n        it('Overrides default position', () => {\n            infoboxManagerView.setPositioning(DummyInfoboxView, {\n                side: 'b',\n                foo: 'bar',\n            });\n\n            const infoboxView = infoboxManagerView.getOrCreateInfobox(\n                DummyInfoboxView);\n            expect(infoboxView.positioning).toEqual({\n                side: 'b',\n                foo: 'bar',\n            });\n        });\n    });\n\n    describe('Target Events', () => {\n        let $el;\n\n        beforeEach(() => {\n            spyOn(window, 'setTimeout').and.callFake(cb => cb());\n\n            $el = $('<a href=\"/foo/\" />');\n            infoboxManagerView.addTargets(DummyInfoboxView, $el);\n        });\n\n        describe('mouseenter', () => {\n            it('First time for target', () => {\n                $el.triggerHandler('mouseenter');\n\n                const infoboxView = infoboxManagerView.getOrCreateInfobox(\n                    DummyInfoboxView);\n                expect(infoboxView.$el.html()).toBe('<strong>Hi!</strong>');\n                expect(infoboxView.$el.is(':visible')).toBe(true);\n            });\n\n            it('Subsequent time for target (cached data)', () => {\n                const infoboxView = infoboxManagerView.getOrCreateInfobox(\n                    DummyInfoboxView);\n\n                spyOn(infoboxView, 'setContents').and.callThrough();\n                spyOn(infoboxManagerView, '_showInfobox')\n                    .and.callThrough();\n\n                infoboxManagerView._cache['/foo/infobox/'] = 'Old HTML';\n\n                $el.triggerHandler('mouseenter');\n\n                expect(infoboxView.$el.html()).toBe('<strong>Hi!</strong>');\n                expect(infoboxView.$el.is(':visible')).toBe(true);\n                expect(infoboxManagerView._showInfobox.calls.count())\n                    .toBe(1);\n                expect(infoboxView.setContents.calls.count()).toBe(2);\n            });\n        });\n\n        describe('mouseleave', () => {\n            beforeEach(() => {\n                $el.triggerHandler('mouseenter');\n            });\n\n            it('Cancels showing infobox', () => {\n                infoboxManagerView._showTimeout = 123;\n\n                $el.triggerHandler('mouseleave');\n\n                expect(infoboxManagerView._showTimeout).toBe(null);\n            });\n\n            it('Hides infobox', () => {\n                const infoboxView = infoboxManagerView.getOrCreateInfobox(\n                    DummyInfoboxView);\n                infoboxManagerView._showTimeout = 123;\n\n                expect(infoboxView.$el.is(':visible')).toBe(true);\n                expect(infoboxManagerView._activeInfoboxView).not.toBe(null);\n\n                $el.triggerHandler('mouseleave');\n\n                expect(infoboxView.$el.is(':visible')).toBe(false);\n                expect(infoboxManagerView._activeInfoboxView).toBe(null);\n                expect(infoboxManagerView._showTimeout).toBe(null);\n            });\n        });\n    });\n\n    describe('Infobox Events', () => {\n        let $el;\n\n        beforeEach(() => {\n            spyOn(window, 'setTimeout').and.callFake(cb => cb());\n\n            $el = $('<a href=\"/foo/\" />');\n            infoboxManagerView.addTargets(DummyInfoboxView, $el);\n        });\n\n        describe('mouseenter', () => {\n            it('Preserves infobox after leaving target', () => {\n                const infoboxView = infoboxManagerView.getOrCreateInfobox(\n                    DummyInfoboxView);\n\n                /* Simulate hovering over a target. */\n                $el.triggerHandler('mouseenter');\n                expect(infoboxManagerView._activeInfoboxView)\n                    .toBe(infoboxView);\n\n                /*\n                 * Restore the default behavior of the spy and simulate the\n                 * mouse leaving the target.\n                 */\n                window.setTimeout.and.callThrough();\n                $el.triggerHandler('mouseleave');\n\n                expect(infoboxManagerView._hideTimeout).not.toBe(null);\n                expect(infoboxManagerView._showTimeout).toBe(null);\n\n                infoboxView.$el.triggerHandler('mouseenter');\n\n                expect(infoboxView.$el.is(':visible')).toBe(true);\n                expect(infoboxManagerView._showTimeout).toBe(null);\n                expect(infoboxManagerView._hideTimeout).toBe(null);\n            });\n        });\n\n        describe('mouseleave', () => {\n            it('Hides infobox', () => {\n                const infoboxView = infoboxManagerView.getOrCreateInfobox(\n                    DummyInfoboxView);\n\n                infoboxManagerView._showInfobox(infoboxView, $el);\n                expect(infoboxView.$el.is(':visible')).toBe(true);\n                expect(infoboxManagerView._activeInfoboxView)\n                    .toBe(infoboxView);\n\n                infoboxView.$el.triggerHandler('mouseleave');\n\n                expect(infoboxView.$el.is(':visible')).toBe(false);\n                expect(infoboxManagerView._activeInfoboxView).toBe(null);\n                expect(infoboxManagerView._showTimeout).toBe(null);\n            });\n        });\n    });\n});\n"]}