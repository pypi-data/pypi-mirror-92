{"version":3,"sources":["diffViewerPageViewTests.es6.js"],"names":[],"mappings":"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","file":"diffViewerPageViewTests.js","sourcesContent":["suite('rb/pages/views/DiffViewerPageView', function() {\n    const tableTemplate = _.template(dedent`\n        <div class=\"diff-container\">\n         <table class=\"sidebyside\">\n          <thead>\n           <tr class=\"filename-row\">\n            <th colspan=\"4\">\n             <a name=\"<%- fileID %>\" class=\"file-anchor\"></a>\n            </th>\n           </tr>\n          </thead>\n          <% _.each(chunks, function(chunk) { %>\n           <tbody class=\"<%- chunk.type %>\">\n            <% _.each(chunk.lines, function(line, i) { %>\n             <tr line=\"<%- line.vNumber %>\">\n              <th>\n               <% if (i === 0 && chunk.type !== \"equal\") { %>\n                <a name=\"<%- chunk.id %>\" class=\"chunk-anchor\"></a>\n               <% } %>\n               <%- line.leftNumber || \"\" %>\n              </th>\n              <td class=\"l\"></td>\n              <th><%- line.rightNumber || \"\" %></th>\n              <td class=\"r\"></td>\n             </tr>\n            <% }); %>\n           </tbody>\n          <% }); %>\n         </table>\n        </div>\n    `);\n\n    const pageTemplate = dedent`\n        <div>\n         <div id=\"review-banner\"></div>\n         <div id=\"diffs\"></div>\n        </div>\n    `;\n\n    let page;\n    let pageView;\n    let $diffs;\n\n    beforeEach(function() {\n        /*\n         * Disable the router so that the page doesn't change the URL on the\n         * page while tests run.\n         */\n        spyOn(Backbone.history, 'start');\n\n        page = new RB.DiffViewerPage({\n            checkForUpdates: false,\n            pagination: {\n                current_page: 1,\n            },\n            reviewRequestData: {\n                id: 123,\n                loaded: true,\n                state: RB.ReviewRequest.PENDING,\n            },\n            revision: {\n                revision: 1,\n                interdiff_revision: null,\n                is_interdiff: false,\n            },\n            editorData: {\n                mutableByUser: true,\n                statusMutableByUser: true,\n            },\n        }, {\n            parse: true,\n        });\n\n        pageView = new RB.DiffViewerPageView({\n            el: $(pageTemplate).appendTo($testsScratch),\n            model: page,\n        });\n\n        $diffs = pageView.$el.children('#diffs');\n\n        /* Don't communicate with the server for page updates. */\n        spyOn(page.get('reviewRequest'), 'ready').and.callFake(\n            (options, context) => options.ready.call(context));\n    });\n\n    afterEach(function() {\n        RB.DnDUploader.instance = null;\n    });\n\n    describe('Anchors', function() {\n        it('Tracks all types', function() {\n            $diffs.html(tableTemplate({\n                fileID: 'file1',\n                chunks: [\n                    {\n                        id: '1.1',\n                        lines: [\n                            {\n                                type: 'insert',\n                                vNumber: 100,\n                                leftNumber: 100,\n                                rightNumber: 101,\n                            },\n                        ],\n                    },\n                    {\n                        id: '1.2',\n                        lines: [\n                            {\n                                type: 'equal',\n                                vNumber: 101,\n                                leftNumber: 101,\n                                rightNumber: 101,\n                            },\n                        ],\n                    },\n                    {\n                        id: '1.3',\n                        lines: [\n                            {\n                                type: 'delete',\n                                vNumber: 102,\n                                leftNumber: 102,\n                                rightNumber: 101,\n                            },\n                        ],\n                    },\n                ],\n            }));\n\n            pageView.render();\n            pageView._updateAnchors(pageView.$el.find('table').eq(0));\n\n            expect(pageView._$anchors.length).toBe(4);\n            expect(pageView._$anchors[0].name).toBe('file1');\n            expect(pageView._$anchors[1].name).toBe('1.1');\n            expect(pageView._$anchors[2].name).toBe('1.2');\n            expect(pageView._$anchors[3].name).toBe('1.3');\n            expect(pageView._selectedAnchorIndex).toBe(0);\n        });\n\n        describe('Navigation', function() {\n            beforeEach(function() {\n                $diffs.html([\n                    tableTemplate({\n                        fileID: 'file1',\n                        chunks: [\n                            {\n                                id: '1.1',\n                                lines: [\n                                    {\n                                        type: 'insert',\n                                        vNumber: 100,\n                                        leftNumber: 100,\n                                        rightNumber: 101,\n                                    },\n                                ],\n                            },\n                            {\n                                id: '1.2',\n                                lines: [\n                                    {\n                                        type: 'equal',\n                                        vNumber: 101,\n                                        leftNumber: 101,\n                                        rightNumber: 101,\n                                    },\n                                ],\n                            },\n                        ],\n                    }),\n                    tableTemplate({\n                        fileID: 'file2',\n                        chunks: [],\n                    }),\n                    tableTemplate({\n                        fileID: 'file3',\n                        chunks: [\n                            {\n                                id: '2.1',\n                                lines: [\n                                    {\n                                        type: 'insert',\n                                        vNumber: 100,\n                                        leftNumber: 100,\n                                        rightNumber: 101,\n                                    }\n                                ]\n                            },\n                            {\n                                id: '2.2',\n                                lines: [\n                                    {\n                                        type: 'equal',\n                                        vNumber: 101,\n                                        leftNumber: 101,\n                                        rightNumber: 101,\n                                    },\n                                ],\n                            },\n                        ],\n                    }),\n                ]);\n\n                pageView.render();\n\n                pageView.$el.find('table').each(function() {\n                    pageView._updateAnchors($(this));\n                });\n            });\n\n            describe('Previous file', function() {\n                it('From file', function() {\n                    pageView.selectAnchorByName('file2');\n                    expect(pageView._selectedAnchorIndex).toBe(3);\n\n                    pageView._selectPreviousFile();\n\n                    expect(pageView._selectedAnchorIndex).toBe(0);\n                });\n\n                it('From chunk', function() {\n                    pageView.selectAnchorByName('2.2');\n                    expect(pageView._selectedAnchorIndex).toBe(6);\n\n                    pageView._selectPreviousFile();\n\n                    expect(pageView._selectedAnchorIndex).toBe(4);\n                });\n\n                it('On first file', function() {\n                    pageView.selectAnchorByName('file1');\n                    expect(pageView._selectedAnchorIndex).toBe(0);\n\n                    pageView._selectPreviousFile();\n\n                    expect(pageView._selectedAnchorIndex).toBe(0);\n                });\n            });\n\n            describe('Next file', function() {\n                it('From file', function() {\n                    pageView.selectAnchorByName('file1');\n                    expect(pageView._selectedAnchorIndex).toBe(0);\n\n                    pageView._selectNextFile();\n\n                    expect(pageView._selectedAnchorIndex).toBe(3);\n                });\n\n                it('From chunk', function() {\n                    pageView.selectAnchorByName('1.1');\n                    expect(pageView._selectedAnchorIndex).toBe(1);\n\n                    pageView._selectNextFile();\n\n                    expect(pageView._selectedAnchorIndex).toBe(3);\n                });\n\n                it('On last file', function() {\n                    pageView.selectAnchorByName('file3');\n                    expect(pageView._selectedAnchorIndex).toBe(4);\n\n                    pageView._selectNextFile();\n\n                    expect(pageView._selectedAnchorIndex).toBe(4);\n                });\n            });\n\n            describe('Previous anchor', function() {\n                it('From file to file', function() {\n                    pageView.selectAnchorByName('file3');\n                    expect(pageView._selectedAnchorIndex).toBe(4);\n\n                    pageView._selectPreviousDiff();\n\n                    expect(pageView._selectedAnchorIndex).toBe(3);\n                });\n\n                it('From file to chunk', function() {\n                    pageView.selectAnchorByName('file2');\n                    expect(pageView._selectedAnchorIndex).toBe(3);\n\n                    pageView._selectPreviousDiff();\n\n                    expect(pageView._selectedAnchorIndex).toBe(2);\n                });\n\n                it('From chunk to file', function() {\n                    pageView.selectAnchorByName('2.1');\n                    expect(pageView._selectedAnchorIndex).toBe(5);\n\n                    pageView._selectPreviousDiff();\n\n                    expect(pageView._selectedAnchorIndex).toBe(4);\n                });\n\n                it('From chunk to chunk', function() {\n                    pageView.selectAnchorByName('2.2');\n                    expect(pageView._selectedAnchorIndex).toBe(6);\n\n                    pageView._selectPreviousDiff();\n\n                    expect(pageView._selectedAnchorIndex).toBe(5);\n                });\n\n                it('On first file', function() {\n                    pageView.selectAnchorByName('file1');\n                    expect(pageView._selectedAnchorIndex).toBe(0);\n\n                    pageView._selectPreviousDiff();\n\n                    expect(pageView._selectedAnchorIndex).toBe(0);\n                });\n            });\n\n            describe('Next anchor', function() {\n                it('From file to file', function() {\n                    pageView.selectAnchorByName('file2');\n                    expect(pageView._selectedAnchorIndex).toBe(3);\n\n                    pageView._selectNextDiff();\n\n                    expect(pageView._selectedAnchorIndex).toBe(4);\n                });\n\n                it('From file to chunk', function() {\n                    pageView.selectAnchorByName('file1');\n                    expect(pageView._selectedAnchorIndex).toBe(0);\n\n                    pageView._selectNextDiff();\n\n                    expect(pageView._selectedAnchorIndex).toBe(1);\n                });\n\n                it('From chunk to file', function() {\n                    pageView.selectAnchorByName('1.2');\n                    expect(pageView._selectedAnchorIndex).toBe(2);\n\n                    pageView._selectNextDiff();\n\n                    expect(pageView._selectedAnchorIndex).toBe(3);\n                });\n\n                it('From chunk to chunk', function() {\n                    pageView.selectAnchorByName('2.1');\n                    expect(pageView._selectedAnchorIndex).toBe(5);\n\n                    pageView._selectNextDiff();\n\n                    expect(pageView._selectedAnchorIndex).toBe(6);\n                });\n\n                it('On last chunk', function() {\n                    pageView.selectAnchorByName('2.2');\n                    expect(pageView._selectedAnchorIndex).toBe(6);\n\n                    pageView._selectNextDiff();\n\n                    expect(pageView._selectedAnchorIndex).toBe(6);\n                });\n            });\n        });\n    });\n\n    describe('Key bindings', function() {\n        function triggerKeyPress(c) {\n            const evt = $.Event('keypress');\n            evt.which = c.charCodeAt(0);\n\n            pageView.$el.trigger(evt);\n        }\n\n        function testKeys(description, funcName, keyList) {\n            describe(description, function() {\n                keyList.forEach(key => {\n                    let label;\n                    let c;\n\n                    if (key.length === 2) {\n                        label = key[0];\n                        c = key[1];\n                    } else {\n                        label = \"'\" + key + \"'\";\n                        c = key;\n                    }\n\n                    it(label, function() {\n                        pageView.render();\n                        spyOn(pageView, funcName);\n                        triggerKeyPress(c);\n                        expect(pageView[funcName]).toHaveBeenCalled();\n                    });\n                });\n            });\n        }\n\n        testKeys('Previous file',\n                 '_selectPreviousFile',\n                 ['a', 'A', 'K', 'P', '<', 'm']);\n        testKeys('Next file',\n                 '_selectNextFile',\n                 ['f', 'F', 'J', 'N', '>']);\n        testKeys('Previous anchor',\n                 '_selectPreviousDiff',\n                 ['s', 'S', 'k', 'p', ',']);\n        testKeys('Next anchor',\n                 '_selectNextDiff',\n                 ['d', 'D', 'j', 'n', '.']);\n        testKeys('Previous comment',\n                 '_selectPreviousComment',\n                 ['[', 'x']);\n        testKeys('Next comment',\n                 '_selectNextComment',\n                 [']', 'c']);\n        testKeys('Recenter selected',\n                 '_recenterSelected',\n                 [['Enter', '\\x0d']]);\n        testKeys('Create comment',\n                 '_createComment',\n                 ['r', 'R']);\n    });\n\n    describe('Reviewable Management', function() {\n        beforeEach(function() {\n            spyOn(pageView, 'queueLoadDiff');\n\n            pageView.render();\n        });\n\n        it('File added', function() {\n            expect($diffs.find('.diff-container').length).toBe(0);\n            expect(pageView.queueLoadDiff.calls.count()).toBe(0);\n\n            page.files.reset([\n                new RB.DiffFile({\n                    id: 100,\n                    filediff: {\n                        id: 200,\n                        revision: 1,\n                    },\n                }),\n            ]);\n\n            expect($diffs.find('.diff-container').length).toBe(1);\n            expect(pageView.queueLoadDiff.calls.count()).toBe(1);\n        });\n\n        it('Files reset', function() {\n            expect($diffs.find('.diff-container').length).toBe(0);\n            expect(pageView.queueLoadDiff.calls.count()).toBe(0);\n\n            /* Add an initial batch of files. */\n            page.files.reset([\n                new RB.DiffFile({\n                    id: 100,\n                    filediff: {\n                        id: 200,\n                        revision: 1,\n                    },\n                }),\n            ]);\n\n            expect($diffs.find('.diff-container').length).toBe(1);\n            expect(pageView.queueLoadDiff.calls.count()).toBe(1);\n\n            /* Now do another. */\n            page.files.reset([\n                new RB.DiffFile({\n                    id: 101,\n                    filediff: {\n                        id: 201,\n                        revision: 2,\n                    },\n                }),\n            ]);\n\n            const $containers = $diffs.find('.diff-container');\n            expect($containers.length).toBe(1);\n            expect($containers.find('.sidebyside')[0].id)\n                .toBe('file_container_101');\n            expect(pageView.queueLoadDiff.calls.count()).toBe(2);\n        });\n    });\n\n    describe('Page view/URL state', function() {\n        let router;\n\n        beforeEach(function() {\n            router = pageView.router;\n\n            spyOn(page, 'loadDiffRevision');\n\n            /*\n             * Bypass all the actual history logic and get to the actual\n             * router handler.\n             */\n            spyOn(router, 'navigate').and.callFake((url, options) => {\n                if (!options || options.trigger !== false) {\n                    Backbone.history.loadUrl(url);\n                }\n            });\n        });\n\n        describe('Initial URL', function() {\n            it('Initial default load', function() {\n                pageView._setInitialURL('', 'index_header');\n\n                expect(router.navigate).toHaveBeenCalledWith(\n                    '1/#index_header',\n                    {\n                        replace: true,\n                        trigger: false,\n                    });\n                expect(page.loadDiffRevision).not.toHaveBeenCalled();\n            });\n\n            it('Initial load of first page explicit', function() {\n                pageView._setInitialURL('?page=1', 'index_header');\n\n                expect(router.navigate).toHaveBeenCalledWith(\n                    '1/?page=1#index_header',\n                    {\n                        replace: true,\n                        trigger: false,\n                    });\n                expect(page.loadDiffRevision).not.toHaveBeenCalled();\n            });\n\n            it('Initial load of page > 1', function() {\n                pageView._setInitialURL('?page=2', 'index_header');\n\n                expect(router.navigate).toHaveBeenCalledWith(\n                    '1/?page=2#index_header',\n                    {\n                        replace: true,\n                        trigger: false,\n                    });\n                expect(page.loadDiffRevision).not.toHaveBeenCalled();\n            });\n\n            it('Initial load of interdiff', function() {\n                page.revision.set('revision', 2);\n                page.revision.set('interdiffRevision', 3);\n                pageView._setInitialURL('?page=2', 'index_header');\n\n                expect(router.navigate).toHaveBeenCalledWith(\n                    '2-3/?page=2#index_header',\n                    {\n                        replace: true,\n                        trigger: false,\n                    });\n                expect(page.loadDiffRevision).not.toHaveBeenCalled();\n            });\n\n            it('Initial load with filename patterns', function() {\n                pageView._setInitialURL('?filenames=*.js,src/*',\n                                        'index_header');\n\n                expect(router.navigate).toHaveBeenCalledWith(\n                    '1/?filenames=*.js,src/*#index_header',\n                    {\n                        replace: true,\n                        trigger: false,\n                    });\n                expect(page.loadDiffRevision).not.toHaveBeenCalled();\n            });\n        });\n\n        describe('_navigate', function() {\n            beforeEach(function() {\n                page.set('filenamePatterns', '*.js,src/*');\n            });\n\n            it('With page == 1', function() {\n                pageView._navigate({\n                    page: 1,\n                });\n\n                expect(router.navigate).toHaveBeenCalledWith(\n                    '1/?filenames=*.js%2Csrc%2F*',\n                    {\n                        trigger: true,\n                    });\n                expect(page.loadDiffRevision).toHaveBeenCalledWith({\n                    page: 1,\n                    revision: 1,\n                    interdiffRevision: null,\n                    filenamePatterns: '*.js,src/*',\n                });\n            });\n\n            it('With page > 1', function() {\n                pageView._navigate({\n                    page: 2,\n                });\n\n                expect(router.navigate).toHaveBeenCalledWith(\n                    '1/?page=2&filenames=*.js%2Csrc%2F*',\n                    {\n                        trigger: true,\n                    });\n                expect(page.loadDiffRevision).toHaveBeenCalledWith({\n                    page: 2,\n                    revision: 1,\n                    interdiffRevision: null,\n                    filenamePatterns: '*.js,src/*',\n                });\n            });\n\n            it('New revision on page > 1', function() {\n                page.pagination.set('currentPage', 2);\n                pageView._onRevisionSelected([0, 2]);\n\n                expect(router.navigate).toHaveBeenCalledWith(\n                    '2/?filenames=*.js%2Csrc%2F*',\n                    {\n                        trigger: true,\n                    });\n                expect(page.loadDiffRevision).toHaveBeenCalledWith({\n                    page: 1,\n                    revision: 2,\n                    interdiffRevision: null,\n                    filenamePatterns: '*.js,src/*',\n                });\n            });\n\n            it('Same revision on page > 1', function() {\n                page.pagination.set('currentPage', 2);\n\n                pageView._navigate({\n                    revision: 1,\n                });\n\n                expect(router.navigate).toHaveBeenCalledWith(\n                    '1/?page=2&filenames=*.js%2Csrc%2F*',\n                    {\n                        trigger: true,\n                    });\n                expect(page.loadDiffRevision).toHaveBeenCalledWith({\n                    page: 2,\n                    revision: 1,\n                    interdiffRevision: null,\n                    filenamePatterns: '*.js,src/*',\n                });\n            });\n\n            it('With updateURLOnly', function() {\n                page.pagination.set('currentPage', 2);\n\n                pageView._navigate({\n                    revision: 2,\n                    interdiffRevision: 3,\n                    updateURLOnly: true,\n                });\n\n                expect(router.navigate).toHaveBeenCalledWith(\n                    '2-3/?filenames=*.js%2Csrc%2F*',\n                    {\n                        replace: true,\n                        trigger: false,\n                    });\n                expect(page.loadDiffRevision).not.toHaveBeenCalled();\n            });\n\n            it('With anchor', function() {\n                pageView._navigate({\n                    anchor: 'test',\n                });\n\n                expect(router.navigate).toHaveBeenCalledWith(\n                    '1/?filenames=*.js%2Csrc%2F*#test',\n                    {\n                        trigger: true,\n                    });\n                expect(page.loadDiffRevision).toHaveBeenCalledWith({\n                    page: 1,\n                    revision: 1,\n                    interdiffRevision: null,\n                    filenamePatterns: '*.js,src/*',\n                });\n            });\n        });\n\n        describe('Revision selector', function() {\n            describe('New diff revision selected', function() {\n                it('From single revision', function() {\n                    pageView._onRevisionSelected([0, 2]);\n\n                    expect(router.navigate).toHaveBeenCalledWith(\n                        '2/',\n                        {\n                            trigger: true,\n                        });\n                    expect(page.loadDiffRevision).toHaveBeenCalledWith({\n                        page: 1,\n                        revision: 2,\n                        interdiffRevision: null,\n                        filenamePatterns: null,\n                    });\n                });\n\n                it('From interdiff revision', function() {\n                    page.revision.set('interdiffRevision', 2);\n\n                    pageView._onRevisionSelected([0, 2]);\n\n                    expect(router.navigate).toHaveBeenCalledWith(\n                        '2/',\n                        {\n                            trigger: true,\n                        });\n                    expect(page.loadDiffRevision).toHaveBeenCalledWith({\n                        page: 1,\n                        revision: 2,\n                        interdiffRevision: null,\n                        filenamePatterns: null,\n                    });\n                });\n            });\n\n            it('New interdiff revision selected', function() {\n                pageView._onRevisionSelected([2, 5]);\n\n                expect(router.navigate).toHaveBeenCalledWith(\n                    '2-5/',\n                    {\n                        trigger: true,\n                    });\n                expect(page.loadDiffRevision).toHaveBeenCalledWith({\n                    page: 1,\n                    revision: 2,\n                    interdiffRevision: 5,\n                    filenamePatterns: null,\n                });\n            });\n        });\n\n        describe('Page selector', function() {\n            it('With page == 1', function() {\n                pageView._onPageSelected(true, 1);\n\n                expect(router.navigate).toHaveBeenCalledWith(\n                    '1/',\n                    {\n                        trigger: true,\n                    });\n                expect(page.loadDiffRevision).toHaveBeenCalledWith({\n                    page: 1,\n                    revision: 1,\n                    interdiffRevision: null,\n                    filenamePatterns: null,\n                });\n            });\n\n            it('With page > 1', function() {\n                pageView._onPageSelected(true, 2);\n\n                expect(router.navigate).toHaveBeenCalledWith(\n                    '1/?page=2',\n                    {\n                        trigger: true,\n                    });\n                expect(page.loadDiffRevision).toHaveBeenCalledWith({\n                    page: 2,\n                    revision: 1,\n                    interdiffRevision: null,\n                    filenamePatterns: null,\n                });\n            });\n        });\n\n        it('Anchor selection', function() {\n            const $anchor = $('<a name=\"test\"/>');\n\n            pageView.render();\n            pageView.selectAnchor($anchor);\n\n            expect(router.navigate).toHaveBeenCalledWith(\n                '1/#test',\n                {\n                    replace: true,\n                    trigger: false,\n                });\n            expect(page.loadDiffRevision).not.toHaveBeenCalled();\n        });\n    });\n});\n"]}