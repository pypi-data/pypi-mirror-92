{"version":3,"sources":["changeEntryModelTests.es6.js"],"names":[],"mappings":";;AAAA,MAAM,yCAAN,EACM,YAAW;AACb,OAAG,OAAH,EAAY,YAAW;AACnB,YAAM,mBAAmB,CACrB,CAAC,GAAD,EAAM,KAAN,CADqB,EAErB,CAAC,GAAD,EAAM,SAAN,CAFqB,CAAzB;AAIA,YAAM,sBAAsB,IAAI,GAAG,mBAAP,CAA2B;AACnD,2BAAe,IAAI,GAAG,aAAP;AADoC,SAA3B,CAA5B;;AAIA,YAAM,QAAQ,IAAI,GAAG,iBAAH,CAAqB,WAAzB,CAAqC;AAC/C,8BAAkB,gBAD6B;AAE/C,gBAAI,KAF2C;AAG/C,oBAAQ,YAHuC;AAI/C,4BAAgB,sBAJ+B;AAK/C,8BAAkB,sBAL6B;AAM/C,kCAAsB,IANyB;AAO/C,yBAAa,CACT;AACI,oBAAI,GADR;AAEI,yBAAS,aAFb;AAGI,4BAAY,gBAHhB;AAII,0BAAU,IAJd;AAKI,wBAAQ;AALZ,aADS,CAPkC;AAgB/C,iCAAqB,mBAhB0B;AAiB/C,yBAAa;AAjBkC,SAArC,EAkBX;AACC,mBAAO;AADR,SAlBW,CAAd;;AAsBA,eAAO,MAAM,EAAb,EAAiB,IAAjB,CAAsB,KAAtB;AACA,eAAO,MAAM,GAAN,CAAU,kBAAV,CAAP,EAAsC,IAAtC,CAA2C,gBAA3C;AACA,eAAO,MAAM,GAAN,CAAU,qBAAV,CAAP,EAAyC,IAAzC,CAA8C,mBAA9C;AACA,eAAO,MAAM,GAAN,CAAU,QAAV,CAAP,EAA4B,IAA5B,CAAiC,YAAjC;AACA,eAAO,MAAM,GAAN,CAAU,gBAAV,CAAP,EAAoC,OAApC,CACI,IAAI,IAAJ,CAAS,KAAK,GAAL,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,CAAT,CADJ;AAEA,eAAO,MAAM,GAAN,CAAU,kBAAV,CAAP,EAAsC,OAAtC,CACI,IAAI,IAAJ,CAAS,KAAK,GAAL,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,CAA9B,CAAT,CADJ;AAEA,eAAO,MAAM,GAAN,CAAU,sBAAV,CAAP,EAA0C,IAA1C,CAA+C,IAA/C;AACA,eAAO,MAAM,GAAN,CAAU,aAAV,CAAP,EAAiC,IAAjC,CAAsC,SAAtC;;AAEA,YAAM,UAAU,MAAM,GAAN,CAAU,SAAV,CAAhB;AACA,eAAO,QAAQ,MAAf,EAAuB,IAAvB,CAA4B,CAA5B;;AAEA,YAAM,SAAS,QAAQ,CAAR,CAAf;AACA,eAAO,OAAO,GAAP,CAAW,IAAX,CAAP,EAAyB,IAAzB,CAA8B,GAA9B;AACA,eAAO,OAAO,GAAP,CAAW,SAAX,CAAP,EAA8B,IAA9B,CAAmC,aAAnC;AACA,eAAO,OAAO,GAAP,CAAW,YAAX,CAAP,EAAiC,IAAjC,CAAsC,gBAAtC;AACA,eAAO,OAAO,GAAP,CAAW,QAAX,CAAP,EAA6B,IAA7B,CAAkC,IAAlC;AACA,eAAO,OAAO,GAAP,CAAW,QAAX,CAAP,EAA6B,IAA7B,CAAkC,KAAlC;AACH,KAnDD;AAoDH,CAtDD","file":"changeEntryModelTests.js","sourcesContent":["suite('rb/reviewRequestPage/models/ChangeEntry',\n      function() {\n    it('parse', function() {\n        const diffCommentsData = [\n            ['1', '100'],\n            ['2', '100-101'],\n        ];\n        const reviewRequestEditor = new RB.ReviewRequestEditor({\n            reviewRequest: new RB.ReviewRequest(),\n        });\n\n        const entry = new RB.ReviewRequestPage.ChangeEntry({\n            diffCommentsData: diffCommentsData,\n            id: '100',\n            typeID: 'changedesc',\n            addedTimestamp: '2017-08-18T13:40:25Z',\n            updatedTimestamp: '2017-08-18T16:20:00Z',\n            pendingStatusUpdates: true,\n            reviewsData: [\n                {\n                    id: 123,\n                    bodyTop: 'My body top',\n                    bodyBottom: 'My body bottom',\n                    'public': true,\n                    shipIt: false,\n                },\n            ],\n            reviewRequestEditor: reviewRequestEditor,\n            ignoredAttr: 'ignored',\n        }, {\n            parse: true,\n        });\n\n        expect(entry.id).toBe('100');\n        expect(entry.get('diffCommentsData')).toBe(diffCommentsData);\n        expect(entry.get('reviewRequestEditor')).toBe(reviewRequestEditor);\n        expect(entry.get('typeID')).toBe('changedesc');\n        expect(entry.get('addedTimestamp')).toEqual(\n            new Date(Date.UTC(2017, 7, 18, 13, 40, 25)));\n        expect(entry.get('updatedTimestamp')).toEqual(\n            new Date(Date.UTC(2017, 7, 18, 16, 20, 0)));\n        expect(entry.get('pendingStatusUpdates')).toBe(true);\n        expect(entry.get('ignoredAttr')).toBe(undefined);\n\n        const reviews = entry.get('reviews');\n        expect(reviews.length).toBe(1);\n\n        const review = reviews[0];\n        expect(review.get('id')).toBe(123);\n        expect(review.get('bodyTop')).toBe('My body top');\n        expect(review.get('bodyBottom')).toBe('My body bottom');\n        expect(review.get('public')).toBe(true);\n        expect(review.get('shipIt')).toBe(false);\n    });\n});\n"]}