{"version":3,"sources":["uploadAttachmentView.es6.js"],"names":[],"mappings":"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","file":"uploadAttachmentView.js","sourcesContent":["/*\n * A dialog for updating file attachments.\n */\nRB.UploadAttachmentView = RB.DialogView.extend({\n    className: 'upload-attachment',\n    title: gettext('Upload File'),\n    buttons: [\n        {\n            id: 'cancel',\n            label: gettext('Cancel'),\n        },\n        {\n            id: 'upload',\n            label: gettext('Upload'),\n            primary: true,\n            disabled: true,\n            onClick: 'send',\n        },\n    ],\n    template: _.template([\n        '<div class=\"formdlg\" style=\"width: 50em;\">',\n        ' <div class=\"error\" style=\"display: none;\"></div>',\n        ' <form encoding=\"multipart/form-data\" enctype=\"multipart/form-data\"',\n        '       id=\"attachment-upload-form\">',\n        '  <table>',\n        '   <tbody>',\n        '    <tr>',\n        '     <td class=\"label\"><label><%- captionText %></label></td>',\n        '     <td><input name=\"caption\" type=\"text\" value=\"<%- presetCaption %>\"></td>',\n        '     <td><ul class=\"errorlist\" style=\"display: none;\"></ul></td>',\n        '    </tr>',\n        '    <tr>',\n        '     <td class=\"label\">',\n        '      <label class=\"required\"><%- pathText %></label>',\n        '     </td>',\n        '     <td><input name=\"path\" type=\"file\" class=\"js-path\"></td>',\n        '     <td><ul class=\"errorlist\" style=\"display: none;\"></ul></td>',\n        '    </tr>',\n        '   </tbody>',\n        '  </table>',\n        '  <% if (attachmentHistoryID >= 0) { %>',\n        '    <input type=\"hidden\" name=\"attachment_history\"',\n        '           value=\"<%- attachmentHistoryID %>\" />',\n        '  <% } %>',\n        ' </form>',\n        '</div>',\n    ].join('')),\n\n    events: _.extend({\n        'change .js-path': 'updateUploadButtonEnabledState',\n    }, RB.DialogView.prototype.events),\n\n    /*\n     * Initializes the view. New attachments don't have attachmentHistoryID\n     * specified, so we set it to default value of -1.\n     */\n    initialize: function(options={}) {\n        _.defaults(options, {\n            attachmentHistoryID: -1,\n            presetCaption: '',\n        });\n\n        const body = this.template({\n            attachmentHistoryID: options.attachmentHistoryID,\n            captionText: gettext('Caption:'),\n            pathText: gettext('Path:'),\n            presetCaption: options.presetCaption,\n        });\n\n        RB.DialogView.prototype.initialize.call(this, $.extend({\n            body: body,\n        }, options));\n    },\n\n    /*\n     * Attempt to create a file attachment. In case of success, we will reload\n     * the page, otherwise we will display errors.\n     */\n    send: function() {\n        this.options.reviewRequest.createFileAttachment().save({\n            form: this.$('#attachment-upload-form'),\n            success: function() {\n                window.location.reload();\n            },\n            error: function(model, xhr) {\n                this.displayErrors($.parseJSON(xhr.responseText));\n            }\n        }, this);\n    },\n\n    /*\n     * Displays errors on the form.\n     *\n     * @param {object} rsp  The server response.\n     */\n    displayErrors: function(rsp) {\n        var errorStr = (rsp && rsp.err) ? rsp.err.msg : gettext('Unknown Error'),\n            fieldName,\n            $errorList,\n            i,\n            nameToRow = {'caption': 0, 'path': 1};\n\n        this.$(\".error\")\n            .text(errorStr)\n            .show();\n\n        if (rsp && rsp.fields) {\n            /* Invalid form data */\n            for (fieldName in rsp.fields) {\n                if (rsp.fields.hasOwnProperty(fieldName)) {\n                    $errorList = this.$(\".errorlist\")\n                        .css(\"display\", \"block\")[nameToRow[fieldName]];\n\n                    for (i = 0; i < rsp.fields[fieldName].length; i++) {\n                        $(\"<li/>\")\n                            .html(rsp.fields[fieldName][i])\n                            .appendTo($errorList);\n                    }\n                }\n            }\n        }\n    },\n\n    /**\n     * Render the dialog.\n     *\n     * Returns:\n     *     UploadAttachmentView:\n     *     This object, for chaining.\n     */\n    render: function() {\n        RB.DialogView.prototype.render.call(this);\n\n        this._$path = this.$('.js-path');\n        this._$uploadBtn = this.$buttonsMap.upload;\n\n        return this;\n    },\n\n    /*\n     * Set the upload button to be clickable or not based on context.\n     */\n    updateUploadButtonEnabledState: function() {\n        this._$uploadBtn.enable(this._$path.val());\n    }\n});\n"]}