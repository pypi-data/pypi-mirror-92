{"version":3,"sources":["markdown.css","markdown.less","/private/var/folders/d6/k73lbsvs0fl4s0r7l3nh67wr0000gn/T/beanbag-tools.C48kab/reviewboard/htdocs/static/djblets/css/mixins/markdown.less"],"names":[],"mappings":"AAAA;;8EAE8E;ACM9E;EACE,UAAA;EACA,WAAA;ECkBA,uBAAA;EACA,kBAAA;CFrBD;ACAD;ECoCI,UAAA;EACA,WAAA;EAEA,qBAAA;EACA,wBAAA;EACA,oBAAA;CFlCH;ACPD;EC+BM,eAAA;CFrBL;ACVD;;;;;;EC+CI,gBAAA;CF7BH;AClBD;ECmDI,qBAAA;EF9BF,kDAAkD;CACnD;ACtBD;ECyBM,cAAA;CFAL;ACzBD;;EC0DI,eAAA;EACA,UAAA;EACA,WAAA;CF7BH;AC/BD;;EDkCE;;;SAGO;CACR;ACtCD;;EC+BM,eAAA;CFWL;AC1CD;;;;ECuEM,iBAAA;CFvBL;AChDD;EDkDE;;;;;;;;;;;;;;;;OAgBK;EE2BH,kBAAA;EACA,eAAA;EACA,4BAAA;CFzBH;ACtED;ECkGM,sBAAA;EACA,eAAA;CFzBL;AE2BK;EACE,0BAAA;EACA,mBAAA;EACA,oBAAA;EACA,kBAAA;CFzBP;AChFD;EC+GI,6BAAA;EACA,iBAAA;EACA,iBAAA;CF5BH;ACrFD;ECqHI,kBAAA;CF7BH;ACxFD;ECyHQ,iBAAA;CF9BP;AC3FD;EC8HM,oBAAA;EFhCJ;;;;SAIO;CACR;AEkCK;EACE,UAAA;CFhCP;ACtGD;EC4II,0BAAA;EACA,iBAAA;CFnCH;AC1GD;;ECgJM,mBAAA;CFlCL;AC9GD;ECoJM,0BAAA;CFnCL;ACjHD;ECwJM,iCAAA;EACA,+BAAA;EACA,gCAAA;CFpCL;ACtHD;EC8JM,sBAAA;CFrCL;AEyCK;EACE,mBAAA;CFvCP;AE0CK;EACE,oBAAA;CFxCP;AC/HD;EC6KI,0BAAA;EACA,0BAAA;EACA,mBAAA;EACA,eAAA;EACA,sBAAA;EACA,aAAA;EF3CF;;;;;OAKK;CACN;AE6CG;;EACE,aAAA;EACA,mBAAA;CF1CL;AClJD;ECiMI,mBAAA;EACA,mBAAA;EACA,sBAAA;CF5CH;ACvJD;ECsMM,sBAAA;CF5CL;AC1JD;EC2MI,4BAAA;EACA,kBAAA;EACA,mBAAA;CF9CH;AC/JD;ECiNI,uBAAA;CF/CH;AClKD;ECqNI,0BAAA;EACA,uBAAA;EACA,mBAAA;EACA,mBAAA;EAEA,kBAAA;CFjDH;ACzKD;EC6NM,eAAA;EACA,WAAA;CFjDL;AEoDG;EACE,iBAAA;EACA,2BAAA;CFlDL;AEqDG;EACE,cAAA;EACA,iBAAA;EACA,iBAAA;CFnDL;AEsDG;EACE,cAAA;EACA,2BAAA;CFpDL;AC1LD;EAOI,gBAAA;EACA,aAAA;CDsLH;AC9LD;EAYI,YAAA;EACA,aAAA;EACA,yBAAA;CDqLH","file":"markdown.css","sourcesContent":["/****************************************************************************\n * Rich text\n ****************************************************************************/\n.rich-text {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  line-height: 17px;\n}\n.rich-text * {\n  margin: 0;\n  padding: 0;\n  line-height: inherit;\n  text-rendering: inherit;\n  white-space: normal;\n}\n.rich-text * br {\n  display: block;\n}\n.rich-text h1,\n.rich-text h2,\n.rich-text h3,\n.rich-text h4,\n.rich-text h5,\n.rich-text h6 {\n  font-size: 100%;\n}\n.rich-text p {\n  white-space: inherit;\n  /* Don't show both the <br> and the blank line. */\n}\n.rich-text p br {\n  display: none;\n}\n.rich-text ul,\n.rich-text ol {\n  line-height: 0;\n  margin: 0;\n  padding: 0;\n}\n.rich-text ul p,\n.rich-text ol p {\n  /*\n       * <p> tags in a list do not preserve whitespace, since there's\n       * mandatory leading whitespace before the content.\n       */\n}\n.rich-text ul p br,\n.rich-text ol p br {\n  display: block;\n}\n.rich-text ul ul,\n.rich-text ol ul,\n.rich-text ul ol,\n.rich-text ol ol {\n  margin-left: 2ch;\n}\n.rich-text ol {\n  /*\n     * We want to keep wrapped text within the confines of the list item. So:\n     *\n     * 1. This is long text that\n     *    wraps like this.\n     *\n     * Instead of:\n     *\n     * 1. This is long text that\n     * wraps like this.\n     *\n     * To do this, we need to use display: table and display: table-cell.\n     * However, that loses item counter rendering, so we have to do counters\n     * ourselves. In combination with StyledOListBlockProcessor in\n     * reviewboard/reviews/markdown_extensions.py, this maintains compatibility\n     * with the start= attribute.\n     */\n  counter-reset: li;\n  display: table;\n  list-style-position: inside;\n}\n.rich-text ol > li {\n  counter-increment: li;\n  display: table;\n}\n.rich-text ol > li::before {\n  content: counter(li) \". \";\n  padding-right: 1ch;\n  display: table-cell;\n  text-align: right;\n}\n.rich-text ul {\n  list-style-position: outside;\n  list-style: disc;\n  margin-left: 2ch;\n}\n.rich-text li {\n  line-height: 17px;\n}\n.rich-text li ~ li:last-child p:last-child {\n  margin-bottom: 0;\n}\n.rich-text li p {\n  margin-bottom: 17px;\n  /*\n       * If the list item ends up with a sole <p>, just remove the margins.\n       * Depending on neighboring elements, Python Markdown will sometimes\n       * create list items this way.\n       */\n}\n.rich-text li p:first-child:last-child {\n  margin: 0;\n}\n.rich-text table {\n  border-collapse: collapse;\n  margin-left: 4px;\n}\n.rich-text table td,\n.rich-text table th {\n  padding: 0.2em 1em;\n}\n.rich-text table td {\n  border: 1px solid #bbbbbb;\n}\n.rich-text table th {\n  border-bottom: 1px solid #000000;\n  border-left: 1px solid #bbbbbb;\n  border-right: 1px solid #bbbbbb;\n}\n.rich-text table thead tr:last-child th {\n  padding-bottom: 0.5em;\n}\n.rich-text table tbody tr:first-child td {\n  padding-top: 0.5em;\n}\n.rich-text table tbody tr:last-child td {\n  border-bottom: none;\n}\n.rich-text code {\n  background-color: #FBFAF8;\n  border: 1px solid #E3E3E3;\n  border-radius: 3px;\n  color: #BB1144;\n  display: inline-block;\n  margin: -1px;\n  /*\n     * Add just enough spacing to represent the backtick (`) before and after\n     * the code block, so we can leave room there. The goal is to align the\n     * content the best we can, so there's a more predictable width for the\n     * line.\n     */\n}\n.rich-text code:before,\n.rich-text code:after {\n  content: \"`\";\n  visibility: hidden;\n}\n.rich-text pre {\n  font-size: inherit;\n  margin-left: 2.5em;\n  white-space: pre-wrap;\n}\n.rich-text pre * {\n  white-space: pre-wrap;\n}\n.rich-text blockquote {\n  border-left: 1px solid #bbb;\n  padding-left: 1em;\n  margin-left: 0.5em;\n}\n.rich-text hr {\n  border: 1px solid #ddd;\n}\n.rich-text .codehilite {\n  background-color: #FBFAF8;\n  border: 1px solid #DDD;\n  border-radius: 3px;\n  margin: -4px -11px;\n  padding: 3px 10px;\n}\n.rich-text .codehilite pre {\n  margin-left: 0;\n  padding: 0;\n}\n.rich-text .codehilite.codehilite-multiline-start {\n  border-bottom: 0;\n  border-radius: 3px 3px 0 0;\n}\n.rich-text .codehilite.codehilite-multiline-middle {\n  border-top: 0;\n  border-bottom: 0;\n  border-radius: 0;\n}\n.rich-text .codehilite.codehilite-multiline-end {\n  border-top: 0;\n  border-radius: 0 0 3px 3px;\n}\n.rich-text img {\n  max-width: 100%;\n  height: auto;\n}\n.rich-text .emoji {\n  width: auto;\n  height: 1rem;\n  vertical-align: text-top;\n}\n/*# sourceMappingURL=markdown.css.map */",null,null]}