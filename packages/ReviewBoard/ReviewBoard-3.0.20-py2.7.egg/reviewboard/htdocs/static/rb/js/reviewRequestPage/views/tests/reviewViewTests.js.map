{"version":3,"sources":["reviewViewTests.es6.js"],"names":[],"mappings":"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","file":"reviewViewTests.js","sourcesContent":["suite('rb/reviewRequestPage/views/ReviewView', function() {\n    const template = _.template(dedent`\n        <div class=\"review review-request-page-entry\">\n         <div class=\"review-request-page-entry-contents\">\n          <div class=\"collapse-button\"></div>\n          <div class=\"banners\">\n           <input type=\"button\" value=\"Publish\" />\n           <input type=\"button\" value=\"Discard\" />\n          </div>\n          <div class=\"body\">\n           <ol class=\"review-comments\">\n            <li>\n             <div class=\"review-comment-details\">\n              <div class=\"review-comment\">\n               <pre class=\"reviewtext body_top\"></pre>\n              </div>\n             </div>\n             <div class=\"review-comment-thread\">\n              <div class=\"comment-section\"\n                   data-context-type=\"body_top\"\n                   data-reply-anchor-prefix=\"header-reply\">\n               <a class=\"add_comment_link\"></a>\n               <ul class=\"reply-comments\">\n                <li class=\"draft\" data-comment-id=\"456\">\n                 <pre class=\"reviewtext\"></pre>\n                </li>\n               </ul>\n              </div>\n             </div>\n            </li>\n            <li>\n             <div class=\"review-comment-thread\">\n              <div class=\"comment-section\" data-context-id=\"123\"\n                   data-context-type=\"diff_comments\"\n                   data-reply-anchor-prefix=\"comment\">\n               <a class=\"add_comment_link\"></a>\n               <ul class=\"reply-comments\"></ul>\n              </div>\n             </div>\n            </li>\n            <li>\n             <div class=\"review-comment-details\">\n              <div class=\"review-comment\">\n               <pre class=\"reviewtext body_bottom\"></pre>\n              </div>\n             </div>\n             <div class=\"review-comment-thread\">\n              <div class=\"comment-section\"\n                   data-context-type=\"body_bottom\"\n                   data-reply-anchor-prefix=\"footer-reply\">\n               <a class=\"add_comment_link\"></a>\n               <ul class=\"reply-comments\"></ul>\n              </div>\n             </div>\n            </div>\n           </li>\n          </ol>\n         </div>\n        </div>\n    `);\n    let view;\n    let review;\n    let reviewReply;\n\n    beforeEach(function() {\n        const reviewRequest = new RB.ReviewRequest();\n        const editor = new RB.ReviewRequestEditor({\n            reviewRequest: reviewRequest,\n        });\n\n        review = reviewRequest.createReview({\n            loaded: true,\n            links: {\n                replies: {\n                    href: '/api/review/123/replies/',\n                },\n            },\n        });\n\n        const $el = $(template()).appendTo($testsScratch);\n\n        reviewReply = review.createReply();\n\n        view = new RB.ReviewRequestPage.ReviewView({\n            el: $el,\n            model: review,\n            entryModel: new RB.ReviewRequestPage.ReviewEntry({\n                review: review,\n                reviewRequest: reviewRequest,\n                reviewRequestEditor: editor,\n            }),\n        });\n\n        view._setupNewReply(reviewReply);\n\n        spyOn(view, 'trigger').and.callThrough();\n\n        view.render();\n    });\n\n    describe('Model events', () => {\n        it('bodyTop changed', () => {\n            review.set({\n                bodyTop: 'new **body** top',\n                htmlTextFields: {\n                    bodyTop: '<p>new <strong>body</strong> top</p>',\n                },\n            });\n\n            expect(view._$bodyTop.html())\n                .toBe('<p>new <strong>body</strong> top</p>');\n        });\n\n        it('bodyBottom changed', () => {\n            review.set({\n                bodyBottom: 'new **body** bottom',\n                htmlTextFields: {\n                    bodyBottom: '<p>new <strong>body</strong> bottom</p>',\n                },\n            });\n\n            expect(view._$bodyBottom.html())\n                .toBe('<p>new <strong>body</strong> bottom</p>');\n        });\n\n        describe('bodyTopRichText changed', () => {\n            it('To true', () => {\n                expect(view._$bodyTop.hasClass('rich-text')).toBe(false);\n                review.set('bodyTopRichText', true);\n                expect(view._$bodyTop.hasClass('rich-text')).toBe(true);\n            });\n\n            it('To false', () => {\n                review.attributes.bodyTopRichText = true;\n                view._$bodyTop.addClass('rich-text');\n\n                review.set('bodyTopRichText', false);\n                expect(view._$bodyTop.hasClass('rich-text')).toBe(false);\n            });\n        });\n\n        describe('bodyBottomRichText changed', () => {\n            it('To true', () => {\n                expect(view._$bodyBottom.hasClass('rich-text')).toBe(false);\n                review.set('bodyBottomRichText', true);\n                expect(view._$bodyBottom.hasClass('rich-text')).toBe(true);\n            });\n\n            it('To false', () => {\n                review.attributes.bodyBottomRichText = true;\n                view._$bodyBottom.addClass('rich-text');\n\n                review.set('bodyBottomRichText', false);\n                expect(view._$bodyBottom.hasClass('rich-text')).toBe(false);\n            });\n        });\n    });\n\n    describe('Reply editors', function() {\n        it('Views created', function() {\n            expect(view._replyEditorViews.length).toBe(3);\n        });\n\n        it('Initial state populated', function() {\n            let model = view._replyEditorViews[0].model;\n\n            expect(model.get('anchorPrefix')).toBe('header-reply');\n            expect(model.get('contextID')).toBe(null);\n            expect(model.get('contextType')).toBe('body_top');\n            expect(model.get('hasDraft')).toBe(true);\n\n            model = view._replyEditorViews[1].model;\n            expect(model.get('anchorPrefix')).toBe('comment');\n            expect(model.get('contextID')).toBe(123);\n            expect(model.get('contextType')).toBe('diff_comments');\n            expect(model.get('hasDraft')).toBe(false);\n\n            model = view._replyEditorViews[2].model;\n            expect(model.get('anchorPrefix')).toBe('footer-reply');\n            expect(model.get('contextID')).toBe(null);\n            expect(model.get('contextType')).toBe('body_bottom');\n            expect(model.get('hasDraft')).toBe(false);\n\n            expect(view._replyDraftsCount).toBe(1);\n        });\n\n        it('Draft banner when draft comment exists', function() {\n            expect(view.trigger)\n                .toHaveBeenCalledWith('hasDraftChanged', true);\n        });\n\n        describe('reviewReply changes on', function() {\n            it('Discard', function() {\n                spyOn(view, '_setupNewReply');\n\n                spyOn(reviewReply, 'discardIfEmpty').and.callFake(\n                    (options, context) => options.success.call(context));\n\n                reviewReply.trigger('destroyed');\n\n                expect(view._setupNewReply).toHaveBeenCalled();\n            });\n\n            it('Publish', function() {\n                spyOn(view, '_setupNewReply');\n\n                /*\n                 * Avoid any of the steps in saving the replies. This\n                 * short-circuits a lot of the logic, but for the purposes\n                 * of this test, it's sufficient.\n                 */\n                spyOn(RB.BaseResource.prototype, 'ready');\n\n                /*\n                 * Save each editor, so the necessary state is available for\n                 * the publish operation.\n                 */\n                view._replyEditors.forEach(editor => editor.save());\n                reviewReply.trigger('published');\n\n                expect(view._setupNewReply).toHaveBeenCalled();\n            });\n        });\n\n        describe('When draft deleted', function() {\n            describe('With last one', function() {\n                it('Draft banner hidden', function() {\n                    const editor = view._replyEditors[0];\n                    expect(editor.get('hasDraft')).toBe(true);\n                    expect(view._replyDraftsCount).toBe(1);\n                    expect(view._draftBannerShown).toBe(true);\n\n                    editor.set('hasDraft', false);\n                    expect(view._replyDraftsCount).toBe(0);\n                    expect(view._draftBannerShown).toBe(false);\n                });\n            });\n\n            describe('With more remaining', function() {\n                it('Draft banner stays visible', function() {\n                    view._replyEditors[1].set('hasDraft', true);\n\n                    const editor = view._replyEditors[0];\n                    expect(editor.get('hasDraft')).toBe(true);\n\n                    expect(view._replyDraftsCount).toBe(2);\n                    expect(view._draftBannerShown).toBe(true);\n\n                    editor.set('hasDraft', false);\n                    expect(view._replyDraftsCount).toBe(1);\n                    expect(view._draftBannerShown).toBe(true);\n                });\n            });\n        });\n\n        describe('When reviewReply changes', function() {\n            it('Signals connected', function() {\n                spyOn(view, 'listenTo').and.callThrough();\n\n                view._setupNewReply(new RB.ReviewReply());\n\n                expect(view.listenTo.calls.argsFor(0)[1])\n                    .toBe('destroyed published');\n            });\n\n            it('Signals disconnected from old reviewReply', function() {\n                spyOn(view, 'stopListening').and.callThrough();\n\n                view._setupNewReply();\n\n                expect(view.stopListening).toHaveBeenCalledWith(reviewReply);\n            });\n\n            it('Hide draft banner signal emitted', function() {\n                view._setupNewReply();\n                expect(view.trigger).toHaveBeenCalledWith('hasDraftChanged',\n                                                          false);\n            });\n\n            it('Editors updated', function() {\n                view._setupNewReply();\n\n                view._replyEditors.forEach(editor =>\n                    expect(editor.get('reviewReply')).toBe(view._reviewReply));\n            });\n        });\n    });\n});\n"]}