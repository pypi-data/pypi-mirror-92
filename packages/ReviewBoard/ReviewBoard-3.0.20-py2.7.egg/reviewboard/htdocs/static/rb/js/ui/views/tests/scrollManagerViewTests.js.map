{"version":3,"sources":["scrollManagerViewTests.es6.js"],"names":[],"mappings":";;AAAA,MAAM,+BAAN,EAAuC,YAAW;AAC9C,aAAS,WAAT,GAAoC;AAAA,YAAf,UAAe,uEAAJ,EAAI;;AAChC,YAAM,gBAAgB,cAAc,MAAd,EAAtB;;AAEA,eAAO,EAAE,QAAF,EACF,GADE,CACE;AACD,sBAAU,UADT;AAED,kBAAM,CAAC,cAAc,IAAf,IAAuB,WAAW,IAAX,IAAmB,CAA1C,CAFL;AAGD,iBAAK,CAAC,cAAc,GAAf,IAAsB,WAAW,GAAX,IAAkB,CAAxC,CAHJ;AAID,mBAAO,WAAW,KAAX,IAAoB,EAJ1B;AAKD,oBAAQ,WAAW,MAAX,IAAqB;AAL5B,SADF,EAQF,QARE,CAQO,aARP,CAAP;AASH;;AAED,QAAI,sBAAJ;;AAEA,eAAW,YAAW;AAClB,wBAAgB,IAAI,GAAG,iBAAP,EAAhB;AACA,sBAAc,MAAd,GAAuB;AACnB,yBAAa,CADM;AAEnB,yBAAa,CAFM;;AAInB,oBAJmB,oBAIV,CAJU,EAIP,CAJO,EAIJ;AACX,qBAAK,WAAL,GAAmB,CAAnB;AACA,qBAAK,WAAL,GAAmB,CAAnB;AACH,aAPkB;AASnB,iCATmB,iCASG,EATH,EASO;AACtB;AACH;AAXkB,SAAvB;AAaH,KAfD;;AAiBA,aAAS,kBAAT,EAA6B,YAAW;AACpC,WAAG,uBAAH,EAA4B,YAAW;AACnC,0BAAc,gBAAd,CAA+B,GAA/B;;AAEA,mBAAO,cAAc,MAAd,CAAqB,WAA5B,EAAyC,IAAzC,CAA8C,GAA9C;AACH,SAJD;;AAMA,WAAG,oBAAH,EAAyB,YAAW;AAChC,0BAAc,aAAd,GAA8B,EAA9B;AACA,0BAAc,gBAAd,CAA+B,GAA/B;;AAEA,mBAAO,cAAc,MAAd,CAAqB,WAA5B,EAAyC,IAAzC,CAA8C,EAA9C;AACH,SALD;AAMH,KAbD;;AAeA,aAAS,iBAAT,EAA4B,YAAW;AACnC,YAAI,YAAJ;;AAEA,mBAAW,YAAW;AAClB,kBAAM,YAAY,EAAC,KAAK,EAAN,EAAZ,CAAN;AACH,SAFD;;AAIA,WAAG,uBAAH,EAA4B,YAAW;AACnC,0BAAc,eAAd,CAA8B,GAA9B;;AAEA,mBAAO,cAAc,MAAd,CAAqB,WAA5B,EAAyC,IAAzC,CAA8C,EAA9C;AACH,SAJD;;AAMA,WAAG,oBAAH,EAAyB,YAAW;AAChC,0BAAc,aAAd,GAA8B,EAA9B;AACA,0BAAc,eAAd,CAA8B,GAA9B;;AAEA,mBAAO,cAAc,MAAd,CAAqB,WAA5B,EAAyC,IAAzC,CAA8C,EAA9C;AACH,SALD;AAMH,KAnBD;;AAqBA,aAAS,aAAT,EAAwB,YAAW;AAC/B,YAAI,YAAJ;;AAEA,mBAAW,YAAW;AAClB,kBAAM,YAAY,EAAC,KAAK,EAAN,EAAZ,CAAN;AACH,SAFD;;AAIA,WAAG,kBAAH,EAAuB,YAAW;AAC9B,0BAAc,MAAd,CAAqB,WAArB,GAAmC,GAAnC;;AAEA,mBAAO,cAAc,WAArB,EAAkC,IAAlC,CAAuC,IAAvC;;AAEA,0BAAc,aAAd,CAA4B,GAA5B;;AAEA,mBAAO,cAAc,gBAAd,CAA+B,GAA/B,CAAmC,IAAI,CAAJ,CAAnC,CAAP,EAAmD,OAAnD,CAA2D;AACvD,2BAAW,EAD4C;AAEvD,2BAAW;AACP,yBAAK,EADE;AAEP,0BAAM;AAFC;AAF4C,aAA3D;AAOA,mBAAO,cAAc,WAArB,EAAkC,IAAlC,CAAuC,GAAvC;AACH,SAfD;;AAiBA,WAAG,oBAAH,EAAyB,YAAW;AAChC,0BAAc,WAAd,GAA4B,GAA5B;AACA,0BAAc,MAAd,CAAqB,WAArB,GAAmC,GAAnC;;AAEA,0BAAc,aAAd,CAA4B,GAA5B;;AAEA,mBAAO,cAAc,gBAAd,CAA+B,GAA/B,CAAmC,IAAI,CAAJ,CAAnC,CAAP,EAAmD,OAAnD,CAA2D;AACvD,2BAAW,EAD4C;AAEvD,2BAAW;AACP,yBAAK,EADE;AAEP,0BAAM;AAFC;AAF4C,aAA3D;AAOA,mBAAO,cAAc,WAArB,EAAkC,IAAlC,CAAuC,GAAvC;AACH,SAdD;AAeH,KAvCD;;AAyCA,aAAS,aAAT,EAAwB,YAAW;AAC/B,YAAI,YAAJ;;AAEA,mBAAW,YAAW;AAClB,kBAAM,YAAY,EAAC,KAAK,EAAN,EAAZ,CAAN;AACH,SAFD;;AAIA,WAAG,sBAAH,EAA2B,YAAW;AAClC;AACA,kBAAM,cAAc,MAApB,EAA4B,uBAA5B;;AAEA,0BAAc,aAAd,CAA4B,GAA5B;AACA,gBAAI,MAAJ,CAAW,EAAX;AACA,gBAAI,GAAJ,CAAQ,KAAR,EAAe,SAAS,IAAI,GAAJ,CAAQ,KAAR,CAAT,EAAyB,EAAzB,IAA+B,EAA9C;AACA,0BAAc,WAAd,CAA0B,GAA1B;;AAEA,gBAAM,KAAK,IAAI,CAAJ,CAAX;AACA,mBAAO,cAAc,gBAAd,CAA+B,GAA/B,CAAmC,EAAnC,CAAP,EAA+C,IAA/C,CAAoD,SAApD;AACA,mBAAO,cAAc,SAAd,CAAwB,GAAxB,CAA4B,EAA5B,CAAP,EAAwC,OAAxC,CAAgD;AAC5C,2BAAW,EADiC;AAE5C,2BAAW;AACP,yBAAK,EADE;AAEP,0BAAM;AAFC,iBAFiC;AAM5C,2BAAW,EANiC;AAO5C,2BAAW;AACP,yBAAK,EADE;AAEP,0BAAM;AAFC;AAPiC,aAAhD;;AAaA,mBAAO,cAAc,MAAd,CAAqB,qBAA5B,EACK,gBADL;AAEH,SA1BD;AA2BH,KAlCD;;AAoCA,aAAS,gBAAT,EAA2B,YAAW;AAClC,mBAAW,YAAW;AAClB,kBAAM,cAAc,MAApB,EAA4B,uBAA5B;;AAEA,0BAAc,MAAd,CAAqB,WAArB,GAAmC,GAAnC;AACH,SAJD;;AAMA,WAAG,yCAAH,EAA8C,YAAW;AACrD,gBAAM,OAAO,YAAY,EAAC,KAAK,EAAN,EAAZ,CAAb;AACA,gBAAM,OAAO,YAAY,EAAC,KAAK,EAAN,EAAZ,CAAb;AACA,gBAAM,OAAO,YAAY,EAAC,KAAK,EAAN,EAAZ,CAAb;;AAEA;AACA,0BAAc,aAAd,CAA4B,IAA5B;AACA,iBAAK,MAAL,CAAY,EAAZ;AACA,0BAAc,WAAd,CAA0B,IAA1B;;AAEA;AACA,0BAAc,aAAd,CAA4B,IAA5B;AACA,iBAAK,MAAL,CAAY,EAAZ;AACA,0BAAc,WAAd,CAA0B,IAA1B;;AAEA;AACA,0BAAc,aAAd,CAA4B,IAA5B;AACA,iBAAK,GAAL,CAAS,KAAT,EAAgB,SAAS,KAAK,GAAL,CAAS,KAAT,CAAT,EAA0B,EAA1B,IAAgC,CAAhD;AACA,0BAAc,WAAd,CAA0B,IAA1B;;AAEA,0BAAc,gBAAd;;AAEA,mBAAO,cAAc,MAAd,CAAqB,WAA5B,EAAyC,IAAzC,CAA8C,GAA9C;AACH,SAvBD;;AAyBA,WAAG,uCAAH,EAA4C,YAAW;AACnD,gBAAM,OAAO,YAAY,EAAC,KAAK,EAAN,EAAZ,CAAb;AACA,gBAAM,OAAO,YAAY,EAAC,KAAK,cAAc,MAAd,CAAqB,WAA3B,EAAZ,CAAb;AACA,gBAAM,OAAO,YAAY,EAAC,KAAK,GAAN,EAAZ,CAAb;;AAEA,0BAAc,aAAd,CAA4B,IAA5B;AACA,iBAAK,MAAL,CAAY,EAAZ;AACA,0BAAc,WAAd,CAA0B,IAA1B;;AAEA,0BAAc,aAAd,CAA4B,IAA5B;AACA,iBAAK,MAAL,CAAY,EAAZ;AACA,0BAAc,WAAd,CAA0B,IAA1B;;AAEA,0BAAc,aAAd,CAA4B,IAA5B;AACA,iBAAK,MAAL,CAAY,IAAZ;AACA,0BAAc,WAAd,CAA0B,IAA1B;;AAEA,0BAAc,gBAAd;;AAEA,mBAAO,cAAc,MAAd,CAAqB,WAA5B,EAAyC,IAAzC,CAA8C,GAA9C;AACH,SApBD;AAqBH,KArDD;AAsDH,CAzMD","file":"scrollManagerViewTests.js","sourcesContent":["suite('rb/ui/views/ScrollManagerView', function() {\n    function makeElement(dimensions={}) {\n        const scratchOffset = $testsScratch.offset();\n\n        return $('<div/>')\n            .css({\n                position: 'absolute',\n                left: -scratchOffset.left + (dimensions.left || 0),\n                top: -scratchOffset.top + (dimensions.top || 0),\n                width: dimensions.width || 20,\n                height: dimensions.height || 20,\n            })\n            .appendTo($testsScratch);\n    }\n\n    let scrollManager;\n\n    beforeEach(function() {\n        scrollManager = new RB.ScrollManagerView();\n        scrollManager.window = {\n            pageXOffset: 0,\n            pageYOffset: 0,\n\n            scrollTo(x, y) {\n                this.pageXOffset = x;\n                this.pageYOffset = y;\n            },\n\n            requestAnimationFrame(cb) {\n                cb();\n            },\n        };\n    });\n\n    describe('scrollToPosition', function() {\n        it('Without scroll offset', function() {\n            scrollManager.scrollToPosition(100);\n\n            expect(scrollManager.window.pageYOffset).toBe(100);\n        });\n\n        it('With scroll offset', function() {\n            scrollManager.scrollYOffset = 40;\n            scrollManager.scrollToPosition(100);\n\n            expect(scrollManager.window.pageYOffset).toBe(60);\n        });\n    });\n\n    describe('scrollToElement', function() {\n        let $el;\n\n        beforeEach(function() {\n            $el = makeElement({top: 50});\n        });\n\n        it('Without scroll offset', function() {\n            scrollManager.scrollToElement($el);\n\n            expect(scrollManager.window.pageYOffset).toBe(50);\n        });\n\n        it('With scroll offset', function() {\n            scrollManager.scrollYOffset = 40;\n            scrollManager.scrollToElement($el);\n\n            expect(scrollManager.window.pageYOffset).toBe(10);\n        });\n    });\n\n    describe('markUpdated', function() {\n        let $el;\n\n        beforeEach(function() {\n            $el = makeElement({top: 50});\n        });\n\n        it('First in a batch', function() {\n            scrollManager.window.pageYOffset = 100;\n\n            expect(scrollManager._oldScrollY).toBe(null);\n\n            scrollManager.markForUpdate($el);\n\n            expect(scrollManager._pendingElements.get($el[0])).toEqual({\n                oldHeight: 20,\n                oldOffset: {\n                    top: 50,\n                    left: 0,\n                },\n            });\n            expect(scrollManager._oldScrollY).toBe(100);\n        });\n\n        it('Subsequent entries', function() {\n            scrollManager._oldScrollY = 100;\n            scrollManager.window.pageYOffset = 200;\n\n            scrollManager.markForUpdate($el);\n\n            expect(scrollManager._pendingElements.get($el[0])).toEqual({\n                oldHeight: 20,\n                oldOffset: {\n                    top: 50,\n                    left: 0,\n                },\n            });\n            expect(scrollManager._oldScrollY).toBe(100);\n        });\n    });\n\n    describe('markUpdated', function() {\n        let $el;\n\n        beforeEach(function() {\n            $el = makeElement({top: 50});\n        });\n\n        it('Stores correct state', function() {\n            /* Disable the actual updates for this test. */\n            spyOn(scrollManager.window, 'requestAnimationFrame');\n\n            scrollManager.markForUpdate($el);\n            $el.height(40);\n            $el.css('top', parseInt($el.css('top'), 10) - 10);\n            scrollManager.markUpdated($el);\n\n            const el = $el[0];\n            expect(scrollManager._pendingElements.get(el)).toBe(undefined);\n            expect(scrollManager._elements.get(el)).toEqual({\n                oldHeight: 20,\n                oldOffset: {\n                    top: 50,\n                    left: 0,\n                },\n                newHeight: 40,\n                newOffset: {\n                    top: 40,\n                    left: 0,\n                },\n            });\n\n            expect(scrollManager.window.requestAnimationFrame)\n                .toHaveBeenCalled();\n        });\n    });\n\n    describe('Scroll updates', function() {\n        beforeEach(function() {\n            spyOn(scrollManager.window, 'requestAnimationFrame');\n\n            scrollManager.window.pageYOffset = 200;\n        });\n\n        it('Includes updates before scroll position', function() {\n            const $el1 = makeElement({top: 10});\n            const $el2 = makeElement({top: 60});\n            const $el3 = makeElement({top: 70});\n\n            /* Grow by 50px. */\n            scrollManager.markForUpdate($el1);\n            $el1.height(70);\n            scrollManager.markUpdated($el1);\n\n            /* Shrink by 10px. */\n            scrollManager.markForUpdate($el2);\n            $el2.height(10);\n            scrollManager.markUpdated($el2);\n\n            /* Move up 5px. */\n            scrollManager.markForUpdate($el3);\n            $el3.css('top', parseInt($el3.css('top'), 10) - 5);\n            scrollManager.markUpdated($el3);\n\n            scrollManager._updateScrollPos();\n\n            expect(scrollManager.window.pageYOffset).toBe(235);\n        });\n\n        it('Ignores updates after scroll position', function() {\n            const $el1 = makeElement({top: 10});\n            const $el2 = makeElement({top: scrollManager.window.pageYOffset});\n            const $el3 = makeElement({top: 500});\n\n            scrollManager.markForUpdate($el1);\n            $el1.height(30);\n            scrollManager.markUpdated($el1);\n\n            scrollManager.markForUpdate($el2);\n            $el2.height(90);\n            scrollManager.markUpdated($el2);\n\n            scrollManager.markForUpdate($el3);\n            $el3.height(1000);\n            scrollManager.markUpdated($el3);\n\n            scrollManager._updateScrollPos();\n\n            expect(scrollManager.window.pageYOffset).toBe(210);\n        });\n    });\n});\n"]}