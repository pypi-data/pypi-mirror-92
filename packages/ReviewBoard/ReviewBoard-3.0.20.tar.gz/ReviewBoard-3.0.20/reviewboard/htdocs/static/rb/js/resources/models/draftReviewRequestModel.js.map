{"version":3,"sources":["draftReviewRequestModel.es6.js"],"names":[],"mappings":"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","file":"draftReviewRequestModel.js","sourcesContent":["/**\n * The draft of a review request.\n *\n * This provides editing capabilities for a review request draft, as well\n * as the ability to publish and discard (destroy) a draft.\n */\nRB.DraftReviewRequest = RB.BaseResource.extend(_.defaults({\n    defaults() {\n        return _.defaults({\n            branch: null,\n            bugsClosed: null,\n            changeDescription: null,\n            changeDescriptionRichText: false,\n            dependsOn: [],\n            description: null,\n            descriptionRichText: false,\n            'public': null,\n            rawTextFields: null,\n            submitter: null,\n            summary: null,\n            targetGroups: [],\n            targetPeople: [],\n            testingDone: null,\n            testingDoneRichText: false\n        }, RB.BaseResource.prototype.defaults());\n    },\n\n    rspNamespace: 'draft',\n    listKey: 'draft',\n    supportsExtraData: true,\n\n    expandedFields: ['depends_on', 'target_people', 'target_groups'],\n\n    extraQueryArgs: {\n        'force-text-type': 'html',\n        'include-text-types': 'raw'\n    },\n\n    attrToJsonMap: {\n        bugsClosed: 'bugs_closed',\n        changeDescription: 'changedescription',\n        changeDescriptionRichText: 'changedescription_text_type',\n        dependsOn: 'depends_on',\n        descriptionRichText: 'description_text_type',\n        targetGroups: 'target_groups',\n        targetPeople: 'target_people',\n        testingDone: 'testing_done',\n        testingDoneRichText: 'testing_done_text_type'\n    },\n\n    deserializedAttrs: [\n        'branch',\n        'bugsClosed',\n        'changeDescription',\n        'dependsOn',\n        'description',\n        'public',\n        'summary',\n        'targetGroups',\n        'targetPeople',\n        'testingDone'\n    ],\n\n    /**\n     * Return the URL to use when syncing the model.\n     *\n     * Returns:\n     *     string:\n     *     The URL to sync.\n     */\n    url() {\n        return this.get('parentObject').get('links').draft.href;\n    },\n\n    /**\n     * Create a FileAttachment object for this draft.\n     *\n     * Args:\n     *     attributes (object):\n     *         Attributes for the file attachment model.\n     *\n     * Returns:\n     *     RB.DraftFileAttachment:\n     *     The new file attachment object.\n     */\n    createFileAttachment(attributes) {\n        return new RB.DraftFileAttachment(_.defaults({\n            parentObject: this\n        }, attributes));\n    },\n\n    /**\n     * Publish the draft.\n     *\n     * The contents of the draft will be validated before being sent to the\n     * server in order to ensure that the appropriate fields are all there.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the operation, including callbacks.\n     *\n     *     context (object):\n     *         Context to bind when calling callbacks.\n     */\n    publish(options={}, context=undefined) {\n        this.ready({\n            ready: () => {\n                const validationError = this.validate(this.attributes, {\n                    publishing: true\n                });\n\n                if (validationError) {\n                    if (_.isFunction(options.error)) {\n                        options.error.call(context, this, {\n                            errorText: validationError\n                        });\n                    }\n                } else {\n                    this.save(\n                        _.defaults({\n                            data: {\n                                'public': 1,\n                                trivial: options.trivial ? 1 : 0\n                            }\n                        }, options),\n                        context);\n                }\n            },\n            error: _.isFunction(options.error)\n                   ? _.bind(options.error, context)\n                   : undefined\n        }, this);\n    },\n\n    parseResourceData(rsp) {\n        const rawTextFields = rsp.raw_text_fields || rsp;\n        const data = RB.BaseResource.prototype.parseResourceData.call(\n            this, rsp);\n\n        data.submitter = rsp.links.submitter;\n        data.changeDescriptionRichText =\n            (rawTextFields.changedescription_text_type === 'markdown');\n        data.descriptionRichText =\n            (rawTextFields.description_text_type === 'markdown');\n        data.testingDoneRichText =\n            (rawTextFields.testing_done_text_type === 'markdown');\n        data.rawTextFields = rawTextFields || null;\n\n        return data;\n    }\n}, RB.DraftResourceModelMixin));\n"]}