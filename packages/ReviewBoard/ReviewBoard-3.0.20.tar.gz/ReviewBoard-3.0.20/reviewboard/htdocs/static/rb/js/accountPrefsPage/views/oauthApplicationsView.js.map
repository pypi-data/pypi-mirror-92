{"version":3,"sources":["oauthApplicationsView.es6.js"],"names":[],"mappings":"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","file":"oauthApplicationsView.js","sourcesContent":["(function() {\n\n\nconst addApplicationText = gettext('Add application');\nconst disabledForSecurityText = gettext('Disabled for security.');\nconst disabledWarningTemplate = gettext('This application has been disabled because the user \"%s\" has been removed from the Local Site.');\nconst emptyText = gettext('You have not registered any OAuth2 applications.');\nconst localSiteEmptyText = gettext('You have not registered any OAuth2 applications on %s.');\n\n\n/**\n * A model representing an OAuth application.\n *\n * Model Attributes:\n *     apiURL (string):\n *         The URL to the application list reosurce.\n *\n *     enabled (boolean):\n *         Whether or not the application is enabled.\n *\n *     editURL (string):\n *         The URL to edit this application.\n *\n *     isDisabledForSecurity (bool):\n *         When true, this attribute indicates that the application was\n *         re-assigned to the current user because the original user was\n *         removed from the Local Site associated with this.\n *\n *     localSiteName (string):\n *         The name of the LocalSite the application is restricted to.\n\n *     name (string):\n *         The name of the application.\n *\n *     originalUser (string):\n *         The username of the user who originally owned this application. This\n *         will only be set if :js:attr:`enabled` is ``false``.\n *\n *     showRemove (boolean):\n *         Whether or not the \"Remove Item\" link should be shown.\n *\n *         This is always true.\n */\nconst OAuthAppItem = Djblets.Config.ListItem.extend({\n    defaults: _.defaults({\n        apiURL: '',\n        editURL: '',\n        enabled: true,\n        isDisabledForSecurity: false,\n        localSiteName: '',\n        name: '',\n        originalUser: null,\n        showRemove: true,\n    }, Djblets.Config.ListItem.prototype.defaults),\n\n    /**\n     * Parse a raw object into the properties of an OAuthAppItem.\n     *\n     * Args:\n     *     rsp (object):\n     *         The raw properties of the item.\n     *\n     *     options (object):\n     *         Options for generating properties.\n     *\n     *         The values in this object will be used to generate the ``apiUrl``\n     *         and ``editURL`` properties.\n     *\n     * Option Args:\n     *     baseURL (string):\n     *         The base API URL for the object.\n     *\n     *     baseEditURL (string):\n     *         The base URL for the edit view.\n     *\n     * Returns:\n     *     object:\n     *     An object containing the properties of an OAuthAppItem.\n     */\n    parse(rsp, options) {\n        const {baseEditURL, baseURL} = options;\n        const {localSiteName} = rsp;\n\n        return _.defaults(rsp, {\n            apiURL: (localSiteName\n                     ? `/s/${localSiteName}${baseURL}${rsp.id}/`\n                     : `${baseURL}${rsp.id}/`),\n            editURL: `${baseEditURL}/${rsp.id}/`,\n        });\n    },\n});\n\n\n/**\n * A view corresponding to a single OAuth2 application.\n */\nconst OAuthAppItemView = Djblets.Config.ListItemView.extend({\n    template: _.template(dedent`\n        <div class=\"app-entry-wrapper\">\n         <span class=\"config-app-name<% if (!enabled) {%> disabled<% } %>\">\n          <% if (isDisabledForSecurity) { %>\n            <span class=\"rb-icon rb-icon-warning\"\n                  title=\"${disabledForSecurityText}\"></span>\n          <% } %>\n          <a href=\"<%- editURL %>\"><%- name %></a>\n         </span>\n         <% if (isDisabledForSecurity) { %>\n           <p class=\"disabled-warning\"><%- disabledWarning %></p>\n          <% } %>\n         </div>\n    `),\n\n    actionHandlers: {\n        'delete': '_onDeleteClicked',\n    },\n\n    /**\n     * Return additional rendering context.\n     *\n     * Returns:\n     *     object:\n     *     Additional rendering context.\n     */\n    getRenderContext() {\n        return {\n            disabledWarning: interpolate(disabledWarningTemplate,\n                                         [this.model.get('originalUser')])\n        };\n    },\n\n    /**\n     * Delete the OAuth2 application.\n     */\n    _onDeleteClicked() {\n        RB.apiCall({\n            url: this.model.get('apiURL'),\n            method: 'DELETE',\n            success: () => this.model.trigger('destroy'),\n            error: (xhr) => alert(xhr.errorText),\n        });\n    },\n});\n\n\n/**\n * A view for managing the user's OAuth2 applications.\n */\nRB.OAuthApplicationsView = Backbone.View.extend({\n    template: _.template(dedent`\n        <div class=\"app-lists\"></div>\n        <div class=\"oauth-form-buttons\">\n         <a class=\"btn oauth-add-app\" href=\"<%- editURL %>\">\n          ${addApplicationText}\n         </a>\n        </div>\n    `),\n\n    listTemplate: _.template(dedent`\n        <div>\n         <% if (localSiteName) { %>\n          <h2><%- localSiteName %></h2>\n         <% } %>\n         <div class=\"app-list\">\n          <div class=\"config-forms-list-empty box-recessed\">\n           <%- emptyText %>\n          </div>\n         </div>\n        </div>\n    `),\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         View options.\n     *\n     * Option Args:\n     *     apps (array):\n     *         The array of serialized application information.\n     *\n     *     addText (string):\n     *         The localized text for adding an option.\n     *\n     *     editURL (string):\n     *         The URL of the \"edit-oauth-app\" view.\n     *\n     *     emptyText (string):\n     *         The localized text for indicating there are no applications.\n     */\n    initialize(options) {\n        this.collections = new Map(\n            Object.entries(options.apps)\n                .map(([localSiteName, apps]) => ([\n                    localSiteName || null,\n                    new Backbone.Collection(apps, {\n                        model: OAuthAppItem,\n                        parse: true,\n                        baseEditURL: options.editURL,\n                        baseURL: options.baseURL,\n                     }),\n                ]))\n        );\n\n        this._editURL = options.editURL;\n\n        window.view = this;\n    },\n\n    /**\n     * Render an application list for the given LocalSite.\n     *\n     * Args:\n     *     localSiteName (string):\n     *         The name of the LocalSite or ``null``.\n     *\n     *     collection (Backbone.Collection):\n     *         The collection of models.\n     *\n     * Returns:\n     *     jQuery:\n     *     The rendered list.\n     */\n    _renderAppList(localSiteName, collection) {\n        const $entry = $(this.listTemplate({\n            emptyText: (localSiteName\n                        ? interpolate(localSiteEmptyText, [localSiteName])\n                        : emptyText),\n            localSiteName,\n        }));\n\n        const listView = new Djblets.Config.ListView({\n            ItemView: OAuthAppItemView,\n            model: new Djblets.Config.List({}, {collection}),\n        });\n\n        listView\n            .render().$el\n            .addClass('box-recessed')\n            .prependTo($entry.find('.app-list'));\n\n        return $entry;\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.OAuthApplicationsView:\n     *     This view.\n     */\n    render() {\n        this.$el.html(this.template({\n            editURL: this._editURL,\n        }));\n\n        const $lists = this.$('.app-lists');\n\n        this.collections.forEach((collection, localSiteName) => {\n            const $entry = this._renderAppList(localSiteName, collection);\n\n            if (localSiteName) {\n                $lists.append($entry);\n            } else {\n                $lists.prepend($entry);\n            }\n        });\n\n        return this;\n    },\n});\n\n\n})();\n"]}