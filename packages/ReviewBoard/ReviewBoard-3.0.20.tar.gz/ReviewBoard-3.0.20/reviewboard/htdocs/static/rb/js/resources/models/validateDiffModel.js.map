{"version":3,"sources":["validateDiffModel.es6.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBA,GAAG,iBAAH,GAAuB,GAAG,IAAH,CAAQ,MAAR,CAAe;AAClC,cAAU,EAAE,QAAF,CAAW;AACjB,oBAAY,IADK;AAEjB,yBAAiB;AAFA,KAAX,EAGP,EAAE,MAAF,CAAS,GAAG,IAAH,CAAQ,SAAjB,EAA4B,UAA5B,CAHO,CADwB;;AAMlC,qBAAiB,CACb,YADa,EAEf,MAFe,CAER,GAAG,IAAH,CAAQ,SAAR,CAAkB,eAFV,CANiB;;AAUlC;;;;;;;AAOA,OAjBkC,iBAiB5B;AACF,eAAO,YAAY,KAAK,GAAL,CAAS,iBAAT,CAAZ,GACA,uBADP;AAEH,KApBiC;;;AAsBlC;;;AAGA,SAzBkC,mBAyB1B;AACJ;AACH;AA3BiC,CAAf,CAAvB","file":"validateDiffModel.js","sourcesContent":["/**\n * A resource for checking whether a diff will work.\n *\n * This is meant to be used as a sort of throwaway object, since a POST to the\n * diff validation resource does not actually create any state on the server.\n *\n * To use this, create an instance of the model, and set the diff and repository\n * attributes. The parentDiff and basedir attributes can also be set, in the\n * cases where the diff file requires a parent diff, and when the given\n * repository requires base directory information, respectively.\n *\n * Once these are set, calling save() will do a server-side check to make sure\n * that the supplied files parse correctly, and that the source revisions are\n * present in the given repository. save's 'success' and 'error' callbacks can\n * be used to act upon this information.\n */\nRB.ValidateDiffModel = RB.Diff.extend({\n    defaults: _.defaults({\n        repository: null,\n        localSitePrefix: ''\n    }, _.result(RB.Diff.prototype, 'defaults')),\n\n    serializedAttrs: [\n        'repository'\n    ].concat(RB.Diff.prototype.serializedAttrs),\n\n    /**\n     * Return the URL to use when syncing this model.\n     *\n     * Returns:\n     *     string:\n     *     The URL to use for syncing.\n     */\n    url() {\n        return SITE_ROOT + this.get('localSitePrefix') +\n               'api/validation/diffs/';\n    },\n\n    /**\n     * Parse the result from the server.\n     */\n    parse() {\n        // Do nothing\n    }\n});\n"]}