{"version":3,"sources":["entryView.es6.js"],"names":[],"mappings":";;AAAA;;;AAGA,GAAG,iBAAH,CAAqB,SAArB,GAAiC,SAAS,IAAT,CAAc,MAAd,CAAqB;AAClD,YAAQ;AACJ,kCAA0B;AADtB,KAD0C;;AAKlD;;;;;;;AAOA,UAZkD,oBAYzC;AACL,aAAK,KAAL,GAAa,KAAK,CAAL,CAAO,qCAAP,CAAb;AACA,aAAK,sBAAL,GAA8B,KAAK,CAAL,CAAO,2BAAP,CAA9B;;AAEA,YAAI,KAAK,KAAL,CAAW,QAAX,CAAoB,WAApB,CAAJ,EAAsC;AAClC,iBAAK,sBAAL,CAA4B,QAA5B,CAAqC,uBAArC;AACH,SAFD,MAEO;AACH,iBAAK,sBAAL,CAA4B,QAA5B,CAAqC,yBAArC;AACH;;AAED,eAAO,IAAP;AACH,KAvBiD;;;AAyBlD;;;;;;;AAOA,eAhCkD,yBAgCpC;AACV,eAAO,KAAK,KAAL,CAAW,QAAX,CAAoB,WAApB,CAAP;AACH,KAlCiD;;;AAoClD;;;AAGA,UAvCkD,oBAuCzC;AACL,aAAK,KAAL,CAAW,WAAX,CAAuB,WAAvB;AACA,aAAK,sBAAL,CACK,WADL,CACiB,uBADjB,EAEK,QAFL,CAEc,yBAFd;;AAIA,aAAK,KAAL,CAAW,GAAX,CAAe,WAAf,EAA4B,KAA5B;AACH,KA9CiD;;;AAgDlD;;;AAGA,YAnDkD,sBAmDvC;AACP,aAAK,KAAL,CAAW,QAAX,CAAoB,WAApB;AACA,aAAK,sBAAL,CACK,WADL,CACiB,yBADjB,EAEK,QAFL,CAEc,uBAFd;;AAIA,aAAK,KAAL,CAAW,GAAX,CAAe,WAAf,EAA4B,IAA5B;AACH,KA1DiD;;;AA4DlD;;;;;;;;;;;;AAYA,qBAxEkD,6BAwEhC,SAxEgC,EAwErB,CAC5B,CAzEiD;;;AA2ElD;;;;;;;;;;;;;AAaA,oBAxFkD,4BAwFjC,SAxFiC,EAwFtB,CAC3B,CAzFiD;;;AA2FlD;;;;;AAKA,4BAhGkD,sCAgGvB;AACvB,YAAI,KAAK,WAAL,EAAJ,EAAwB;AACpB,iBAAK,MAAL;AACH,SAFD,MAEO;AACH,iBAAK,QAAL;AACH;AACJ;AAtGiD,CAArB,CAAjC","file":"entryView.js","sourcesContent":["/**\n * Represents an entry on the review request page.\n */\nRB.ReviewRequestPage.EntryView = Backbone.View.extend({\n    events: {\n        'click .collapse-button': '_onToggleCollapseClicked',\n    },\n\n    /**\n     * Render the box.\n     *\n     * Returns:\n     *     RB.ReviewRequestPage.EntryView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._$box = this.$('.review-request-page-entry-contents');\n        this._$expandCollapseButton = this.$('.collapse-button .rb-icon');\n\n        if (this._$box.hasClass('collapsed')) {\n            this._$expandCollapseButton.addClass('rb-icon-expand-review');\n        } else {\n            this._$expandCollapseButton.addClass('rb-icon-collapse-review');\n        }\n\n        return this;\n    },\n\n    /**\n     * Return whether the entry is currently collapsed.\n     *\n     * Returns:\n     *     boolean:\n     *     ``True`` if the entry is currently collapsed. ``False`` if expanded.\n     */\n    isCollapsed() {\n        return this._$box.hasClass('collapsed');\n    },\n\n    /**\n     * Expand the box.\n     */\n    expand() {\n        this._$box.removeClass('collapsed');\n        this._$expandCollapseButton\n            .removeClass('rb-icon-expand-review')\n            .addClass('rb-icon-collapse-review');\n\n        this.model.set('collapsed', false);\n    },\n\n    /**\n     * Collapse the box.\n     */\n    collapse() {\n        this._$box.addClass('collapsed');\n        this._$expandCollapseButton\n            .removeClass('rb-icon-collapse-review')\n            .addClass('rb-icon-expand-review');\n\n        this.model.set('collapsed', true);\n    },\n\n    /**\n     * Handle operations before applying an update from the server.\n     *\n     * This can be overridden by views to store state or before cleanup before\n     * reloading and re-rendering the HTML from the server.\n     *\n     * Subclasses do not need to call the parent method.\n     *\n     * Args:\n     *     entryData (object):\n     *         The metadata provided by the server in the update.\n     */\n    beforeApplyUpdate(entryData) {\n    },\n\n    /**\n     * Handle operations after applying an update from the server.\n     *\n     * This can be overridden by views to restore state or perform other\n     * post-update tasks after reloading and re-rendering the HTML from the\n     * server.\n     *\n     * Subclasses do not need to call the parent method.\n     *\n     * Args:\n     *     entryData (object):\n     *         The metadata provided by the server in the update.\n     */\n    afterApplyUpdate(entryData) {\n    },\n\n    /**\n     * Handle a click on the expand/collapse button.\n     *\n     * Toggles the collapsed state of the box.\n     */\n    _onToggleCollapseClicked() {\n        if (this.isCollapsed()) {\n            this.expand();\n        } else {\n            this.collapse();\n        }\n    },\n});\n"]}