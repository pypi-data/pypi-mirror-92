{"version":3,"sources":["diffViewerPageModelTests.es6.js"],"names":[],"mappings":"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","file":"diffViewerPageModelTests.js","sourcesContent":["suite('rb/pages/models/DiffViewerPage', function() {\n    describe('parse', function() {\n        it('{}', function() {\n            const page = new RB.DiffViewerPage({}, {parse: true});\n\n            expect(page.get('reviewRequest')).toBeTruthy();\n            expect(page.get('pendingReview')).toBeTruthy();\n            expect(page.get('lastActivityTimestamp')).toBe(null);\n            expect(page.get('checkForUpdates')).toBe(false);\n            expect(page.get('checkUpdatesType')).toBe(null);\n            expect(page.get('numDiffs')).toBe(0);\n\n            expect(page.commentsHint).not.toBe(null);\n            expect(page.files).not.toBe(null);\n            expect(page.pagination).not.toBe(null);\n            expect(page.revision).not.toBe(null);\n\n            /* These shouldn't be attributes. */\n            expect(page.get('editorData')).toBe(undefined);\n            expect(page.get('reviewRequestData')).toBe(undefined);\n        });\n\n        it('reviewRequestData', function() {\n            const page = new RB.DiffViewerPage({\n                reviewRequestData: {\n                    bugTrackerURL: 'http://bugs.example.com/--bug_id--/',\n                    id: 123,\n                    localSitePrefix: 's/foo/',\n                    branch: 'my-branch',\n                    bugsClosed: [101, 102, 103],\n                    closeDescription: 'This is closed',\n                    closeDescriptionRichText: true,\n                    description: 'This is a description',\n                    descriptionRichText: true,\n                    hasDraft: true,\n                    lastUpdatedTimestamp: '2017-08-23T15:10:20Z',\n                    public: true,\n                    repository: {\n                        id: 200,\n                        name: 'My repo',\n                        requiresBasedir: true,\n                        requiresChangeNumber: true,\n                        scmtoolName: 'My Tool',\n                        supportsPostCommit: true,\n                    },\n                    reviewURL: '/s/foo/r/123/',\n                    state: 'CLOSE_SUBMITTED',\n                    summary: 'This is a summary',\n                    targetGroups: [\n                        {\n                            name: 'Some group',\n                            url: '/s/foo/groups/some-group/',\n                        },\n                    ],\n                    targetPeople: [\n                        {\n                            username: 'some-user',\n                            url: '/s/foo/users/some-user/',\n                        },\n                    ],\n                    testingDone: 'This is testing done',\n                    testingDoneRichText: true,\n                    visibility: 'ARCHIVED',\n                },\n            }, {\n                parse: true,\n            });\n\n            expect(page.get('pendingReview')).toBeTruthy();\n            expect(page.get('checkForUpdates')).toBe(false);\n            expect(page.get('reviewRequestData')).toBe(undefined);\n\n            /* Check the review request. */\n            const reviewRequest = page.get('reviewRequest');\n            expect(reviewRequest).toBeTruthy();\n            expect(reviewRequest.id).toBe(123);\n            expect(reviewRequest.url())\n                .toBe('/s/foo/api/review-requests/123/');\n            expect(reviewRequest.get('bugTrackerURL'))\n                .toBe('http://bugs.example.com/--bug_id--/');\n            expect(reviewRequest.get('localSitePrefix')).toBe('s/foo/');\n            expect(reviewRequest.get('branch')).toBe('my-branch');\n            expect(reviewRequest.get('bugsClosed')).toEqual([101, 102, 103]);\n            expect(reviewRequest.get('closeDescription'))\n                .toBe('This is closed');\n            expect(reviewRequest.get('closeDescriptionRichText')).toBe(true);\n            expect(reviewRequest.get('description'))\n                .toBe('This is a description');\n            expect(reviewRequest.get('descriptionRichText')).toBe(true);\n            expect(reviewRequest.get('hasDraft')).toBe(true);\n            expect(reviewRequest.get('lastUpdatedTimestamp'))\n                .toBe('2017-08-23T15:10:20Z');\n            expect(reviewRequest.get('public')).toBe(true);\n            expect(reviewRequest.get('reviewURL')).toBe('/s/foo/r/123/');\n            expect(reviewRequest.get('state'))\n                .toBe(RB.ReviewRequest.CLOSE_SUBMITTED);\n            expect(reviewRequest.get('summary'))\n                .toBe('This is a summary');\n            expect(reviewRequest.get('targetGroups')).toEqual([{\n                name: 'Some group',\n                url: '/s/foo/groups/some-group/',\n            }]);\n            expect(reviewRequest.get('targetPeople')).toEqual([{\n                username: 'some-user',\n                url: '/s/foo/users/some-user/',\n            }]);\n            expect(reviewRequest.get('testingDone'))\n                .toBe('This is testing done');\n            expect(reviewRequest.get('testingDoneRichText')).toBe(true);\n            expect(reviewRequest.get('visibility'))\n                .toBe(RB.ReviewRequest.VISIBILITY_ARCHIVED);\n\n            /* Check the review request's repository. */\n            const repository = reviewRequest.get('repository');\n            expect(repository.id).toBe(200);\n            expect(repository.get('name')).toBe('My repo');\n            expect(repository.get('requiresBasedir')).toBe(true);\n            expect(repository.get('requiresChangeNumber')).toBe(true);\n            expect(repository.get('scmtoolName')).toBe('My Tool');\n            expect(repository.get('supportsPostCommit')).toBe(true);\n        });\n\n        it('extraReviewRequestDraftData', function() {\n            const page = new RB.DiffViewerPage({\n                extraReviewRequestDraftData: {\n                    changeDescription: 'Draft change description',\n                    changeDescriptionRichText: true,\n                    interdiffLink: '/s/foo/r/123/diff/1-2/',\n                },\n            }, {\n                parse: true,\n            });\n\n            expect(page.get('pendingReview')).toBeTruthy();\n            expect(page.get('checkForUpdates')).toBe(false);\n            expect(page.get('reviewRequestData')).toBe(undefined);\n\n            const draft = page.get('reviewRequest').draft;\n            expect(draft.get('changeDescription'))\n                .toBe('Draft change description');\n            expect(draft.get('changeDescriptionRichText')).toBe(true);\n            expect(draft.get('interdiffLink')).toBe('/s/foo/r/123/diff/1-2/');\n        });\n\n        it('editorData', function() {\n            const page = new RB.DiffViewerPage({\n                editorData: {\n                    changeDescriptionRenderedText: 'Change description',\n                    closeDescriptionRenderedText: 'This is closed',\n                    hasDraft: true,\n                    mutableByUser: true,\n                    showSendEmail: true,\n                    statusMutableByUser: true,\n                },\n            }, {\n                parse: true,\n            });\n\n            expect(page.get('pendingReview')).toBeTruthy();\n            expect(page.get('checkForUpdates')).toBe(false);\n            expect(page.get('editorData')).toBe(undefined);\n\n            /* Check the ReviewRequestEditor. */\n            const editor = page.reviewRequestEditor;\n            expect(editor.get('changeDescriptionRenderedText'))\n                .toBe('Change description');\n            expect(editor.get('closeDescriptionRenderedText'))\n                .toBe('This is closed');\n            expect(editor.get('hasDraft')).toBe(true);\n            expect(editor.get('mutableByUser')).toBe(true);\n            expect(editor.get('showSendEmail')).toBe(true);\n            expect(editor.get('statusMutableByUser')).toBe(true);\n        });\n\n        it('lastActivityTimestamp', function() {\n            const page = new RB.DiffViewerPage({\n                lastActivityTimestamp: '2017-08-22T18:20:30Z',\n                checkUpdatesType: 'diff',\n            }, {\n                parse: true,\n            });\n\n            expect(page.get('lastActivityTimestamp'))\n                .toBe('2017-08-22T18:20:30Z');\n        });\n\n        it('checkUpdatesType', function() {\n            const page = new RB.DiffViewerPage({\n                checkUpdatesType: 'diff',\n            }, {\n                parse: true,\n            });\n\n            expect(page.get('pendingReview')).toBeTruthy();\n            expect(page.get('checkUpdatesType')).toBe('diff');\n        });\n\n        it('comments_hint', function() {\n            const page = new RB.DiffViewerPage({\n                comments_hint: {\n                    diffsets_with_comments: [\n                        {\n                            revision: 1,\n                            is_current: false,\n                        },\n                    ],\n                    has_other_comments: true,\n                    interdiffs_with_comments: [\n                        {\n                            old_revision: 1,\n                            new_revision: 2,\n                            is_current: true,\n                        },\n                    ],\n                },\n            }, {\n                parse: true,\n            });\n\n            const commentsHint = page.commentsHint;\n            expect(commentsHint.get('hasOtherComments')).toBe(true);\n            expect(commentsHint.get('diffsetsWithComments')).toEqual([\n                {\n                    revision: 1,\n                    isCurrent: false,\n                },\n            ]);\n            expect(commentsHint.get('interdiffsWithComments')).toEqual([\n                {\n                    oldRevision: 1,\n                    newRevision: 2,\n                    isCurrent: true,\n                },\n            ]);\n        });\n    });\n\n    describe('loadDiffRevision', function() {\n        let page;\n\n        beforeEach(function() {\n            page = new RB.DiffViewerPage({\n                reviewRequestData: {\n                    id: 123,\n                },\n            }, {\n                parse: true,\n            });\n\n            spyOn($, 'ajax').and.callFake(url => {\n                const query = {};\n                const queryParams = url.split('?')[1].split('&');\n\n                for (let i = 0; i < queryParams.length; i++) {\n                    const pair = queryParams[i].split('=');\n                    query[decodeURIComponent(pair[0])] =\n                        decodeURIComponent(pair[1]);\n                }\n\n                return {\n                    done: cb => cb({\n                        diff_context: {\n                            revision: {\n                                revision: query.revision,\n                                interdiff_revision:\n                                    query['interdiff-revision'] || null,\n                            },\n                        },\n                    }),\n                };\n            });\n        });\n\n        describe('Generates URL for', function() {\n            it('First page, normal diffs', function() {\n                page.loadDiffRevision({\n                    page: 1,\n                    revision: 1,\n                });\n\n                expect($.ajax).toHaveBeenCalledWith(\n                    '/api/review-requests/123/diff-context/?revision=1');\n            });\n\n            it('Other page, normal diffs', function() {\n                page.loadDiffRevision({\n                    page: 2,\n                    revision: 1,\n                });\n\n                expect($.ajax).toHaveBeenCalledWith(\n                    '/api/review-requests/123/diff-context/' +\n                    '?revision=1&page=2');\n            });\n\n            it('First page, interdiffs', function() {\n                page.loadDiffRevision({\n                    page: 1,\n                    revision: 1,\n                    interdiffRevision: 2,\n                });\n\n                expect($.ajax).toHaveBeenCalledWith(\n                    '/api/review-requests/123/diff-context/' +\n                    '?revision=1&interdiff-revision=2');\n            });\n\n            it('Other page, interdiffs', function() {\n                page.loadDiffRevision({\n                    page: 2,\n                    revision: 1,\n                    interdiffRevision: 2,\n                });\n\n                expect($.ajax).toHaveBeenCalledWith(\n                    '/api/review-requests/123/diff-context/' +\n                    '?revision=1&interdiff-revision=2&page=2');\n            });\n\n            it('Filename patterns', function() {\n                page.loadDiffRevision({\n                    page: 2,\n                    revision: 1,\n                    filenamePatterns: '*.txt,src/*',\n                });\n\n                expect($.ajax).toHaveBeenCalledWith(\n                    '/api/review-requests/123/diff-context/' +\n                    '?revision=1&page=2&filenames=*.txt%2Csrc%2F*');\n            });\n        });\n\n        describe('Sets canDownloadDiff to', function() {\n            it('true for normal diffs', function() {\n                page.loadDiffRevision({\n                    revision: 1,\n                });\n                expect(page.get('canDownloadDiff')).toBe(true);\n            });\n\n            it('false for interdiffs', function() {\n                page.loadDiffRevision({\n                    revision: 1,\n                    interdiffRevision: 2,\n                });\n                expect(page.get('canDownloadDiff')).toBe(false);\n            });\n        });\n    });\n});\n"]}