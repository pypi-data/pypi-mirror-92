
# DO NOT EDIT MANUALLY; THIS FILE IS AUTOGENERATED by the `gen-gitlab-ci`
# script. Rerun the script to update this file, and commit it to version
# control.

stages:
    - build-base
    - publish-base
    - build
    - publish

.docker:
    image: docker:19.03.11-dind
    services:
        - name: docker:19.03.11-dind
    variables:
        DOCKER_DRIVER: overlay2
    before_script:
        - apk add make python3
        - cd support/docker/
        - ./configure
        - 'docker login --username="${DOCKER_USERNAME}" --password-stdin < "${DOCKER_PASSWORD_FILE}"'


docker-images-base-amd64:
    stage: build-base
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-base"
    tags: []
    needs: []
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-base-arm64:
    stage: build-base
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-base"
    tags: [arm64-dind]
    needs: []
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-base-multiarch:
    stage: publish-base
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-base"
    needs: ['docker-images-base-amd64', 'docker-images-base-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-clang-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-clang"
    tags: []
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-clang-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-clang"
    tags: [arm64-dind]
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-clang-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-clang"
    needs: ['docker-images-clang-amd64', 'docker-images-clang-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-clang_10-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-clang_10"
    tags: []
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-clang_10-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-clang_10"
    tags: [arm64-dind]
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-clang_10-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-clang_10"
    needs: ['docker-images-clang_10-amd64', 'docker-images-clang_10-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-clang_11-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-clang_11"
    tags: []
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-clang_11-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-clang_11"
    tags: [arm64-dind]
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-clang_11-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-clang_11"
    needs: ['docker-images-clang_11-amd64', 'docker-images-clang_11-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-clang_nightly-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-clang_nightly"
    tags: []
    needs: []
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "daily"'


docker-images-clang_nightly-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-clang_nightly"
    tags: [arm64-dind]
    needs: []
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "daily"'


docker-images-clang_nightly-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-clang_nightly"
    needs: ['docker-images-clang_nightly-amd64', 'docker-images-clang_nightly-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "daily"'


docker-images-gcc-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-gcc"
    tags: []
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-gcc-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-gcc"
    tags: [arm64-dind]
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-gcc-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-gcc"
    needs: ['docker-images-gcc-amd64', 'docker-images-gcc-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-gcc_10-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-gcc_10"
    tags: []
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-gcc_10-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-gcc_10"
    tags: [arm64-dind]
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-gcc_10-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-gcc_10"
    needs: ['docker-images-gcc_10-amd64', 'docker-images-gcc_10-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-gcc_8-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-gcc_8"
    tags: []
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-gcc_8-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-gcc_8"
    tags: [arm64-dind]
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-gcc_8-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-gcc_8"
    needs: ['docker-images-gcc_8-amd64', 'docker-images-gcc_8-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-gcc_9-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-gcc_9"
    tags: []
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-gcc_9-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-gcc_9"
    tags: [arm64-dind]
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'


docker-images-gcc_9-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-gcc_9"
    needs: ['docker-images-gcc_9-amd64', 'docker-images-gcc_9-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && $TUXMAKE_DOCKER_IMAGES == "monthly"'

