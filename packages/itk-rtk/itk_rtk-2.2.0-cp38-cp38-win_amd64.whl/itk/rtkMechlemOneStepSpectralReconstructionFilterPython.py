# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _RTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rtkMechlemOneStepSpectralReconstructionFilterPython
else:
    import _rtkMechlemOneStepSpectralReconstructionFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _rtkMechlemOneStepSpectralReconstructionFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _rtkMechlemOneStepSpectralReconstructionFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageRTKPython
import itk.itkImageBaseRTKPython
import itk.itkPointRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkImageRegionRTKPython
import itk.rtkThreeDCircularProjectionGeometryPython
import itk.rtkProjectionGeometryPython
import itk.rtkIterativeConeBeamReconstructionFilterPython
import itk.rtkForwardProjectionImageFilterPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterBPython
import itk.itkInPlaceImageFilterRTKPython
import itk.itkImageToImageFilterRTKPython
import itk.itkImageSourceRTKPython
import itk.rtkBackProjectionImageFilterPython

def rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF23IVF23):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF23IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF23IVF23):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF33IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF23IVF23):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF43IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF23IVF23):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF23IVF53IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF33IVF33):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF23IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF33IVF33):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF33IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF33IVF33):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF43IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF33IVF33):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF33IVF53IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF43IVF43):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF23IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF43IVF43):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF33IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF43IVF43):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF43IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF43IVF43):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF43IVF53IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF53IVF53):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF23IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF53IVF53):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF33IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF53IVF53):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF43IF3_cast


def rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_New():
    return rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3.New()

class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3(itk.rtkIterativeConeBeamReconstructionFilterPython.rtkIterativeConeBeamReconstructionFilterIVF53IVF53):
    r"""Proxy of C++ rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_Clone)
    SetGeometry = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetGeometry)
    SetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_GetNumberOfIterations)
    SetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetNumberOfSubsets)
    GetNumberOfSubsets = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_GetNumberOfSubsets)
    SetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetResetNesterovEvery)
    GetResetNesterovEvery = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_GetResetNesterovEvery)
    SetInputMaterialVolumes = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetInputMaterialVolumes)
    SetInputPhotonCounts = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetInputPhotonCounts)
    SetInputSpectrum = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetInputSpectrum)
    SetSupportMask = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetSupportMask)
    SetSpatialRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetSpatialRegularizationWeights)
    SetProjectionWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetProjectionWeights)
    SetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetRegularizationWeights)
    GetRegularizationWeights = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_GetRegularizationWeights)
    SetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetRegularizationRadius)
    GetRegularizationRadius = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_GetRegularizationRadius)
    SetBinnedDetectorResponse = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetBinnedDetectorResponse)
    SetMaterialAttenuations = _swig_new_instance_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_SetMaterialAttenuations)
    __swig_destroy__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.delete_rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3
    cast = _swig_new_static_method(_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3

        Create a new object of the class rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3 in _rtkMechlemOneStepSpectralReconstructionFilterPython:
_rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_swigregister(rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3)
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3___New_orig__ = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3___New_orig__
rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_cast = _rtkMechlemOneStepSpectralReconstructionFilterPython.rtkMechlemOneStepSpectralReconstructionFilterIVF53IVF53IF3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def mechlem_one_step_spectral_reconstruction_filter(*args, **kwargs):
    """Procedural interface for MechlemOneStepSpectralReconstructionFilter"""
    import itk
    instance = itk.MechlemOneStepSpectralReconstructionFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def mechlem_one_step_spectral_reconstruction_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MechlemOneStepSpectralReconstructionFilter, itkTemplate.itkTemplate):
        filter_object = itk.MechlemOneStepSpectralReconstructionFilter.values()[0]
    else:
        filter_object = itk.MechlemOneStepSpectralReconstructionFilter

    mechlem_one_step_spectral_reconstruction_filter.__doc__ = filter_object.__doc__
    mechlem_one_step_spectral_reconstruction_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    mechlem_one_step_spectral_reconstruction_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.MechlemOneStepSpectralReconstructionFilter, itkTemplate.itkTemplate):
        mechlem_one_step_spectral_reconstruction_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        mechlem_one_step_spectral_reconstruction_filter.__doc__ += "\n"
        mechlem_one_step_spectral_reconstruction_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        mechlem_one_step_spectral_reconstruction_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



