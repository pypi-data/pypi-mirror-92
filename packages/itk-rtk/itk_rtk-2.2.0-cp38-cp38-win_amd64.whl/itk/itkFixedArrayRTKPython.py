# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _RTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkFixedArrayRTKPython
else:
    import _itkFixedArrayRTKPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkFixedArrayRTKPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkFixedArrayRTKPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.pyBasePython
class itkFixedArrayi2(object):
    r"""Proxy of C++ itkFixedArrayi2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __swig_destroy__ = _itkFixedArrayRTKPython.delete_itkFixedArrayi2

    def __init__(self, *args):
        r"""
        __init__(itkFixedArrayi2 self) -> itkFixedArrayi2
        __init__(itkFixedArrayi2 self, itkFixedArrayi2 arg0) -> itkFixedArrayi2
        __init__(itkFixedArrayi2 self, int const * r) -> itkFixedArrayi2
        __init__(itkFixedArrayi2 self, int const & arg0) -> itkFixedArrayi2
        __init__(itkFixedArrayi2 self, std::array< int,2 > const & stdArray) -> itkFixedArrayi2
        """
        _itkFixedArrayRTKPython.itkFixedArrayi2_swiginit(self, _itkFixedArrayRTKPython.new_itkFixedArrayi2(*args))
    __eq__ = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2___eq__)
    __ne__ = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2___ne__)
    SetElement = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2_SetElement)
    GetElement = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2_GetElement)
    GetDataPointer = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2_GetDataPointer)
    cbegin = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2_cbegin)
    begin = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2_begin)
    cend = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2_cend)
    end = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2_end)
    crbegin = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2_crbegin)
    rbegin = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2_rbegin)
    crend = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2_crend)
    rend = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2_rend)
    Size = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2_Size)
    Fill = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2_Fill)
    swap = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2_swap)
    Filled = _swig_new_static_method(_itkFixedArrayRTKPython.itkFixedArrayi2_Filled)
    __getitem__ = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2___getitem__)
    __setitem__ = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2___setitem__)
    __len__ = _swig_new_static_method(_itkFixedArrayRTKPython.itkFixedArrayi2___len__)
    __repr__ = _swig_new_instance_method(_itkFixedArrayRTKPython.itkFixedArrayi2___repr__)

# Register itkFixedArrayi2 in _itkFixedArrayRTKPython:
_itkFixedArrayRTKPython.itkFixedArrayi2_swigregister(itkFixedArrayi2)
itkFixedArrayi2_Filled = _itkFixedArrayRTKPython.itkFixedArrayi2_Filled
itkFixedArrayi2___len__ = _itkFixedArrayRTKPython.itkFixedArrayi2___len__



