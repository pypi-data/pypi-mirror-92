# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _RTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rtkCyclicDeformationImageFilterPython
else:
    import _rtkCyclicDeformationImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _rtkCyclicDeformationImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _rtkCyclicDeformationImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageToImageFilterRTKPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkFixedArrayPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageRTKPython
import itk.itkImageBaseRTKPython
import itk.itkPointRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkImageRegionRTKPython
import itk.itkImageSourceRTKPython

def rtkCyclicDeformationImageFilterIF4IF3_New():
    return rtkCyclicDeformationImageFilterIF4IF3.New()

class rtkCyclicDeformationImageFilterIF4IF3(itk.itkImageToImageFilterRTKPython.itkImageToImageFilterIF4IF3):
    r"""Proxy of C++ rtkCyclicDeformationImageFilterIF4IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_Clone)
    GetSignalFilename = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_GetSignalFilename)
    SetSignalFilename = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_SetSignalFilename)
    SetSignalVector = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_SetSignalVector)
    GetFrame = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_GetFrame)
    SetFrame = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_SetFrame)
    __swig_destroy__ = _rtkCyclicDeformationImageFilterPython.delete_rtkCyclicDeformationImageFilterIF4IF3
    cast = _swig_new_static_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkCyclicDeformationImageFilterIF4IF3

        Create a new object of the class rtkCyclicDeformationImageFilterIF4IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkCyclicDeformationImageFilterIF4IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkCyclicDeformationImageFilterIF4IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkCyclicDeformationImageFilterIF4IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkCyclicDeformationImageFilterIF4IF3 in _rtkCyclicDeformationImageFilterPython:
_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_swigregister(rtkCyclicDeformationImageFilterIF4IF3)
rtkCyclicDeformationImageFilterIF4IF3___New_orig__ = _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3___New_orig__
rtkCyclicDeformationImageFilterIF4IF3_cast = _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIF4IF3_cast


def rtkCyclicDeformationImageFilterIVF24IVF23_New():
    return rtkCyclicDeformationImageFilterIVF24IVF23.New()

class rtkCyclicDeformationImageFilterIVF24IVF23(itk.itkImageToImageFilterRTKPython.itkImageToImageFilterIVF24IVF23):
    r"""Proxy of C++ rtkCyclicDeformationImageFilterIVF24IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23___New_orig__)
    Clone = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_Clone)
    GetSignalFilename = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_GetSignalFilename)
    SetSignalFilename = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_SetSignalFilename)
    SetSignalVector = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_SetSignalVector)
    GetFrame = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_GetFrame)
    SetFrame = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_SetFrame)
    __swig_destroy__ = _rtkCyclicDeformationImageFilterPython.delete_rtkCyclicDeformationImageFilterIVF24IVF23
    cast = _swig_new_static_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_cast)

    def New(*args, **kargs):
        """New() -> rtkCyclicDeformationImageFilterIVF24IVF23

        Create a new object of the class rtkCyclicDeformationImageFilterIVF24IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkCyclicDeformationImageFilterIVF24IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkCyclicDeformationImageFilterIVF24IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkCyclicDeformationImageFilterIVF24IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkCyclicDeformationImageFilterIVF24IVF23 in _rtkCyclicDeformationImageFilterPython:
_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_swigregister(rtkCyclicDeformationImageFilterIVF24IVF23)
rtkCyclicDeformationImageFilterIVF24IVF23___New_orig__ = _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23___New_orig__
rtkCyclicDeformationImageFilterIVF24IVF23_cast = _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF24IVF23_cast


def rtkCyclicDeformationImageFilterIVF34IVF33_New():
    return rtkCyclicDeformationImageFilterIVF34IVF33.New()

class rtkCyclicDeformationImageFilterIVF34IVF33(itk.itkImageToImageFilterRTKPython.itkImageToImageFilterIVF34IVF33):
    r"""Proxy of C++ rtkCyclicDeformationImageFilterIVF34IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33___New_orig__)
    Clone = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_Clone)
    GetSignalFilename = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_GetSignalFilename)
    SetSignalFilename = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_SetSignalFilename)
    SetSignalVector = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_SetSignalVector)
    GetFrame = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_GetFrame)
    SetFrame = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_SetFrame)
    __swig_destroy__ = _rtkCyclicDeformationImageFilterPython.delete_rtkCyclicDeformationImageFilterIVF34IVF33
    cast = _swig_new_static_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_cast)

    def New(*args, **kargs):
        """New() -> rtkCyclicDeformationImageFilterIVF34IVF33

        Create a new object of the class rtkCyclicDeformationImageFilterIVF34IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkCyclicDeformationImageFilterIVF34IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkCyclicDeformationImageFilterIVF34IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkCyclicDeformationImageFilterIVF34IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkCyclicDeformationImageFilterIVF34IVF33 in _rtkCyclicDeformationImageFilterPython:
_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_swigregister(rtkCyclicDeformationImageFilterIVF34IVF33)
rtkCyclicDeformationImageFilterIVF34IVF33___New_orig__ = _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33___New_orig__
rtkCyclicDeformationImageFilterIVF34IVF33_cast = _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF34IVF33_cast


def rtkCyclicDeformationImageFilterIVF44IVF43_New():
    return rtkCyclicDeformationImageFilterIVF44IVF43.New()

class rtkCyclicDeformationImageFilterIVF44IVF43(itk.itkImageToImageFilterRTKPython.itkImageToImageFilterIVF44IVF43):
    r"""Proxy of C++ rtkCyclicDeformationImageFilterIVF44IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43___New_orig__)
    Clone = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_Clone)
    GetSignalFilename = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_GetSignalFilename)
    SetSignalFilename = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_SetSignalFilename)
    SetSignalVector = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_SetSignalVector)
    GetFrame = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_GetFrame)
    SetFrame = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_SetFrame)
    __swig_destroy__ = _rtkCyclicDeformationImageFilterPython.delete_rtkCyclicDeformationImageFilterIVF44IVF43
    cast = _swig_new_static_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_cast)

    def New(*args, **kargs):
        """New() -> rtkCyclicDeformationImageFilterIVF44IVF43

        Create a new object of the class rtkCyclicDeformationImageFilterIVF44IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkCyclicDeformationImageFilterIVF44IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkCyclicDeformationImageFilterIVF44IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkCyclicDeformationImageFilterIVF44IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkCyclicDeformationImageFilterIVF44IVF43 in _rtkCyclicDeformationImageFilterPython:
_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_swigregister(rtkCyclicDeformationImageFilterIVF44IVF43)
rtkCyclicDeformationImageFilterIVF44IVF43___New_orig__ = _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43___New_orig__
rtkCyclicDeformationImageFilterIVF44IVF43_cast = _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF44IVF43_cast


def rtkCyclicDeformationImageFilterIVF54IVF53_New():
    return rtkCyclicDeformationImageFilterIVF54IVF53.New()

class rtkCyclicDeformationImageFilterIVF54IVF53(itk.itkImageToImageFilterRTKPython.itkImageToImageFilterIVF54IVF53):
    r"""Proxy of C++ rtkCyclicDeformationImageFilterIVF54IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53___New_orig__)
    Clone = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_Clone)
    GetSignalFilename = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_GetSignalFilename)
    SetSignalFilename = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_SetSignalFilename)
    SetSignalVector = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_SetSignalVector)
    GetFrame = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_GetFrame)
    SetFrame = _swig_new_instance_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_SetFrame)
    __swig_destroy__ = _rtkCyclicDeformationImageFilterPython.delete_rtkCyclicDeformationImageFilterIVF54IVF53
    cast = _swig_new_static_method(_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_cast)

    def New(*args, **kargs):
        """New() -> rtkCyclicDeformationImageFilterIVF54IVF53

        Create a new object of the class rtkCyclicDeformationImageFilterIVF54IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkCyclicDeformationImageFilterIVF54IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkCyclicDeformationImageFilterIVF54IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkCyclicDeformationImageFilterIVF54IVF53.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkCyclicDeformationImageFilterIVF54IVF53 in _rtkCyclicDeformationImageFilterPython:
_rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_swigregister(rtkCyclicDeformationImageFilterIVF54IVF53)
rtkCyclicDeformationImageFilterIVF54IVF53___New_orig__ = _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53___New_orig__
rtkCyclicDeformationImageFilterIVF54IVF53_cast = _rtkCyclicDeformationImageFilterPython.rtkCyclicDeformationImageFilterIVF54IVF53_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def cyclic_deformation_image_filter(*args, **kwargs):
    """Procedural interface for CyclicDeformationImageFilter"""
    import itk
    instance = itk.CyclicDeformationImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def cyclic_deformation_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.CyclicDeformationImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.CyclicDeformationImageFilter.values()[0]
    else:
        filter_object = itk.CyclicDeformationImageFilter

    cyclic_deformation_image_filter.__doc__ = filter_object.__doc__
    cyclic_deformation_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    cyclic_deformation_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.CyclicDeformationImageFilter, itkTemplate.itkTemplate):
        cyclic_deformation_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        cyclic_deformation_image_filter.__doc__ += "\n"
        cyclic_deformation_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        cyclic_deformation_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



