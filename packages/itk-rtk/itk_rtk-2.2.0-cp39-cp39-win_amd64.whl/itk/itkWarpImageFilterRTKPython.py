# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _RTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkWarpImageFilterRTKPython
else:
    import _itkWarpImageFilterRTKPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkWarpImageFilterRTKPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkWarpImageFilterRTKPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkPointPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.ITKCommonBasePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkInterpolateImageFunctionPython
import itk.itkContinuousIndexPython
import itk.itkImageFunctionBasePython
import itk.itkFunctionBasePython
import itk.itkArrayPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython

def itkWarpImageFilterID2ID2ICVD22_New():
    return itkWarpImageFilterID2ID2ICVD22.New()

class itkWarpImageFilterID2ID2ICVD22(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkWarpImageFilterID2ID2ICVD22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22___New_orig__)
    Clone = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_Clone)
    SetDisplacementField = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetDisplacementField)
    SetInterpolator = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetInterpolator)
    SetOutputSpacing = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetOutputStartIndex)
    SetOutputSize = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetOutputSize)
    GetOutputSize = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetOutputSize)
    SetEdgePaddingValue = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SetEdgePaddingValue)
    GetEdgePaddingValue = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GetEdgePaddingValue)
    GenerateOutputInformation = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_GenerateInputRequestedRegion)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_BeforeThreadedGenerateData)
    AfterThreadedGenerateData = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_AfterThreadedGenerateData)
    SameDimensionCheck1 = _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_SameDimensionCheck2
    
    InputHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_InputHasNumericTraitsCheck
    
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_DisplacementFieldHasNumericTraitsCheck
    
    __swig_destroy__ = _itkWarpImageFilterRTKPython.delete_itkWarpImageFilterID2ID2ICVD22
    cast = _swig_new_static_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterID2ID2ICVD22

        Create a new object of the class itkWarpImageFilterID2ID2ICVD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterID2ID2ICVD22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterID2ID2ICVD22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWarpImageFilterID2ID2ICVD22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWarpImageFilterID2ID2ICVD22 in _itkWarpImageFilterRTKPython:
_itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_swigregister(itkWarpImageFilterID2ID2ICVD22)
itkWarpImageFilterID2ID2ICVD22___New_orig__ = _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22___New_orig__
itkWarpImageFilterID2ID2ICVD22_cast = _itkWarpImageFilterRTKPython.itkWarpImageFilterID2ID2ICVD22_cast


def itkWarpImageFilterID3ID3ICVD33_New():
    return itkWarpImageFilterID3ID3ICVD33.New()

class itkWarpImageFilterID3ID3ICVD33(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkWarpImageFilterID3ID3ICVD33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33___New_orig__)
    Clone = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_Clone)
    SetDisplacementField = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetDisplacementField)
    SetInterpolator = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetInterpolator)
    SetOutputSpacing = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetOutputStartIndex)
    SetOutputSize = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetOutputSize)
    GetOutputSize = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetOutputSize)
    SetEdgePaddingValue = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SetEdgePaddingValue)
    GetEdgePaddingValue = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GetEdgePaddingValue)
    GenerateOutputInformation = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_GenerateInputRequestedRegion)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_BeforeThreadedGenerateData)
    AfterThreadedGenerateData = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_AfterThreadedGenerateData)
    SameDimensionCheck1 = _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_SameDimensionCheck2
    
    InputHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_InputHasNumericTraitsCheck
    
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_DisplacementFieldHasNumericTraitsCheck
    
    __swig_destroy__ = _itkWarpImageFilterRTKPython.delete_itkWarpImageFilterID3ID3ICVD33
    cast = _swig_new_static_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterID3ID3ICVD33

        Create a new object of the class itkWarpImageFilterID3ID3ICVD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterID3ID3ICVD33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterID3ID3ICVD33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWarpImageFilterID3ID3ICVD33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWarpImageFilterID3ID3ICVD33 in _itkWarpImageFilterRTKPython:
_itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_swigregister(itkWarpImageFilterID3ID3ICVD33)
itkWarpImageFilterID3ID3ICVD33___New_orig__ = _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33___New_orig__
itkWarpImageFilterID3ID3ICVD33_cast = _itkWarpImageFilterRTKPython.itkWarpImageFilterID3ID3ICVD33_cast


def itkWarpImageFilterIF2IF2ICVF22_New():
    return itkWarpImageFilterIF2IF2ICVF22.New()

class itkWarpImageFilterIF2IF2ICVF22(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkWarpImageFilterIF2IF2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_Clone)
    SetDisplacementField = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetDisplacementField)
    SetInterpolator = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetInterpolator)
    SetOutputSpacing = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetOutputStartIndex)
    SetOutputSize = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetOutputSize)
    GetOutputSize = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetOutputSize)
    SetEdgePaddingValue = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SetEdgePaddingValue)
    GetEdgePaddingValue = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GetEdgePaddingValue)
    GenerateOutputInformation = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_GenerateInputRequestedRegion)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_BeforeThreadedGenerateData)
    AfterThreadedGenerateData = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_AfterThreadedGenerateData)
    SameDimensionCheck1 = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_SameDimensionCheck2
    
    InputHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_InputHasNumericTraitsCheck
    
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_DisplacementFieldHasNumericTraitsCheck
    
    __swig_destroy__ = _itkWarpImageFilterRTKPython.delete_itkWarpImageFilterIF2IF2ICVF22
    cast = _swig_new_static_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIF2IF2ICVF22

        Create a new object of the class itkWarpImageFilterIF2IF2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIF2IF2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIF2IF2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWarpImageFilterIF2IF2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWarpImageFilterIF2IF2ICVF22 in _itkWarpImageFilterRTKPython:
_itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_swigregister(itkWarpImageFilterIF2IF2ICVF22)
itkWarpImageFilterIF2IF2ICVF22___New_orig__ = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22___New_orig__
itkWarpImageFilterIF2IF2ICVF22_cast = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF2IF2ICVF22_cast


def itkWarpImageFilterIF3IF3ICVF33_New():
    return itkWarpImageFilterIF3IF3ICVF33.New()

class itkWarpImageFilterIF3IF3ICVF33(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkWarpImageFilterIF3IF3ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_Clone)
    SetDisplacementField = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetDisplacementField)
    GetDisplacementField = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetDisplacementField)
    SetInterpolator = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetInterpolator)
    SetOutputSpacing = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetOutputStartIndex)
    SetOutputSize = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetOutputSize)
    GetOutputSize = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetOutputSize)
    SetEdgePaddingValue = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SetEdgePaddingValue)
    GetEdgePaddingValue = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GetEdgePaddingValue)
    GenerateOutputInformation = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_GenerateInputRequestedRegion)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_BeforeThreadedGenerateData)
    AfterThreadedGenerateData = _swig_new_instance_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_AfterThreadedGenerateData)
    SameDimensionCheck1 = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_SameDimensionCheck2
    
    InputHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_InputHasNumericTraitsCheck
    
    DisplacementFieldHasNumericTraitsCheck = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_DisplacementFieldHasNumericTraitsCheck
    
    __swig_destroy__ = _itkWarpImageFilterRTKPython.delete_itkWarpImageFilterIF3IF3ICVF33
    cast = _swig_new_static_method(_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkWarpImageFilterIF3IF3ICVF33

        Create a new object of the class itkWarpImageFilterIF3IF3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWarpImageFilterIF3IF3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWarpImageFilterIF3IF3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWarpImageFilterIF3IF3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWarpImageFilterIF3IF3ICVF33 in _itkWarpImageFilterRTKPython:
_itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_swigregister(itkWarpImageFilterIF3IF3ICVF33)
itkWarpImageFilterIF3IF3ICVF33___New_orig__ = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33___New_orig__
itkWarpImageFilterIF3IF3ICVF33_cast = _itkWarpImageFilterRTKPython.itkWarpImageFilterIF3IF3ICVF33_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def warp_image_filter(*args, **kwargs):
    """Procedural interface for WarpImageFilter"""
    import itk
    instance = itk.WarpImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def warp_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.WarpImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.WarpImageFilter.values()[0]
    else:
        filter_object = itk.WarpImageFilter

    warp_image_filter.__doc__ = filter_object.__doc__
    warp_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    warp_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.WarpImageFilter, itkTemplate.itkTemplate):
        warp_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        warp_image_filter.__doc__ += "\n"
        warp_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        warp_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



