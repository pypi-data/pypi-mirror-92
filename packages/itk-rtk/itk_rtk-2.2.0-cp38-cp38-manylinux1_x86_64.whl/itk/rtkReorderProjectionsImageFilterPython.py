# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _RTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rtkReorderProjectionsImageFilterPython
else:
    import _rtkReorderProjectionsImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _rtkReorderProjectionsImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _rtkReorderProjectionsImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.rtkThreeDCircularProjectionGeometryPython
import itk.rtkProjectionGeometryPython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkImageToImageFilterBPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython

def rtkReorderProjectionsImageFilterICF3ICF3_New():
    return rtkReorderProjectionsImageFilterICF3ICF3.New()

class rtkReorderProjectionsImageFilterICF3ICF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ rtkReorderProjectionsImageFilterICF3ICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PermutationType_NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_PermutationType_NONE
    
    PermutationType_SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_PermutationType_SORT
    
    PermutationType_SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_PermutationType_SHUFFLE
    
    __New_orig__ = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_Clone)
    GetModifiableOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_GetModifiableOutputGeometry)
    GetOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_GetOutputGeometry)
    SetInputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_SetInputGeometry)
    GetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_GetPermutation)
    SetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_SetPermutation)
    SetInputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_SetInputSignal)
    GetOutputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_GetOutputSignal)
    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterICF3ICF3
    cast = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterICF3ICF3

        Create a new object of the class rtkReorderProjectionsImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterICF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterICF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkReorderProjectionsImageFilterICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkReorderProjectionsImageFilterICF3ICF3 in _rtkReorderProjectionsImageFilterPython:
_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_swigregister(rtkReorderProjectionsImageFilterICF3ICF3)
rtkReorderProjectionsImageFilterICF3ICF3___New_orig__ = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3___New_orig__
rtkReorderProjectionsImageFilterICF3ICF3_cast = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICF3ICF3_cast


def rtkReorderProjectionsImageFilterICVF23ICVF23_New():
    return rtkReorderProjectionsImageFilterICVF23ICVF23.New()

class rtkReorderProjectionsImageFilterICVF23ICVF23(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23):
    r"""Proxy of C++ rtkReorderProjectionsImageFilterICVF23ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PermutationType_NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_PermutationType_NONE
    
    PermutationType_SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_PermutationType_SORT
    
    PermutationType_SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_PermutationType_SHUFFLE
    
    __New_orig__ = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_Clone)
    GetModifiableOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_GetModifiableOutputGeometry)
    GetOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_GetOutputGeometry)
    SetInputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_SetInputGeometry)
    GetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_GetPermutation)
    SetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_SetPermutation)
    SetInputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_SetInputSignal)
    GetOutputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_GetOutputSignal)
    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterICVF23ICVF23
    cast = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterICVF23ICVF23

        Create a new object of the class rtkReorderProjectionsImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkReorderProjectionsImageFilterICVF23ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkReorderProjectionsImageFilterICVF23ICVF23 in _rtkReorderProjectionsImageFilterPython:
_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_swigregister(rtkReorderProjectionsImageFilterICVF23ICVF23)
rtkReorderProjectionsImageFilterICVF23ICVF23___New_orig__ = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23___New_orig__
rtkReorderProjectionsImageFilterICVF23ICVF23_cast = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF23ICVF23_cast


def rtkReorderProjectionsImageFilterICVF33ICVF33_New():
    return rtkReorderProjectionsImageFilterICVF33ICVF33.New()

class rtkReorderProjectionsImageFilterICVF33ICVF33(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33):
    r"""Proxy of C++ rtkReorderProjectionsImageFilterICVF33ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PermutationType_NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_PermutationType_NONE
    
    PermutationType_SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_PermutationType_SORT
    
    PermutationType_SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_PermutationType_SHUFFLE
    
    __New_orig__ = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_Clone)
    GetModifiableOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_GetModifiableOutputGeometry)
    GetOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_GetOutputGeometry)
    SetInputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_SetInputGeometry)
    GetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_GetPermutation)
    SetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_SetPermutation)
    SetInputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_SetInputSignal)
    GetOutputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_GetOutputSignal)
    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterICVF33ICVF33
    cast = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterICVF33ICVF33

        Create a new object of the class rtkReorderProjectionsImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkReorderProjectionsImageFilterICVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkReorderProjectionsImageFilterICVF33ICVF33 in _rtkReorderProjectionsImageFilterPython:
_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_swigregister(rtkReorderProjectionsImageFilterICVF33ICVF33)
rtkReorderProjectionsImageFilterICVF33ICVF33___New_orig__ = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33___New_orig__
rtkReorderProjectionsImageFilterICVF33ICVF33_cast = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF33ICVF33_cast


def rtkReorderProjectionsImageFilterICVF43ICVF43_New():
    return rtkReorderProjectionsImageFilterICVF43ICVF43.New()

class rtkReorderProjectionsImageFilterICVF43ICVF43(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43):
    r"""Proxy of C++ rtkReorderProjectionsImageFilterICVF43ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PermutationType_NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_PermutationType_NONE
    
    PermutationType_SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_PermutationType_SORT
    
    PermutationType_SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_PermutationType_SHUFFLE
    
    __New_orig__ = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_Clone)
    GetModifiableOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_GetModifiableOutputGeometry)
    GetOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_GetOutputGeometry)
    SetInputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_SetInputGeometry)
    GetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_GetPermutation)
    SetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_SetPermutation)
    SetInputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_SetInputSignal)
    GetOutputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_GetOutputSignal)
    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterICVF43ICVF43
    cast = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterICVF43ICVF43

        Create a new object of the class rtkReorderProjectionsImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkReorderProjectionsImageFilterICVF43ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkReorderProjectionsImageFilterICVF43ICVF43 in _rtkReorderProjectionsImageFilterPython:
_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_swigregister(rtkReorderProjectionsImageFilterICVF43ICVF43)
rtkReorderProjectionsImageFilterICVF43ICVF43___New_orig__ = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43___New_orig__
rtkReorderProjectionsImageFilterICVF43ICVF43_cast = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterICVF43ICVF43_cast


def rtkReorderProjectionsImageFilterID3ID3_New():
    return rtkReorderProjectionsImageFilterID3ID3.New()

class rtkReorderProjectionsImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ rtkReorderProjectionsImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PermutationType_NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3_PermutationType_NONE
    
    PermutationType_SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3_PermutationType_SORT
    
    PermutationType_SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3_PermutationType_SHUFFLE
    
    __New_orig__ = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3_Clone)
    GetModifiableOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3_GetModifiableOutputGeometry)
    GetOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3_GetOutputGeometry)
    SetInputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3_SetInputGeometry)
    GetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3_GetPermutation)
    SetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3_SetPermutation)
    SetInputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3_SetInputSignal)
    GetOutputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3_GetOutputSignal)
    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterID3ID3
    cast = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterID3ID3

        Create a new object of the class rtkReorderProjectionsImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkReorderProjectionsImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkReorderProjectionsImageFilterID3ID3 in _rtkReorderProjectionsImageFilterPython:
_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3_swigregister(rtkReorderProjectionsImageFilterID3ID3)
rtkReorderProjectionsImageFilterID3ID3___New_orig__ = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3___New_orig__
rtkReorderProjectionsImageFilterID3ID3_cast = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterID3ID3_cast


def rtkReorderProjectionsImageFilterIF3IF3_New():
    return rtkReorderProjectionsImageFilterIF3IF3.New()

class rtkReorderProjectionsImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ rtkReorderProjectionsImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PermutationType_NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_PermutationType_NONE
    
    PermutationType_SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_PermutationType_SORT
    
    PermutationType_SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_PermutationType_SHUFFLE
    
    __New_orig__ = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_Clone)
    GetModifiableOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_GetModifiableOutputGeometry)
    GetOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_GetOutputGeometry)
    SetInputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_SetInputGeometry)
    GetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_GetPermutation)
    SetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_SetPermutation)
    SetInputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_SetInputSignal)
    GetOutputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_GetOutputSignal)
    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIF3IF3
    cast = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIF3IF3

        Create a new object of the class rtkReorderProjectionsImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkReorderProjectionsImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkReorderProjectionsImageFilterIF3IF3 in _rtkReorderProjectionsImageFilterPython:
_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_swigregister(rtkReorderProjectionsImageFilterIF3IF3)
rtkReorderProjectionsImageFilterIF3IF3___New_orig__ = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3___New_orig__
rtkReorderProjectionsImageFilterIF3IF3_cast = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIF3IF3_cast


def rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_New():
    return rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.New()

class rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3):
    r"""Proxy of C++ rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PermutationType_NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_PermutationType_NONE
    
    PermutationType_SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_PermutationType_SORT
    
    PermutationType_SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_PermutationType_SHUFFLE
    
    __New_orig__ = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_Clone)
    GetModifiableOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_GetModifiableOutputGeometry)
    GetOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_GetOutputGeometry)
    SetInputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_SetInputGeometry)
    GetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_GetPermutation)
    SetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_SetPermutation)
    SetInputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_SetInputSignal)
    GetOutputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_GetOutputSignal)
    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3
    cast = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3

        Create a new object of the class rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3 in _rtkReorderProjectionsImageFilterPython:
_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_swigregister(rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3)
rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3___New_orig__ = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3___New_orig__
rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_cast = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBAUC3IRGBAUC3_cast


def rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_New():
    return rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.New()

class rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3):
    r"""Proxy of C++ rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PermutationType_NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_PermutationType_NONE
    
    PermutationType_SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_PermutationType_SORT
    
    PermutationType_SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_PermutationType_SHUFFLE
    
    __New_orig__ = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_Clone)
    GetModifiableOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_GetModifiableOutputGeometry)
    GetOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_GetOutputGeometry)
    SetInputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_SetInputGeometry)
    GetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_GetPermutation)
    SetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_SetPermutation)
    SetInputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_SetInputSignal)
    GetOutputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_GetOutputSignal)
    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3
    cast = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3

        Create a new object of the class rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3 in _rtkReorderProjectionsImageFilterPython:
_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_swigregister(rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3)
rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3___New_orig__ = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3___New_orig__
rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_cast = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIRGBUC3IRGBUC3_cast


def rtkReorderProjectionsImageFilterISS3ISS3_New():
    return rtkReorderProjectionsImageFilterISS3ISS3.New()

class rtkReorderProjectionsImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ rtkReorderProjectionsImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PermutationType_NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_PermutationType_NONE
    
    PermutationType_SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_PermutationType_SORT
    
    PermutationType_SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_PermutationType_SHUFFLE
    
    __New_orig__ = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_Clone)
    GetModifiableOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_GetModifiableOutputGeometry)
    GetOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_GetOutputGeometry)
    SetInputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_SetInputGeometry)
    GetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_GetPermutation)
    SetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_SetPermutation)
    SetInputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_SetInputSignal)
    GetOutputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_GetOutputSignal)
    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterISS3ISS3
    cast = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterISS3ISS3

        Create a new object of the class rtkReorderProjectionsImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkReorderProjectionsImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkReorderProjectionsImageFilterISS3ISS3 in _rtkReorderProjectionsImageFilterPython:
_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_swigregister(rtkReorderProjectionsImageFilterISS3ISS3)
rtkReorderProjectionsImageFilterISS3ISS3___New_orig__ = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3___New_orig__
rtkReorderProjectionsImageFilterISS3ISS3_cast = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterISS3ISS3_cast


def rtkReorderProjectionsImageFilterIUC3IUC3_New():
    return rtkReorderProjectionsImageFilterIUC3IUC3.New()

class rtkReorderProjectionsImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ rtkReorderProjectionsImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PermutationType_NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_PermutationType_NONE
    
    PermutationType_SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_PermutationType_SORT
    
    PermutationType_SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_PermutationType_SHUFFLE
    
    __New_orig__ = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_Clone)
    GetModifiableOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_GetModifiableOutputGeometry)
    GetOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_GetOutputGeometry)
    SetInputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_SetInputGeometry)
    GetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_GetPermutation)
    SetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_SetPermutation)
    SetInputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_SetInputSignal)
    GetOutputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_GetOutputSignal)
    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIUC3IUC3
    cast = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIUC3IUC3

        Create a new object of the class rtkReorderProjectionsImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkReorderProjectionsImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkReorderProjectionsImageFilterIUC3IUC3 in _rtkReorderProjectionsImageFilterPython:
_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_swigregister(rtkReorderProjectionsImageFilterIUC3IUC3)
rtkReorderProjectionsImageFilterIUC3IUC3___New_orig__ = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3___New_orig__
rtkReorderProjectionsImageFilterIUC3IUC3_cast = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUC3IUC3_cast


def rtkReorderProjectionsImageFilterIUS3IUS3_New():
    return rtkReorderProjectionsImageFilterIUS3IUS3.New()

class rtkReorderProjectionsImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ rtkReorderProjectionsImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PermutationType_NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_PermutationType_NONE
    
    PermutationType_SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_PermutationType_SORT
    
    PermutationType_SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_PermutationType_SHUFFLE
    
    __New_orig__ = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_Clone)
    GetModifiableOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_GetModifiableOutputGeometry)
    GetOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_GetOutputGeometry)
    SetInputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_SetInputGeometry)
    GetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_GetPermutation)
    SetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_SetPermutation)
    SetInputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_SetInputSignal)
    GetOutputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_GetOutputSignal)
    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIUS3IUS3
    cast = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIUS3IUS3

        Create a new object of the class rtkReorderProjectionsImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkReorderProjectionsImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkReorderProjectionsImageFilterIUS3IUS3 in _rtkReorderProjectionsImageFilterPython:
_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_swigregister(rtkReorderProjectionsImageFilterIUS3IUS3)
rtkReorderProjectionsImageFilterIUS3IUS3___New_orig__ = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3___New_orig__
rtkReorderProjectionsImageFilterIUS3IUS3_cast = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIUS3IUS3_cast


def rtkReorderProjectionsImageFilterIVF23IVF23_New():
    return rtkReorderProjectionsImageFilterIVF23IVF23.New()

class rtkReorderProjectionsImageFilterIVF23IVF23(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23):
    r"""Proxy of C++ rtkReorderProjectionsImageFilterIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PermutationType_NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_PermutationType_NONE
    
    PermutationType_SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_PermutationType_SORT
    
    PermutationType_SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_PermutationType_SHUFFLE
    
    __New_orig__ = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23___New_orig__)
    Clone = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_Clone)
    GetModifiableOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_GetModifiableOutputGeometry)
    GetOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_GetOutputGeometry)
    SetInputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_SetInputGeometry)
    GetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_GetPermutation)
    SetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_SetPermutation)
    SetInputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_SetInputSignal)
    GetOutputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_GetOutputSignal)
    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIVF23IVF23
    cast = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIVF23IVF23

        Create a new object of the class rtkReorderProjectionsImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkReorderProjectionsImageFilterIVF23IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkReorderProjectionsImageFilterIVF23IVF23 in _rtkReorderProjectionsImageFilterPython:
_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_swigregister(rtkReorderProjectionsImageFilterIVF23IVF23)
rtkReorderProjectionsImageFilterIVF23IVF23___New_orig__ = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23___New_orig__
rtkReorderProjectionsImageFilterIVF23IVF23_cast = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF23IVF23_cast


def rtkReorderProjectionsImageFilterIVF33IVF33_New():
    return rtkReorderProjectionsImageFilterIVF33IVF33.New()

class rtkReorderProjectionsImageFilterIVF33IVF33(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33):
    r"""Proxy of C++ rtkReorderProjectionsImageFilterIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PermutationType_NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_PermutationType_NONE
    
    PermutationType_SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_PermutationType_SORT
    
    PermutationType_SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_PermutationType_SHUFFLE
    
    __New_orig__ = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33___New_orig__)
    Clone = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_Clone)
    GetModifiableOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_GetModifiableOutputGeometry)
    GetOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_GetOutputGeometry)
    SetInputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_SetInputGeometry)
    GetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_GetPermutation)
    SetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_SetPermutation)
    SetInputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_SetInputSignal)
    GetOutputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_GetOutputSignal)
    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIVF33IVF33
    cast = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIVF33IVF33

        Create a new object of the class rtkReorderProjectionsImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkReorderProjectionsImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkReorderProjectionsImageFilterIVF33IVF33 in _rtkReorderProjectionsImageFilterPython:
_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_swigregister(rtkReorderProjectionsImageFilterIVF33IVF33)
rtkReorderProjectionsImageFilterIVF33IVF33___New_orig__ = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33___New_orig__
rtkReorderProjectionsImageFilterIVF33IVF33_cast = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF33IVF33_cast


def rtkReorderProjectionsImageFilterIVF43IVF43_New():
    return rtkReorderProjectionsImageFilterIVF43IVF43.New()

class rtkReorderProjectionsImageFilterIVF43IVF43(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43):
    r"""Proxy of C++ rtkReorderProjectionsImageFilterIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PermutationType_NONE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_PermutationType_NONE
    
    PermutationType_SORT = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_PermutationType_SORT
    
    PermutationType_SHUFFLE = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_PermutationType_SHUFFLE
    
    __New_orig__ = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43___New_orig__)
    Clone = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_Clone)
    GetModifiableOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_GetModifiableOutputGeometry)
    GetOutputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_GetOutputGeometry)
    SetInputGeometry = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_SetInputGeometry)
    GetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_GetPermutation)
    SetPermutation = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_SetPermutation)
    SetInputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_SetInputSignal)
    GetOutputSignal = _swig_new_instance_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_GetOutputSignal)
    __swig_destroy__ = _rtkReorderProjectionsImageFilterPython.delete_rtkReorderProjectionsImageFilterIVF43IVF43
    cast = _swig_new_static_method(_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_cast)

    def New(*args, **kargs):
        """New() -> rtkReorderProjectionsImageFilterIVF43IVF43

        Create a new object of the class rtkReorderProjectionsImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          rtkReorderProjectionsImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = rtkReorderProjectionsImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = rtkReorderProjectionsImageFilterIVF43IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register rtkReorderProjectionsImageFilterIVF43IVF43 in _rtkReorderProjectionsImageFilterPython:
_rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_swigregister(rtkReorderProjectionsImageFilterIVF43IVF43)
rtkReorderProjectionsImageFilterIVF43IVF43___New_orig__ = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43___New_orig__
rtkReorderProjectionsImageFilterIVF43IVF43_cast = _rtkReorderProjectionsImageFilterPython.rtkReorderProjectionsImageFilterIVF43IVF43_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def reorder_projections_image_filter(*args, **kwargs):
    """Procedural interface for ReorderProjectionsImageFilter"""
    import itk
    instance = itk.ReorderProjectionsImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def reorder_projections_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ReorderProjectionsImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ReorderProjectionsImageFilter.values()[0]
    else:
        filter_object = itk.ReorderProjectionsImageFilter

    reorder_projections_image_filter.__doc__ = filter_object.__doc__
    reorder_projections_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    reorder_projections_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ReorderProjectionsImageFilter, itkTemplate.itkTemplate):
        reorder_projections_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        reorder_projections_image_filter.__doc__ += "\n"
        reorder_projections_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        reorder_projections_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



