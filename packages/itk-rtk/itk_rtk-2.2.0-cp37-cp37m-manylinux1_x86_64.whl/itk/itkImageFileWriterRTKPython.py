# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _RTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageFileWriterRTKPython
else:
    import _itkImageFileWriterRTKPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageFileWriterRTKPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageFileWriterRTKPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageRTKPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkImageBaseRTKPython
import itk.itkPointRTKPython
import itk.itkImageRegionRTKPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkSymmetricSecondRankTensorPython
import itk.ITKIOImageBaseBasePython

def itkImageFileWriterID1_New():
    return itkImageFileWriterID1.New()

class itkImageFileWriterID1(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterID1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1___New_orig__)
    Clone = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_Clone)
    SetInput = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_SetInput)
    GetInput = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_GetInput)
    SetFileName = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_SetFileName)
    GetFileName = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_GetImageIO)
    Write = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_Write)
    SetIORegion = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_SetIORegion)
    GetIORegion = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_GetIORegion)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_GetNumberOfStreamDivisions)
    SetUseCompression = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_UseCompressionOff)
    SetCompressionLevel = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_SetCompressionLevel)
    GetCompressionLevel = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_GetCompressionLevel)
    SetUseInputMetaDataDictionary = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_SetUseInputMetaDataDictionary)
    GetUseInputMetaDataDictionary = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_GetUseInputMetaDataDictionary)
    UseInputMetaDataDictionaryOn = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_UseInputMetaDataDictionaryOn)
    UseInputMetaDataDictionaryOff = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_UseInputMetaDataDictionaryOff)
    __swig_destroy__ = _itkImageFileWriterRTKPython.delete_itkImageFileWriterID1
    cast = _swig_new_static_method(_itkImageFileWriterRTKPython.itkImageFileWriterID1_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterID1

        Create a new object of the class itkImageFileWriterID1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterID1.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterID1.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterID1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterID1 in _itkImageFileWriterRTKPython:
_itkImageFileWriterRTKPython.itkImageFileWriterID1_swigregister(itkImageFileWriterID1)
itkImageFileWriterID1___New_orig__ = _itkImageFileWriterRTKPython.itkImageFileWriterID1___New_orig__
itkImageFileWriterID1_cast = _itkImageFileWriterRTKPython.itkImageFileWriterID1_cast


def itkImageFileWriterIF1_New():
    return itkImageFileWriterIF1.New()

class itkImageFileWriterIF1(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIF1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1___New_orig__)
    Clone = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_Clone)
    SetInput = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetInput)
    GetInput = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetInput)
    SetFileName = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetFileName)
    GetFileName = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetImageIO)
    Write = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_Write)
    SetIORegion = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetIORegion)
    GetIORegion = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetIORegion)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetNumberOfStreamDivisions)
    SetUseCompression = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_UseCompressionOff)
    SetCompressionLevel = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetCompressionLevel)
    GetCompressionLevel = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetCompressionLevel)
    SetUseInputMetaDataDictionary = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_SetUseInputMetaDataDictionary)
    GetUseInputMetaDataDictionary = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_GetUseInputMetaDataDictionary)
    UseInputMetaDataDictionaryOn = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_UseInputMetaDataDictionaryOn)
    UseInputMetaDataDictionaryOff = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_UseInputMetaDataDictionaryOff)
    __swig_destroy__ = _itkImageFileWriterRTKPython.delete_itkImageFileWriterIF1
    cast = _swig_new_static_method(_itkImageFileWriterRTKPython.itkImageFileWriterIF1_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIF1

        Create a new object of the class itkImageFileWriterIF1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIF1.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIF1.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIF1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIF1 in _itkImageFileWriterRTKPython:
_itkImageFileWriterRTKPython.itkImageFileWriterIF1_swigregister(itkImageFileWriterIF1)
itkImageFileWriterIF1___New_orig__ = _itkImageFileWriterRTKPython.itkImageFileWriterIF1___New_orig__
itkImageFileWriterIF1_cast = _itkImageFileWriterRTKPython.itkImageFileWriterIF1_cast


def itkImageFileWriterIUC1_New():
    return itkImageFileWriterIUC1.New()

class itkImageFileWriterIUC1(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIUC1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1___New_orig__)
    Clone = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_Clone)
    SetInput = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetInput)
    GetInput = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetInput)
    SetFileName = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetFileName)
    GetFileName = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetImageIO)
    Write = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_Write)
    SetIORegion = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetIORegion)
    GetIORegion = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetIORegion)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetNumberOfStreamDivisions)
    SetUseCompression = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_UseCompressionOff)
    SetCompressionLevel = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetCompressionLevel)
    GetCompressionLevel = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetCompressionLevel)
    SetUseInputMetaDataDictionary = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_SetUseInputMetaDataDictionary)
    GetUseInputMetaDataDictionary = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_GetUseInputMetaDataDictionary)
    UseInputMetaDataDictionaryOn = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_UseInputMetaDataDictionaryOn)
    UseInputMetaDataDictionaryOff = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_UseInputMetaDataDictionaryOff)
    __swig_destroy__ = _itkImageFileWriterRTKPython.delete_itkImageFileWriterIUC1
    cast = _swig_new_static_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIUC1

        Create a new object of the class itkImageFileWriterIUC1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIUC1.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIUC1.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIUC1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIUC1 in _itkImageFileWriterRTKPython:
_itkImageFileWriterRTKPython.itkImageFileWriterIUC1_swigregister(itkImageFileWriterIUC1)
itkImageFileWriterIUC1___New_orig__ = _itkImageFileWriterRTKPython.itkImageFileWriterIUC1___New_orig__
itkImageFileWriterIUC1_cast = _itkImageFileWriterRTKPython.itkImageFileWriterIUC1_cast


def itkImageFileWriterIUS1_New():
    return itkImageFileWriterIUS1.New()

class itkImageFileWriterIUS1(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIUS1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1___New_orig__)
    Clone = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_Clone)
    SetInput = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetInput)
    GetInput = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetInput)
    SetFileName = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetFileName)
    GetFileName = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetImageIO)
    Write = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_Write)
    SetIORegion = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetIORegion)
    GetIORegion = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetIORegion)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetNumberOfStreamDivisions)
    SetUseCompression = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_UseCompressionOff)
    SetCompressionLevel = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetCompressionLevel)
    GetCompressionLevel = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetCompressionLevel)
    SetUseInputMetaDataDictionary = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_SetUseInputMetaDataDictionary)
    GetUseInputMetaDataDictionary = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_GetUseInputMetaDataDictionary)
    UseInputMetaDataDictionaryOn = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_UseInputMetaDataDictionaryOn)
    UseInputMetaDataDictionaryOff = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_UseInputMetaDataDictionaryOff)
    __swig_destroy__ = _itkImageFileWriterRTKPython.delete_itkImageFileWriterIUS1
    cast = _swig_new_static_method(_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIUS1

        Create a new object of the class itkImageFileWriterIUS1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIUS1.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIUS1.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIUS1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIUS1 in _itkImageFileWriterRTKPython:
_itkImageFileWriterRTKPython.itkImageFileWriterIUS1_swigregister(itkImageFileWriterIUS1)
itkImageFileWriterIUS1___New_orig__ = _itkImageFileWriterRTKPython.itkImageFileWriterIUS1___New_orig__
itkImageFileWriterIUS1_cast = _itkImageFileWriterRTKPython.itkImageFileWriterIUS1_cast


def itkImageFileWriterIVF52_New():
    return itkImageFileWriterIVF52.New()

class itkImageFileWriterIVF52(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52___New_orig__)
    Clone = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_Clone)
    SetInput = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetInput)
    GetInput = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetInput)
    SetFileName = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetFileName)
    GetFileName = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetImageIO)
    Write = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_Write)
    SetIORegion = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetIORegion)
    GetIORegion = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetIORegion)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetNumberOfStreamDivisions)
    SetUseCompression = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_UseCompressionOff)
    SetCompressionLevel = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetCompressionLevel)
    GetCompressionLevel = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetCompressionLevel)
    SetUseInputMetaDataDictionary = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_SetUseInputMetaDataDictionary)
    GetUseInputMetaDataDictionary = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_GetUseInputMetaDataDictionary)
    UseInputMetaDataDictionaryOn = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_UseInputMetaDataDictionaryOn)
    UseInputMetaDataDictionaryOff = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_UseInputMetaDataDictionaryOff)
    __swig_destroy__ = _itkImageFileWriterRTKPython.delete_itkImageFileWriterIVF52
    cast = _swig_new_static_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIVF52

        Create a new object of the class itkImageFileWriterIVF52 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIVF52.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIVF52.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIVF52.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIVF52 in _itkImageFileWriterRTKPython:
_itkImageFileWriterRTKPython.itkImageFileWriterIVF52_swigregister(itkImageFileWriterIVF52)
itkImageFileWriterIVF52___New_orig__ = _itkImageFileWriterRTKPython.itkImageFileWriterIVF52___New_orig__
itkImageFileWriterIVF52_cast = _itkImageFileWriterRTKPython.itkImageFileWriterIVF52_cast


def itkImageFileWriterIVF53_New():
    return itkImageFileWriterIVF53.New()

class itkImageFileWriterIVF53(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_Clone)
    SetInput = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetInput)
    SetFileName = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetFileName)
    GetFileName = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetImageIO)
    Write = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_Write)
    SetIORegion = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetIORegion)
    GetIORegion = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetIORegion)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetNumberOfStreamDivisions)
    SetUseCompression = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_UseCompressionOff)
    SetCompressionLevel = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetCompressionLevel)
    GetCompressionLevel = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetCompressionLevel)
    SetUseInputMetaDataDictionary = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_SetUseInputMetaDataDictionary)
    GetUseInputMetaDataDictionary = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_GetUseInputMetaDataDictionary)
    UseInputMetaDataDictionaryOn = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_UseInputMetaDataDictionaryOn)
    UseInputMetaDataDictionaryOff = _swig_new_instance_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_UseInputMetaDataDictionaryOff)
    __swig_destroy__ = _itkImageFileWriterRTKPython.delete_itkImageFileWriterIVF53
    cast = _swig_new_static_method(_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIVF53

        Create a new object of the class itkImageFileWriterIVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIVF53.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIVF53 in _itkImageFileWriterRTKPython:
_itkImageFileWriterRTKPython.itkImageFileWriterIVF53_swigregister(itkImageFileWriterIVF53)
itkImageFileWriterIVF53___New_orig__ = _itkImageFileWriterRTKPython.itkImageFileWriterIVF53___New_orig__
itkImageFileWriterIVF53_cast = _itkImageFileWriterRTKPython.itkImageFileWriterIVF53_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_file_writer(*args, **kwargs):
    """Procedural interface for ImageFileWriter"""
    import itk
    instance = itk.ImageFileWriter.New(*args, **kwargs)
    return instance.__internal_call__()

def image_file_writer_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ImageFileWriter, itkTemplate.itkTemplate):
        filter_object = itk.ImageFileWriter.values()[0]
    else:
        filter_object = itk.ImageFileWriter

    image_file_writer.__doc__ = filter_object.__doc__
    image_file_writer.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_file_writer.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ImageFileWriter, itkTemplate.itkTemplate):
        image_file_writer.__doc__ += itkHelpers.filter_args(filter_object)[0]
        image_file_writer.__doc__ += "\n"
        image_file_writer.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        image_file_writer.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



