# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _RTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageRegionRTKPython
else:
    import _itkImageRegionRTKPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageRegionRTKPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageRegionRTKPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
class vectoritkImageRegion1(object):
    r"""Proxy of C++ std::vector< itkImageRegion1 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1___nonzero__)
    __bool__ = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1___bool__)
    __len__ = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1___len__)
    __getslice__ = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1___getslice__)
    __setslice__ = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1___setslice__)
    __delslice__ = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1___delslice__)
    __delitem__ = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1___delitem__)
    __getitem__ = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1___getitem__)
    __setitem__ = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1___setitem__)
    pop = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_pop)
    append = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_append)
    empty = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_empty)
    size = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_size)
    swap = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_swap)
    begin = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_begin)
    end = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_end)
    rbegin = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_rbegin)
    rend = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_rend)
    clear = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_clear)
    get_allocator = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_get_allocator)
    pop_back = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_pop_back)
    erase = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_erase)

    def __init__(self, *args):
        r"""
        __init__(vectoritkImageRegion1 self) -> vectoritkImageRegion1
        __init__(vectoritkImageRegion1 self, vectoritkImageRegion1 other) -> vectoritkImageRegion1
        __init__(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::size_type size) -> vectoritkImageRegion1
        __init__(vectoritkImageRegion1 self, std::vector< itkImageRegion1 >::size_type size, itkImageRegion1 value) -> vectoritkImageRegion1
        """
        _itkImageRegionRTKPython.vectoritkImageRegion1_swiginit(self, _itkImageRegionRTKPython.new_vectoritkImageRegion1(*args))
    push_back = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_push_back)
    front = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_front)
    back = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_back)
    assign = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_assign)
    resize = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_resize)
    insert = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_insert)
    reserve = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_reserve)
    capacity = _swig_new_instance_method(_itkImageRegionRTKPython.vectoritkImageRegion1_capacity)
    __swig_destroy__ = _itkImageRegionRTKPython.delete_vectoritkImageRegion1

# Register vectoritkImageRegion1 in _itkImageRegionRTKPython:
_itkImageRegionRTKPython.vectoritkImageRegion1_swigregister(vectoritkImageRegion1)

class itkImageRegion1(itk.ITKCommonBasePython.itkRegion):
    r"""Proxy of C++ itkImageRegion1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetImageDimension = _swig_new_static_method(_itkImageRegionRTKPython.itkImageRegion1_GetImageDimension)
    __swig_destroy__ = _itkImageRegionRTKPython.delete_itkImageRegion1

    def __init__(self, *args):
        r"""
        __init__(itkImageRegion1 self) -> itkImageRegion1
        __init__(itkImageRegion1 self, itkImageRegion1 arg0) -> itkImageRegion1
        __init__(itkImageRegion1 self, itkIndex1 index, itkSize1 size) -> itkImageRegion1
        __init__(itkImageRegion1 self, itkSize1 size) -> itkImageRegion1
        """
        _itkImageRegionRTKPython.itkImageRegion1_swiginit(self, _itkImageRegionRTKPython.new_itkImageRegion1(*args))
    __GetModifiableIndex_orig__ = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1___GetModifiableIndex_orig__)
    __GetModifiableSize_orig__ = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1___GetModifiableSize_orig__)
    SetSize = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1_SetSize)
    __GetSize_orig__ = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1___GetSize_orig__)
    SetIndex = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1_SetIndex)
    __GetIndex_orig__ = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1___GetIndex_orig__)
    GetUpperIndex = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1_GetUpperIndex)
    SetUpperIndex = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1_SetUpperIndex)
    ComputeOffsetTable = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1_ComputeOffsetTable)
    __eq__ = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1___eq__)
    __ne__ = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1___ne__)
    IsInside = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1_IsInside)
    GetNumberOfPixels = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1_GetNumberOfPixels)
    PadByRadius = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1_PadByRadius)
    ShrinkByRadius = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1_ShrinkByRadius)
    Crop = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1_Crop)
    Slice = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1_Slice)

    def GetIndex(self):
        var = self.__GetIndex_orig__()
        var_copy = type(var)(var)
        return var_copy


    def GetModifiableIndex(self):
        var = self.__GetModifiableIndex_orig__()
        var_copy = type(var)(var)
        return var_copy


    def GetSize(self):
        var = self.__GetSize_orig__()
        var_copy = type(var)(var)
        return var_copy


    def GetModifiableSize(self):
        var = self.__GetModifiableSize_orig__()
        var_copy = type(var)(var)
        return var_copy

    __repr__ = _swig_new_instance_method(_itkImageRegionRTKPython.itkImageRegion1___repr__)

# Register itkImageRegion1 in _itkImageRegionRTKPython:
_itkImageRegionRTKPython.itkImageRegion1_swigregister(itkImageRegion1)
itkImageRegion1_GetImageDimension = _itkImageRegionRTKPython.itkImageRegion1_GetImageDimension



