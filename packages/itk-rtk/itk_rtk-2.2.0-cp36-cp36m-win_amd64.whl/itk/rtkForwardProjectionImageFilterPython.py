# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _RTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rtkForwardProjectionImageFilterPython
else:
    import _rtkForwardProjectionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _rtkForwardProjectionImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _rtkForwardProjectionImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkInPlaceImageFilterAPython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBAPixelPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterBPython
import itk.itkInPlaceImageFilterRTKPython
import itk.itkImageToImageFilterRTKPython
import itk.itkImageSourceRTKPython
import itk.itkImageRTKPython
import itk.itkImageBaseRTKPython
import itk.itkPointRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkImageRegionRTKPython
import itk.rtkThreeDCircularProjectionGeometryPython
import itk.rtkProjectionGeometryPython
class rtkForwardProjectionImageFilterID3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ rtkForwardProjectionImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetGeometry = _swig_new_instance_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterID3ID3_GetGeometry)
    SetGeometry = _swig_new_instance_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterID3ID3_SetGeometry)
    __swig_destroy__ = _rtkForwardProjectionImageFilterPython.delete_rtkForwardProjectionImageFilterID3ID3
    cast = _swig_new_static_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterID3ID3_cast)

# Register rtkForwardProjectionImageFilterID3ID3 in _rtkForwardProjectionImageFilterPython:
_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterID3ID3_swigregister(rtkForwardProjectionImageFilterID3ID3)
rtkForwardProjectionImageFilterID3ID3_cast = _rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterID3ID3_cast

class rtkForwardProjectionImageFilterIF3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ rtkForwardProjectionImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetGeometry = _swig_new_instance_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIF3IF3_GetGeometry)
    SetGeometry = _swig_new_instance_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIF3IF3_SetGeometry)
    __swig_destroy__ = _rtkForwardProjectionImageFilterPython.delete_rtkForwardProjectionImageFilterIF3IF3
    cast = _swig_new_static_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIF3IF3_cast)

# Register rtkForwardProjectionImageFilterIF3IF3 in _rtkForwardProjectionImageFilterPython:
_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIF3IF3_swigregister(rtkForwardProjectionImageFilterIF3IF3)
rtkForwardProjectionImageFilterIF3IF3_cast = _rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIF3IF3_cast

class rtkForwardProjectionImageFilterIVF23IVF23(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF23IVF23):
    r"""Proxy of C++ rtkForwardProjectionImageFilterIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetGeometry = _swig_new_instance_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF23IVF23_GetGeometry)
    SetGeometry = _swig_new_instance_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF23IVF23_SetGeometry)
    __swig_destroy__ = _rtkForwardProjectionImageFilterPython.delete_rtkForwardProjectionImageFilterIVF23IVF23
    cast = _swig_new_static_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF23IVF23_cast)

# Register rtkForwardProjectionImageFilterIVF23IVF23 in _rtkForwardProjectionImageFilterPython:
_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF23IVF23_swigregister(rtkForwardProjectionImageFilterIVF23IVF23)
rtkForwardProjectionImageFilterIVF23IVF23_cast = _rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF23IVF23_cast

class rtkForwardProjectionImageFilterIVF33IVF33(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33):
    r"""Proxy of C++ rtkForwardProjectionImageFilterIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetGeometry = _swig_new_instance_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF33IVF33_GetGeometry)
    SetGeometry = _swig_new_instance_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF33IVF33_SetGeometry)
    __swig_destroy__ = _rtkForwardProjectionImageFilterPython.delete_rtkForwardProjectionImageFilterIVF33IVF33
    cast = _swig_new_static_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF33IVF33_cast)

# Register rtkForwardProjectionImageFilterIVF33IVF33 in _rtkForwardProjectionImageFilterPython:
_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF33IVF33_swigregister(rtkForwardProjectionImageFilterIVF33IVF33)
rtkForwardProjectionImageFilterIVF33IVF33_cast = _rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF33IVF33_cast

class rtkForwardProjectionImageFilterIVF43IVF43(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF43IVF43):
    r"""Proxy of C++ rtkForwardProjectionImageFilterIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetGeometry = _swig_new_instance_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF43IVF43_GetGeometry)
    SetGeometry = _swig_new_instance_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF43IVF43_SetGeometry)
    __swig_destroy__ = _rtkForwardProjectionImageFilterPython.delete_rtkForwardProjectionImageFilterIVF43IVF43
    cast = _swig_new_static_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF43IVF43_cast)

# Register rtkForwardProjectionImageFilterIVF43IVF43 in _rtkForwardProjectionImageFilterPython:
_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF43IVF43_swigregister(rtkForwardProjectionImageFilterIVF43IVF43)
rtkForwardProjectionImageFilterIVF43IVF43_cast = _rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF43IVF43_cast

class rtkForwardProjectionImageFilterIVF53IVF53(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterIVF53IVF53):
    r"""Proxy of C++ rtkForwardProjectionImageFilterIVF53IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetGeometry = _swig_new_instance_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF53IVF53_GetGeometry)
    SetGeometry = _swig_new_instance_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF53IVF53_SetGeometry)
    __swig_destroy__ = _rtkForwardProjectionImageFilterPython.delete_rtkForwardProjectionImageFilterIVF53IVF53
    cast = _swig_new_static_method(_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF53IVF53_cast)

# Register rtkForwardProjectionImageFilterIVF53IVF53 in _rtkForwardProjectionImageFilterPython:
_rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF53IVF53_swigregister(rtkForwardProjectionImageFilterIVF53IVF53)
rtkForwardProjectionImageFilterIVF53IVF53_cast = _rtkForwardProjectionImageFilterPython.rtkForwardProjectionImageFilterIVF53IVF53_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def forward_projection_image_filter(*args, **kwargs):
    """Procedural interface for ForwardProjectionImageFilter"""
    import itk
    instance = itk.ForwardProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def forward_projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ForwardProjectionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ForwardProjectionImageFilter.values()[0]
    else:
        filter_object = itk.ForwardProjectionImageFilter

    forward_projection_image_filter.__doc__ = filter_object.__doc__
    forward_projection_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    forward_projection_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ForwardProjectionImageFilter, itkTemplate.itkTemplate):
        forward_projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        forward_projection_image_filter.__doc__ += "\n"
        forward_projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        forward_projection_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



