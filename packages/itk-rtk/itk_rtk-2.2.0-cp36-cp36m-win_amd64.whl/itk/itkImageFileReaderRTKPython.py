# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _RTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageFileReaderRTKPython
else:
    import _itkImageFileReaderRTKPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageFileReaderRTKPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageFileReaderRTKPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageSourceRTKPython
import itk.itkImageSourceCommonPython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBAPixelPython
import itk.itkImageRTKPython
import itk.itkImageBaseRTKPython
import itk.itkPointRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkImageRegionRTKPython
import itk.ITKIOImageBaseBasePython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython

def itkImageFileReaderID1_New():
    return itkImageFileReaderID1.New()

class itkImageFileReaderID1(itk.itkImageSourceRTKPython.itkImageSourceID1):
    r"""Proxy of C++ itkImageFileReaderID1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageFileReaderRTKPython.itkImageFileReaderID1___New_orig__)
    Clone = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderID1_Clone)
    SetFileNameInput = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderID1_SetFileNameInput)
    SetFileName = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderID1_SetFileName)
    GetFileNameInput = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderID1_GetFileNameInput)
    GetFileName = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderID1_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderID1_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderID1_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderID1_GetImageIO)
    SetUseStreaming = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderID1_SetUseStreaming)
    GetUseStreaming = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderID1_GetUseStreaming)
    UseStreamingOn = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderID1_UseStreamingOn)
    UseStreamingOff = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderID1_UseStreamingOff)
    __swig_destroy__ = _itkImageFileReaderRTKPython.delete_itkImageFileReaderID1
    cast = _swig_new_static_method(_itkImageFileReaderRTKPython.itkImageFileReaderID1_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderID1

        Create a new object of the class itkImageFileReaderID1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderID1.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderID1.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderID1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderID1 in _itkImageFileReaderRTKPython:
_itkImageFileReaderRTKPython.itkImageFileReaderID1_swigregister(itkImageFileReaderID1)
itkImageFileReaderID1___New_orig__ = _itkImageFileReaderRTKPython.itkImageFileReaderID1___New_orig__
itkImageFileReaderID1_cast = _itkImageFileReaderRTKPython.itkImageFileReaderID1_cast


def itkImageFileReaderIF1_New():
    return itkImageFileReaderIF1.New()

class itkImageFileReaderIF1(itk.itkImageSourceRTKPython.itkImageSourceIF1):
    r"""Proxy of C++ itkImageFileReaderIF1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageFileReaderRTKPython.itkImageFileReaderIF1___New_orig__)
    Clone = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIF1_Clone)
    SetFileNameInput = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIF1_SetFileNameInput)
    SetFileName = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIF1_SetFileName)
    GetFileNameInput = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIF1_GetFileNameInput)
    GetFileName = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIF1_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIF1_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIF1_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIF1_GetImageIO)
    SetUseStreaming = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIF1_SetUseStreaming)
    GetUseStreaming = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIF1_GetUseStreaming)
    UseStreamingOn = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIF1_UseStreamingOn)
    UseStreamingOff = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIF1_UseStreamingOff)
    __swig_destroy__ = _itkImageFileReaderRTKPython.delete_itkImageFileReaderIF1
    cast = _swig_new_static_method(_itkImageFileReaderRTKPython.itkImageFileReaderIF1_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIF1

        Create a new object of the class itkImageFileReaderIF1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIF1.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIF1.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIF1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIF1 in _itkImageFileReaderRTKPython:
_itkImageFileReaderRTKPython.itkImageFileReaderIF1_swigregister(itkImageFileReaderIF1)
itkImageFileReaderIF1___New_orig__ = _itkImageFileReaderRTKPython.itkImageFileReaderIF1___New_orig__
itkImageFileReaderIF1_cast = _itkImageFileReaderRTKPython.itkImageFileReaderIF1_cast


def itkImageFileReaderIUC1_New():
    return itkImageFileReaderIUC1.New()

class itkImageFileReaderIUC1(itk.itkImageSourceRTKPython.itkImageSourceIUC1):
    r"""Proxy of C++ itkImageFileReaderIUC1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUC1___New_orig__)
    Clone = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUC1_Clone)
    SetFileNameInput = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUC1_SetFileNameInput)
    SetFileName = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUC1_SetFileName)
    GetFileNameInput = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUC1_GetFileNameInput)
    GetFileName = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUC1_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUC1_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUC1_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUC1_GetImageIO)
    SetUseStreaming = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUC1_SetUseStreaming)
    GetUseStreaming = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUC1_GetUseStreaming)
    UseStreamingOn = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUC1_UseStreamingOn)
    UseStreamingOff = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUC1_UseStreamingOff)
    __swig_destroy__ = _itkImageFileReaderRTKPython.delete_itkImageFileReaderIUC1
    cast = _swig_new_static_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUC1_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIUC1

        Create a new object of the class itkImageFileReaderIUC1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIUC1.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIUC1.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIUC1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIUC1 in _itkImageFileReaderRTKPython:
_itkImageFileReaderRTKPython.itkImageFileReaderIUC1_swigregister(itkImageFileReaderIUC1)
itkImageFileReaderIUC1___New_orig__ = _itkImageFileReaderRTKPython.itkImageFileReaderIUC1___New_orig__
itkImageFileReaderIUC1_cast = _itkImageFileReaderRTKPython.itkImageFileReaderIUC1_cast


def itkImageFileReaderIUS1_New():
    return itkImageFileReaderIUS1.New()

class itkImageFileReaderIUS1(itk.itkImageSourceRTKPython.itkImageSourceIUS1):
    r"""Proxy of C++ itkImageFileReaderIUS1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUS1___New_orig__)
    Clone = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUS1_Clone)
    SetFileNameInput = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUS1_SetFileNameInput)
    SetFileName = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUS1_SetFileName)
    GetFileNameInput = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUS1_GetFileNameInput)
    GetFileName = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUS1_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUS1_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUS1_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUS1_GetImageIO)
    SetUseStreaming = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUS1_SetUseStreaming)
    GetUseStreaming = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUS1_GetUseStreaming)
    UseStreamingOn = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUS1_UseStreamingOn)
    UseStreamingOff = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUS1_UseStreamingOff)
    __swig_destroy__ = _itkImageFileReaderRTKPython.delete_itkImageFileReaderIUS1
    cast = _swig_new_static_method(_itkImageFileReaderRTKPython.itkImageFileReaderIUS1_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIUS1

        Create a new object of the class itkImageFileReaderIUS1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIUS1.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIUS1.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIUS1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIUS1 in _itkImageFileReaderRTKPython:
_itkImageFileReaderRTKPython.itkImageFileReaderIUS1_swigregister(itkImageFileReaderIUS1)
itkImageFileReaderIUS1___New_orig__ = _itkImageFileReaderRTKPython.itkImageFileReaderIUS1___New_orig__
itkImageFileReaderIUS1_cast = _itkImageFileReaderRTKPython.itkImageFileReaderIUS1_cast


def itkImageFileReaderIVF52_New():
    return itkImageFileReaderIVF52.New()

class itkImageFileReaderIVF52(itk.itkImageSourceRTKPython.itkImageSourceIVF52):
    r"""Proxy of C++ itkImageFileReaderIVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF52___New_orig__)
    Clone = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF52_Clone)
    SetFileNameInput = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF52_SetFileNameInput)
    SetFileName = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF52_SetFileName)
    GetFileNameInput = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF52_GetFileNameInput)
    GetFileName = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF52_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF52_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF52_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF52_GetImageIO)
    SetUseStreaming = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF52_SetUseStreaming)
    GetUseStreaming = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF52_GetUseStreaming)
    UseStreamingOn = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF52_UseStreamingOn)
    UseStreamingOff = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF52_UseStreamingOff)
    __swig_destroy__ = _itkImageFileReaderRTKPython.delete_itkImageFileReaderIVF52
    cast = _swig_new_static_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF52_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF52

        Create a new object of the class itkImageFileReaderIVF52 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF52.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF52.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF52.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF52 in _itkImageFileReaderRTKPython:
_itkImageFileReaderRTKPython.itkImageFileReaderIVF52_swigregister(itkImageFileReaderIVF52)
itkImageFileReaderIVF52___New_orig__ = _itkImageFileReaderRTKPython.itkImageFileReaderIVF52___New_orig__
itkImageFileReaderIVF52_cast = _itkImageFileReaderRTKPython.itkImageFileReaderIVF52_cast


def itkImageFileReaderIVF53_New():
    return itkImageFileReaderIVF53.New()

class itkImageFileReaderIVF53(itk.itkImageSourceRTKPython.itkImageSourceIVF53):
    r"""Proxy of C++ itkImageFileReaderIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF53_Clone)
    SetFileNameInput = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF53_SetFileNameInput)
    SetFileName = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF53_SetFileName)
    GetFileNameInput = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF53_GetFileNameInput)
    GetFileName = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF53_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF53_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF53_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF53_GetImageIO)
    SetUseStreaming = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF53_SetUseStreaming)
    GetUseStreaming = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF53_GetUseStreaming)
    UseStreamingOn = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF53_UseStreamingOn)
    UseStreamingOff = _swig_new_instance_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF53_UseStreamingOff)
    __swig_destroy__ = _itkImageFileReaderRTKPython.delete_itkImageFileReaderIVF53
    cast = _swig_new_static_method(_itkImageFileReaderRTKPython.itkImageFileReaderIVF53_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF53

        Create a new object of the class itkImageFileReaderIVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF53.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF53 in _itkImageFileReaderRTKPython:
_itkImageFileReaderRTKPython.itkImageFileReaderIVF53_swigregister(itkImageFileReaderIVF53)
itkImageFileReaderIVF53___New_orig__ = _itkImageFileReaderRTKPython.itkImageFileReaderIVF53___New_orig__
itkImageFileReaderIVF53_cast = _itkImageFileReaderRTKPython.itkImageFileReaderIVF53_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_file_reader(*args, **kwargs):
    """Procedural interface for ImageFileReader"""
    import itk
    instance = itk.ImageFileReader.New(*args, **kwargs)
    return instance.__internal_call__()

def image_file_reader_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ImageFileReader, itkTemplate.itkTemplate):
        filter_object = itk.ImageFileReader.values()[0]
    else:
        filter_object = itk.ImageFileReader

    image_file_reader.__doc__ = filter_object.__doc__
    image_file_reader.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_file_reader.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ImageFileReader, itkTemplate.itkTemplate):
        image_file_reader.__doc__ += itkHelpers.filter_args(filter_object)[0]
        image_file_reader.__doc__ += "\n"
        image_file_reader.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        image_file_reader.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



