# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from compiler_gym.service.proto import compiler_gym_service_pb2 as compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2


class CompilerGymServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetVersion = channel.unary_unary(
                '/compiler_gym.CompilerGymService/GetVersion',
                request_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetVersionRequest.SerializeToString,
                response_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetVersionReply.FromString,
                )
        self.StartEpisode = channel.unary_unary(
                '/compiler_gym.CompilerGymService/StartEpisode',
                request_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.StartEpisodeRequest.SerializeToString,
                response_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.StartEpisodeReply.FromString,
                )
        self.TakeAction = channel.unary_unary(
                '/compiler_gym.CompilerGymService/TakeAction',
                request_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.ActionRequest.SerializeToString,
                response_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.ActionReply.FromString,
                )
        self.GetObservation = channel.unary_unary(
                '/compiler_gym.CompilerGymService/GetObservation',
                request_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.ObservationRequest.SerializeToString,
                response_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.Observation.FromString,
                )
        self.GetReward = channel.unary_unary(
                '/compiler_gym.CompilerGymService/GetReward',
                request_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.RewardRequest.SerializeToString,
                response_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.Reward.FromString,
                )
        self.EndEpisode = channel.unary_unary(
                '/compiler_gym.CompilerGymService/EndEpisode',
                request_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.EndEpisodeRequest.SerializeToString,
                response_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.EndEpisodeReply.FromString,
                )
        self.GetSpaces = channel.unary_unary(
                '/compiler_gym.CompilerGymService/GetSpaces',
                request_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetSpacesRequest.SerializeToString,
                response_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetSpacesReply.FromString,
                )
        self.GetBenchmarks = channel.unary_unary(
                '/compiler_gym.CompilerGymService/GetBenchmarks',
                request_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetBenchmarksRequest.SerializeToString,
                response_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetBenchmarksReply.FromString,
                )
        self.AddBenchmark = channel.unary_unary(
                '/compiler_gym.CompilerGymService/AddBenchmark',
                request_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.AddBenchmarkRequest.SerializeToString,
                response_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.AddBenchmarkReply.FromString,
                )


class CompilerGymServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartEpisode(self, request, context):
        """Start a CompilerGym service episode. Must be called after Init().
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TakeAction(self, request, context):
        """Make an optimization decision. The set of valid actions is the last
        ActionSpace returned by a call to Init() or TakeAction().
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetObservation(self, request, context):
        """Request an observation of the current state. StartEpisode() must have been
        called. If the observation is deterministic, this value will not change
        until further TakeAction() calls are made.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReward(self, request, context):
        """Request the reward at the current state. StartEpisode() must have been
        called. If the reward is deterministic, the reward will not change between
        subsequent calls until TakeAction() is called.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndEpisode(self, request, context):
        """End a CompilerGym service episode. Must be called after StartEpisode().
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpaces(self, request, context):
        """Request the supported service spaces. The service responds with an initial
        action space, and a list of available observation and reward spaces.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBenchmarks(self, request, context):
        """Enumerate the list of available benchmarks.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddBenchmark(self, request, context):
        """Register a new benchmark.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CompilerGymServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetVersionRequest.FromString,
                    response_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetVersionReply.SerializeToString,
            ),
            'StartEpisode': grpc.unary_unary_rpc_method_handler(
                    servicer.StartEpisode,
                    request_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.StartEpisodeRequest.FromString,
                    response_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.StartEpisodeReply.SerializeToString,
            ),
            'TakeAction': grpc.unary_unary_rpc_method_handler(
                    servicer.TakeAction,
                    request_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.ActionRequest.FromString,
                    response_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.ActionReply.SerializeToString,
            ),
            'GetObservation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetObservation,
                    request_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.ObservationRequest.FromString,
                    response_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.Observation.SerializeToString,
            ),
            'GetReward': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReward,
                    request_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.RewardRequest.FromString,
                    response_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.Reward.SerializeToString,
            ),
            'EndEpisode': grpc.unary_unary_rpc_method_handler(
                    servicer.EndEpisode,
                    request_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.EndEpisodeRequest.FromString,
                    response_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.EndEpisodeReply.SerializeToString,
            ),
            'GetSpaces': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpaces,
                    request_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetSpacesRequest.FromString,
                    response_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetSpacesReply.SerializeToString,
            ),
            'GetBenchmarks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBenchmarks,
                    request_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetBenchmarksRequest.FromString,
                    response_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetBenchmarksReply.SerializeToString,
            ),
            'AddBenchmark': grpc.unary_unary_rpc_method_handler(
                    servicer.AddBenchmark,
                    request_deserializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.AddBenchmarkRequest.FromString,
                    response_serializer=compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.AddBenchmarkReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'compiler_gym.CompilerGymService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CompilerGymService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/compiler_gym.CompilerGymService/GetVersion',
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetVersionRequest.SerializeToString,
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetVersionReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartEpisode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/compiler_gym.CompilerGymService/StartEpisode',
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.StartEpisodeRequest.SerializeToString,
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.StartEpisodeReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TakeAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/compiler_gym.CompilerGymService/TakeAction',
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.ActionRequest.SerializeToString,
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.ActionReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetObservation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/compiler_gym.CompilerGymService/GetObservation',
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.ObservationRequest.SerializeToString,
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.Observation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/compiler_gym.CompilerGymService/GetReward',
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.RewardRequest.SerializeToString,
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.Reward.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndEpisode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/compiler_gym.CompilerGymService/EndEpisode',
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.EndEpisodeRequest.SerializeToString,
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.EndEpisodeReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSpaces(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/compiler_gym.CompilerGymService/GetSpaces',
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetSpacesRequest.SerializeToString,
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetSpacesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBenchmarks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/compiler_gym.CompilerGymService/GetBenchmarks',
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetBenchmarksRequest.SerializeToString,
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.GetBenchmarksReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddBenchmark(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/compiler_gym.CompilerGymService/AddBenchmark',
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.AddBenchmarkRequest.SerializeToString,
            compiler__gym_dot_service_dot_proto_dot_compiler__gym__service__pb2.AddBenchmarkReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
