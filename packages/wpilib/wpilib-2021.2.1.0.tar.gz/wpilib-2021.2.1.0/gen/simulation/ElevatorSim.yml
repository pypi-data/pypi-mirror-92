---

classes:
  ElevatorSim:
    shared_ptr: true
    typealias:
    - frc::DCMotor
    - template <int S, int I, int O> using LinearSystem = frc::LinearSystem<S, I, O>
    methods:
      ElevatorSim:
        overloads:
          LinearSystem<2, 1, 1>&, DCMotor&, double, units::meter_t, units::meter_t, units::meter_t, std::array<double, 1>&:
            param_override:
              measurementStdDevs:
                default: std::array<double, 1>{0.0}
          DCMotor&, double, units::kilogram_t, units::meter_t, units::meter_t, units::meter_t, std::array<double, 1>&:
            param_override:
              measurementStdDevs:
                default: std::array<double, 1>{0.0}
      HasHitLowerLimit:
      HasHitUpperLimit:
      GetPosition:
      GetVelocity:
      GetCurrentDraw:
      SetInputVoltage:
      UpdateX:
