# -*- coding: utf-8 -*-

"""
    apimaticcalculatorlatest

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Bed(object):

    """Implementation of the 'Bed' model.

    TODO: type model description here.

    Attributes:
        bed_type (string): Bed code BedTypes are given in Appendix.
        count (int): Number of bed

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "bed_type":'bedType',
        "count":'count'
    }

    def __init__(self,
                 bed_type=None,
                 count=None):
        """Constructor for the Bed class"""

        # Initialize members of the class
        self.bed_type = bed_type
        self.count = count


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        bed_type = dictionary.get('bedType')
        count = dictionary.get('count')

        # Return an object of this model
        return cls(bed_type,
                   count)


