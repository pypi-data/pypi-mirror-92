{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":80932864},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.9"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1603129546893,"exec_count":2,"id":"777d11","input":"!jupyter nbconvert --to html_embed --no-input \"Ex12.1 Clapeyron Equation.ipynb\"","kernel":"python3","output":{"0":{"name":"stdout","text":"[NbConvertApp] Converting notebook Ex12.1 Clapeyron Equation.ipynb to html_embed\r\n"},"1":{"name":"stdout","text":"[NbConvertApp] Writing 443889 bytes to Ex12.1 Clapeyron Equation.html\r\n"}},"pos":21,"start":1603129543123,"state":"done","type":"cell"}
{"cell_type":"code","end":1603129630970,"exec_count":4,"id":"c35a15","input":"!jupyter nbconvert --to pdf --no-input \"Ex12.1 Clapeyron Equation.ipynb\"","kernel":"python3","output":{"0":{"name":"stdout","text":"[NbConvertApp] Converting notebook Ex12.1 Clapeyron Equation.ipynb to pdf\r\n"},"1":{"name":"stdout","text":"[NbConvertApp] Support files will be in Ex12.1 Clapeyron Equation_files/\r\n[NbConvertApp] Making directory ./Ex12.1 Clapeyron Equation_files\r\n[NbConvertApp] Making directory ./Ex12.1 Clapeyron Equation_files\r\n[NbConvertApp] Making directory ./Ex12.1 Clapeyron Equation_files\r\n[NbConvertApp] Making directory ./Ex12.1 Clapeyron Equation_files\r\n[NbConvertApp] Writing 26877 bytes to ./notebook.tex\r\n[NbConvertApp] Building PDF\r\n[NbConvertApp] Running xelatex 3 times: ['xelatex', './notebook.tex', '-quiet']\r\n"},"2":{"name":"stdout","text":"[NbConvertApp] Running bibtex 1 time: ['bibtex', './notebook']\r\n"},"3":{"name":"stdout","text":"[NbConvertApp] WARNING | bibtex had problems, most likely because there were no citations\r\n[NbConvertApp] PDF successfully created\r\n[NbConvertApp] Writing 162221 bytes to Ex12.1 Clapeyron Equation.pdf\r\n"}},"pos":23,"start":1603129616028,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":1,"id":"824ecf","input":"from thermoJFM.templates.default import *\n   \nfluid = realfluid.Properties('Water')\n\np[1] = Quantity(100,'kPa')\nx[1] = 0\nstates.fix(1,fluid)\n\np[2] = Quantity(125,'kPa')\nx[2] = 0\nstates.fix(2,fluid)\n\np[3] = Quantity(75,'kPa')\nx[3] = 0\nstates.fix(3,fluid)\n\np[4] = p[1]\nx[4] = 1\nstates.fix(4,fluid)\n\nstates.display();","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [°C]</th>\n      <th>p [kPa]</th>\n      <th>v [m³/kg]</th>\n      <th>u [kJ/kg]</th>\n      <th>h [kJ/kg]</th>\n      <th>s [kJ/K/kg]</th>\n      <th>x []</th>\n      <th>phase []</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>99.605929</td>\n      <td>100</td>\n      <td>0.001043</td>\n      <td>417.399595</td>\n      <td>417.503911</td>\n      <td>1.302758</td>\n      <td>0</td>\n      <td>twophase</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>105.965497</td>\n      <td>125</td>\n      <td>0.001048</td>\n      <td>444.222511</td>\n      <td>444.353540</td>\n      <td>1.374111</td>\n      <td>0</td>\n      <td>twophase</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>91.757999</td>\n      <td>75</td>\n      <td>0.001037</td>\n      <td>384.359647</td>\n      <td>384.437439</td>\n      <td>1.213174</td>\n      <td>0</td>\n      <td>twophase</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>99.605929</td>\n      <td>100</td>\n      <td>1.693928</td>\n      <td>2505.554911</td>\n      <td>2674.947677</td>\n      <td>7.358849</td>\n      <td>1</td>\n      <td>twophase</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"},"output_type":"display_data"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"594753","input":"from math import log\nR = water.R\nh_fg = (R*log(p[3]/p[2]))/(1/T[2].to('K')-1/T[3].to('K'))\nh_fg = h_fg.to('kJ/kg') # hide\n\ndisplay.Calculations(locals());","output":{"0":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ h_{fg} }&={ \\frac{R log(p[3]/p[2])}{- \\frac{1}{T_{3}} + \\frac{1}{T_{2}}} }\\\\\n    &={ \\frac{\\left( 0.46152\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{kg} \\cdot \\mathrm{Δ°C}\\right)} \\right) -0.51083}{- \\frac{ 1 }{\\left( 364.91\\ \\mathrm{K} \\right)} + \\frac{ 1 }{\\left( 379.12\\ \\mathrm{K} \\right)}} }\\\\\n    &={  2295.6\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"output_type":"display_data"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"ebe8a4","input":"h_fg = h[4]-h[1]\n\ndisplay.Calculations(locals());","output":{"0":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ h_{fg} }&={ h_{4} - h_{1} }\\\\\n    &={ \\left( 2674.9\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 417.5\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\\n    &={  2257.4\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"output_type":"display_data"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"951c9d","input":"v_fg = v[4]-v[1]\n\ndisplay.Calculations(locals());","output":{"0":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ v_{fg} }&={ v_{4} - v_{1} }\\\\\n    &={ \\left( 1.6939\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}} \\right) - \\left( 0.0010432\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}} \\right) }\\\\\n    &={  1.6929\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"output_type":"display_data"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"657ee6","input":"pT = fluid.property_diagram(x=\"T\",y=\"p\",saturation=False)\npT.ax.set_ylim(bottom=50,top=150)\n# pT.ax.set_xlim(left=80,right=120)\n\n# Label phases\npT.plot_iso_line(\"x\",0,y_range=[50,150]*units('kPa'),label='saturated',ycoor=55,color='gray')\npT.text(0.1,.9,'liquid',axcoor=True)\npT.text(0.9,.1,'vapor',axcoor=True)\n\n# Plot states\npT.plot_state(states[1],label_loc='north west',gridlines=True)\npT.plot_state(states[2],label_loc='north west')\npT.plot_state(states[3],label_loc='north west')\n","output":{"0":{"data":{"image/png":"9f46e829b566a891a3544f0a60d7a364b8a9801e","text/plain":"<Figure size 720x480 with 1 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"b4ae1e","input":"dPdT_forward = (p[2]-p[1])/(T[2]-T[1])\nh_fg_forward = T[1].to('K')*v_fg*dPdT_forward\nh_fg_forward = h_fg_forward.to('kJ/kg') # hide\n\ndisplay.Calculations(locals(),comments=True);","output":{"0":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ dPdT_{forward} }&={ \\frac{p_{2} - p_{1}}{T_{2} - T_{1}} }\\\\\n    &={ \\frac{\\left( 125\\ \\mathrm{kPa} \\right) - \\left( 100\\ \\mathrm{kPa} \\right)}{\\left( 105.97\\ \\mathrm{°C} \\right) - \\left( 99.606\\ \\mathrm{°C} \\right)} }\\\\\n    &={  3.9311\\ \\frac{\\mathrm{kPa}}{\\mathrm{Δ°C}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"output_type":"display_data"},"1":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ h_{fg,forward} }&={ T_{1} v_{fg} dPdT_{forward} }\\\\\n    &={ \\left( 372.76\\ \\mathrm{K} \\right) \\left( 1.6929\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}} \\right) \\left( 3.9311\\ \\frac{\\mathrm{kPa}}{\\mathrm{Δ°C}} \\right) }\\\\\n    &={  2480.6\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"output_type":"display_data"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"04148a","input":"x = Quantity(pT.xlim,'degC')\ny = dPdT_forward*(x-T[1]) + p[1]\npT.plot(x,y,color='green',linewidth=.5,label='forward')\npT.fig.legend()\npT.show()","output":{"0":{"data":{"image/png":"5c838bf6d0a338c1b68ffa1e2c3a25fd6f054780","text/plain":"<Figure size 720x480 with 1 Axes>"},"output_type":"display_data"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"0945d3","input":"dPdT_backward = (p[1]-p[3])/(T[1]-T[3])\nh_fg_backward = T[1].to('K')*v_fg*dPdT_backward\nh_fg_backward = h_fg_backward.to('kJ/kg') # hide\n\ndisplay.Calculations(locals(),comments=True);","output":{"0":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ dPdT_{backward} }&={ \\frac{p_{1} - p_{3}}{T_{1} - T_{3}} }\\\\\n    &={ \\frac{\\left( 100\\ \\mathrm{kPa} \\right) - \\left( 75\\ \\mathrm{kPa} \\right)}{\\left( 99.606\\ \\mathrm{°C} \\right) - \\left( 91.758\\ \\mathrm{°C} \\right)} }\\\\\n    &={  3.1856\\ \\frac{\\mathrm{kPa}}{\\mathrm{Δ°C}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"output_type":"display_data"},"1":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ h_{fg,backward} }&={ T_{1} v_{fg} dPdT_{backward} }\\\\\n    &={ \\left( 372.76\\ \\mathrm{K} \\right) \\left( 1.6929\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}} \\right) \\left( 3.1856\\ \\frac{\\mathrm{kPa}}{\\mathrm{Δ°C}} \\right) }\\\\\n    &={  2010.2\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"output_type":"display_data"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"1da8b4","input":"y = dPdT_backward*(x-T[1]) + p[1]\npT.ax.plot(x,y,color='blue',linewidth=.5,label='backward')\npT.fig.legend()\npT.show()","output":{"0":{"data":{"image/png":"8d6e3152b6c506605af6ccab9b41e7ad1d54bcfa","text/plain":"<Figure size 720x480 with 1 Axes>"},"output_type":"display_data"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"126cd3","input":"dPdT_central = (p[2]-p[3])/(T[2]-T[3])\nh_fg_central = T[1].to('K')*v_fg*dPdT_central\nh_fg_central = h_fg_central.to('kJ/kg') # hide\n\ndisplay.Calculations(locals(),comments=True);","output":{"0":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ dPdT_{central} }&={ \\frac{p_{2} - p_{3}}{T_{2} - T_{3}} }\\\\\n    &={ \\frac{\\left( 125\\ \\mathrm{kPa} \\right) - \\left( 75\\ \\mathrm{kPa} \\right)}{\\left( 105.97\\ \\mathrm{°C} \\right) - \\left( 91.758\\ \\mathrm{°C} \\right)} }\\\\\n    &={  3.5193\\ \\frac{\\mathrm{kPa}}{\\mathrm{Δ°C}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"output_type":"display_data"},"1":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ h_{fg,central} }&={ T_{1} v_{fg} dPdT_{central} }\\\\\n    &={ \\left( 372.76\\ \\mathrm{K} \\right) \\left( 1.6929\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}} \\right) \\left( 3.5193\\ \\frac{\\mathrm{kPa}}{\\mathrm{Δ°C}} \\right) }\\\\\n    &={  2220.8\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"output_type":"display_data"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"ceab93","input":"y = dPdT_central*(x-T[1]) + p[1]\npT.ax.plot(x,y,color='red',linewidth=.5,label='central')\npT.fig.legend()\npT.show()","output":{"0":{"data":{"image/png":"de7defa6ddeaf48c200a9c52086ff4e7cee7f17f","text/plain":"<Figure size 720x480 with 1 Axes>"},"output_type":"display_data"}},"pos":16,"type":"cell"}
{"cell_type":"markdown","id":"338f71","input":"#### Central Difference","pos":14,"type":"cell"}
{"cell_type":"markdown","id":"49cc4f","input":"## Problem Statement\nDetermine the enthalpy of vaporization for water at 100 kPa using:\n* (a) the Clapeyron equation\n* (b) the Clapeyron-Clausius equation\n* (c) the steam tables","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"583170","input":"### (a) Clapeyron equation\nThe Clapeyron equation relates the enthalpy of vaporization to easily measureable properties, $T$, $p$, and $v$\n$$ \\left( \\frac{\\partial p}{\\partial T} \\right)_{sat} = \\frac{h_{fg}}{Tv_fg}$$\nThis can be solved for the enthalpy\n$$ h_{fg} = Tv_{fg}\\left(\\frac{\\partial P}{\\partial T}\\right)_{sat} $$\nThe application of this equation depends on knowing the partial derivative of the pressure with respect to the temperature during phase change.  This can be visualized as the slope of the saturation curve on a $p$-$T$ diagram at the pressure of interest","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"603c4b","input":"#### Forward Difference","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"83eb5b","input":"## Solution\n","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"84de78","input":"#### Backward Difference","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"b80c65","input":"### Python Initialization\nWe'll start by importing the libraries we will use for our analysis and initializing dictionaries to hold the properties we will be usings.","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"d30f67","input":"# Example 12.1: Clapeyron Equation\n\n*John F. Maddox, Ph.D., P.E.<br>\nUniversity of Kentucky - Paducah Campus<br>\nME 321: Engineering Thermodynamics II<br>*","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"d43126","input":"### (b) Clapeyron-Clausius equation\n$$\\ln\\left(\\frac{p_B}{p_A}\\right) = \\frac{h_{fg}}{R}\\left(\\frac{1}{T_A}-\\frac{1}{T_B}\\right)$$","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"dc75a1","input":"### (c) Steam Tables","pos":19,"type":"cell"}
{"id":"166c2f","input":"","pos":24,"type":"cell"}
{"id":0,"time":1603121999671,"type":"user"}
{"last_load":1603122001063,"type":"file"}