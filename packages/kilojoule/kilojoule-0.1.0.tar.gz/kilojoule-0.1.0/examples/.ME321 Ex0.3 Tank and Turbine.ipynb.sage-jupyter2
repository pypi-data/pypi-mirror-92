{"attachments":{"tanksandturbine.png":{"type":"sha1","value":"988405d1c9140a021bece302baa29f5a5bad5c44"}},"cell_type":"markdown","id":"dc488c","input":"## Problem Statement\nA steam engine consists of a boiler tank connected to a turbine, as shown below. The boiler tank has a volume of 100 L and initially contains saturated liquid with a very small amount of vapor at 100 kPa. Heat is added by a burner, and the pressure regulator does not open before the boiler pressure reaches 700 kPa, which it keeps constant. The vapor leaving the boiler tank passes through a turbine and is discharged to the atmosphere as saturated vapor at 100 kPa. The burner is turned off when no more liquid is present in the boiler. Assume the turbine is adiabatic and the changes in kinetic and potential energy across the turbine are negligible.\n<img src=\"attachment:tanksandturbine.png\" style=\"max-width:100%\">","pos":1,"state":"done","type":"cell"}
{"backend_state":"ready","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":13.085621970923608,"memory":39313408},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.9"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"508afb","input":"","pos":18,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":2,"id":"f95b1c","input":"from thermoJFM import PropertyLookup as Prop\nfrom thermoJFM import Q_, units\n\n[T,p,v,u,h,s,x,m] = [{} for i in range(8)] # This line uses the python 'list comprehension' syntax to avoid needing to type '{}' 8 times","pos":4,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":3,"id":"1f8370","input":"p[1] = Q_(100,'kPa')\nx[1] = 0\nx[2] = 1\nV_tank = Q_(100,'L')\np[2] = Q_(700,'kPa')\np[3] = Q_(700,'kPa')\nx['tank,exit'] = 1\np['tank,exit'] = 1\np['turb,exit'] = Q_(100,'kPa')\nx['turb,exit'] = 1\n\nprint(p)\nprint(x)\n","output":{"0":{"name":"stdout","output_type":"stream","text":"{}\n{1: <Quantity(100, 'kilopascal')>, 2: <Quantity(700, 'kilopascal')>, 3: <Quantity(700, 'kilopascal')>, 'tank,exit': 1, 'turb,exit': <Quantity(100, 'kilopascal')>}\n{1: 1, 2: 0, 'tank,exit': 1, 'turb,exit': 1}\n"}},"pos":6,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":4,"id":"42e5b4","input":"R = Q_(0.06855,'Btu/lb/degR')\nc_p = Q_(0.24,'Btu/lb/degR')\nk = 1.4 # Note: the specific heat ratio, k, is a dimensionless number\n\nprint(R)\nprint(c_p)\nprint(k)","output":{"0":{"name":"stdout","output_type":"stream","text":"0.06855 Btu/lb/rankine\n0.24 Btu/lb/rankine\n1.4\n"}},"pos":8,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":5,"id":"8d62c6","input":"T['2s'] = T[1].to('degR')*(p[2]/p[1])**((k-1)/k)\nT[2] = T[1] + (T['2s'].to('degF')-T[1])/eta_c\n\nprint(T['2s'])\nprint(f\"T_2 = {T[2]} = {T[2].to('degR')}\")\n","output":{"0":{"name":"stdout","output_type":"stream","text":"1.023e+03 rankine\nT_2 = 686.2 fahrenheit = 1.146e+03 rankine\n"}},"pos":10,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":6,"id":"fe5383","input":"mdot = (p[1]*Vdot[1])/(R*T[1].to('degR'))\n\nprint(mdot) # Note that the units don't get converted to the simplest form by default\nprint(mdot.to('lb/min')) # but you can easily convert them to your desired form as needed\n\nWdot_c = mdot*c_p*(T[2]-T[1])\n\nprint(f\"Wdot_c = {Wdot_c} = {Wdot_c.to('hp')}\")","output":{"0":{"name":"stdout","output_type":"stream","text":"1.215e+03 ft³·lb·psi/Btu/min\n224.8 lb/min\nWdot_c = 1.796e+05 ft³·psi·Δfahrenheit/min/rankine = 783.8 hp\n"}},"pos":12,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":7,"id":"faa270","input":"Sdot_gen = mdot*( c_p*math.log(T[2].to('degR')/T[1].to('degR')) - R*math.log(p[2]/p[1])) # we use the log function from the math library for ln\n\nprint(f\"Sdot_gen = {Sdot_gen} = {Sdot_gen.to('Btu/min/degR')}\")","output":{"0":{"name":"stdout","output_type":"stream","text":"Sdot_gen = 33.23 ft³·psi/min/rankine = 6.149 Btu/min/rankine\n"}},"pos":14,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":8,"id":"270312","input":"math.log(math.e)","output":{"0":{"data":{"text/plain":"1.0"},"exec_count":8,"output_type":"execute_result"}},"pos":16,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":9,"id":"8048bd","input":"math.log10(10)","output":{"0":{"data":{"text/plain":"1.0"},"exec_count":9,"output_type":"execute_result"}},"pos":17,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"160939","input":"\n### Assumptions\n  - Negligible changes in kinetic energy\n  - Negligible changes in potential energy\n  - Turbine is adiabatic\n  - Tank has quality of approximately 1 at the beginning\n  - Tank has quality of approximately 0 at the end\n  - Only saturated vapo\n  - Constant specific heat (cold-air-standard)\n  - Ideal gas (cold-air-standard)\n\nWe will pull some properties for air from the tables in the back of the book since we are assuming constant specific heat, ideal gas behavior.\n","pos":7,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"1aab1d","input":"### Python Initialization\nWe'll start by importing the libraries we will use for our analysis and intializing dictionaries to hold the properties we will be usings.","pos":3,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"37ca79","input":"### Second Law Analysis\nTo determine the entropy generation, we need to do a 2nd Law analysis\n\n$$\\require{cancel}\n\\cancelto{0}{\\frac{dS_{CV}}{dt}}= \\sum_j\\frac{\\cancelto{0}{\\dot{Q}_j}}{T_j}+\\sum_i\\dot{m}_is_i-\\sum_e\\dot{m}_es_e+\\dot{S}_{gen}$$\n$$\\dot{S}_{gen} = \\dot{m}(s_e-s_i)$$\nwhich can be rewritten using the constant specific heat assumption as\n$$\\dot{S}_{gen} = \\dot{m}\\left[ c_p\\ln\\left(\\frac{T_2}{T_1}\\right)-R\\ln\\left(\\frac{p_2}{p_1}\\right)\\right]$$\nwhere the temperatures and pressure must be in absolute units for this equation to be valid.\n","pos":13,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"4e49e7","input":"*John F. Maddox, Ph.D., P.E.<br>\nUniversity of Kentucky - Paducah Campus<br>\nME 321: Engineering Thermodynamics II<br>*\n\n\n# Example 0.3: Tank and Turbine","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"590a88","input":"### Isentropic Efficiency\nThe isentropic efficiency of a compressor is defined as the ratio of the work that would be required if the compressor were ideal (isentropic) and operating between the same inlet state and exit pressure as the real device to the actual work.\n$$\\eta_c=\\frac{\\dot{W}_s}{\\dot{W}_c}$$\nwhere $\\dot{W}_s$ is the rate of isentropic work and $\\dot{W}_c$ is the rate of actual compressor work.  From a first law analysis, we can rewrite the work terms as changes in enthalpy between the inlet and exit states.\n$$\\require{cancel}\n\\eta_c = \\frac{\\cancel{\\dot{m}}(h_{2s}-h_1)}{\\cancel{\\dot{m}}(h_2-h_1)}$$\nApplying the constant specific heat assumption allows us to rewrite the changes in enthalpy as $\\Delta h=c_p\\Delta T$\n$$\\require{cancel}\n\\eta_c = \\frac{\\cancel{c_p}(T_{2s}-T_1)}{\\cancel{c_p}(T_2-T_1)}$$\nOur first goal is to find the exit temperature, so we solve for $T_2$\n$$T_2 = T_1 + \\frac{T_{2s}-T_1}{\\eta_c}$$\nHowever, in order to use this equation, we first need to find the temperature of the isentropic exit state, $T_{2s}$.  We can find this using ideal gas polytropic relations with $n=k$\n$$T_{2s}=T_1\\left(\\frac{p_2}{p_1}\\right)^{\\frac{k-1}{k}}$$\nNote that in order to apply the polytropic relation above, we must convert the temperatures to absolute units, i.e. $^\\circ\\text{R}$","pos":9,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"6f8b0d","input":"## Solution\n","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c20568","input":"Note that we used `math.log` to evaluate the natural log in the above equation.  It is common in many programming languages and higher level textbook to treat the natural log, $\\ln()$, as the default $\\log()$ and the base 10 log is only applied if it is explicity stated, i.e. $\\log_{10}()$.","pos":15,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c48e45","input":"### Given Parameters\nWe now define variables to hold our known values.","pos":5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"ec9249","input":"Now that we know the actual exit temperature, we can find the actual rate of work using the 1st Law.\n$$\\dot{W}_c = \\dot{m}c_p(T_2-T_1)$$\nHowever, we will also need to use the ideal gas law to find the mass flow rate before applying this equation.\n$$\\dot{m}_1 = \\frac{p_1\\dot{V}_1}{RT_1}$$","pos":11,"state":"done","type":"cell"}
{"id":0,"time":1595869061018,"type":"user"}
{"last_load":1596214191806,"type":"file"}