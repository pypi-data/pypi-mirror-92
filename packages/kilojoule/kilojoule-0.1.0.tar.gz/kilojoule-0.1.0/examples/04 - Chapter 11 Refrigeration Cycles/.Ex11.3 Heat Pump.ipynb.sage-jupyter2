{"attachments":{"e047931f-9241-45a0-ba9d-e5e372395e5d.png":{"type":"sha1","value":"41f5d66222bf359f087654a6af9508f7aa179abb"}},"cell_type":"markdown","id":"1769b3","input":"## Problem Statement\nA vapor compression heat pump system uses R-134a as the working fluid.  The refrigerant enters the compressor at $2.4\\ \\mathrm{bar}$ and $0^\\circ\\mathrm{C}$ with a volumetric flow rate of $0.6\\ \\mathrm{m^3/min}$.  The compression is adiabatic to $9\\ \\mathrm{bar}$ and $60^\\circ\\mathrm{C}$.  Saturated liquid exits the condenser at $9\\ \\mathrm{bar}$. Determine the:\n* (a) Power input to the compressor\n* (b) Heating capacity\n* (c) Coefficient of performance\n* (d) Isentropic efficiency the compressor\n\n![image.png](attachment:e047931f-9241-45a0-ba9d-e5e372395e5d.png)","pos":1,"type":"cell"}
{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":81047552},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.9"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":1,"id":"d8f502","input":"from thermoJFM.templates.default import *\n   \nr134a = realfluid.Properties('R134a')","metadata":{"jupyter":{"outputs_hidden":false}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"2b5821","input":"Ts = r134a.Ts_diagram()\nTs.ax.set_ylim(bottom=-)\n\nTs.plot_state(states[1],label_loc='south east')\nTs.plot_state(states[2],label_loc='north east')\nTs.plot_state(states[3],label_loc='north west')\nTs.plot_state(states[4],label_loc='south west')\n    \nTs.plot_process(states[1],states[2],path='nonideal',label='compressor',labelprops=dict(va='top',offset=-5))\nTs.plot_process(states[1],states['2s'],path='isentropic',linestyle='dashed')\nTs.plot_process(states[2],states[3],path='isobaric',label='condenser')\nTs.plot_process(states[3],states[4],path='isenthalpic',label='throttle',label_pos=.45,labelprops=dict(va='top',offset=-5))\nTs.plot_process(states[4],states[1],path='isobaric',label='evaporator',labelprops=dict(va='top'));","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"data":{"image/png":"a46b3eb86cf6146b4bd689d2c14354ae40a673c4","text/plain":"<Figure size 720x480 with 1 Axes>"},"exec_count":10,"metadata":{"image/png":{"height":427,"width":646},"needs_background":"light"},"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"25d336","input":"p[1] = Quantity(2.4,'bar')   # Compressor inlet pressure\nT[1] = Quantity(0,'degC')    # Compressor inlet temperature\nVdot[1] = Quantity(0.6,'m^3/min') # Compressure inlet volumetric flow rate\np[2] = Quantity(9,'bar')     # Compressor outlet pressure\nT[2] = Quantity(60,'degC')   # Compressor outlet temperature\nx[3] = 0                     # Condenser outet quality\n\ndisplay.Summary(locals());","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"data":{"text/latex":"\\[\\begin{aligned}{  }\\end{aligned}\\]","text/plain":"<IPython.core.display.Latex object>"},"exec_count":2,"output_type":"execute_result"},"1":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [°C]</th>\n      <th>p [kPa]</th>\n      <th>x []</th>\n      <th>Vdot [m³/s]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>240</td>\n      <td>-</td>\n      <td>0.01</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>60</td>\n      <td>900</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>-</td>\n      <td>-</td>\n      <td>0</td>\n      <td>-</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"},"exec_count":2,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"8392e9","input":"p[4] = p[1]\np[3] = p[2]\n\ndisplay.Summary(locals());","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"data":{"text/latex":"\\[\\begin{aligned}{  }\\end{aligned}\\]","text/plain":"<IPython.core.display.Latex object>"},"exec_count":3,"output_type":"execute_result"},"1":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [°C]</th>\n      <th>p [kPa]</th>\n      <th>x []</th>\n      <th>Vdot [m³/s]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>240.0</td>\n      <td>-</td>\n      <td>0.01</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>60</td>\n      <td>900.0</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>-</td>\n      <td>900.0</td>\n      <td>0</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>-</td>\n      <td>240.0</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"},"exec_count":3,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"e3e893","input":"#### Mass flow rate\nv[1] = r134a.v(T[1],p[1])\nmdot = Vdot[1]/v[1]\n\n#### 1st Law for compressor\nh[1] = r134a.h(T[1],p[1])\nh[2] = r134a.h(T[2],p[2])\nw_in = h[2]-h[1]\nWdot_in = mdot*w_in\n\ndisplay.Calculations(locals(),comments=True);","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"data":{"text/markdown":"### Mass flow rate","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"1":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { v_{1} }&={ r134a.v(T[1],p[1]) } = { 0.08617\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"2":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ \\dot{m} }&={ \\frac{\\dot{V}_{1}}{v_{1}} }\\\\\n    &={ \\frac{\\left( 0.01\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{s}} \\right)}{\\left( 0.08617\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}} \\right)} }\\\\\n    &={  0.11605\\ \\frac{\\mathrm{kg}}{\\mathrm{s}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"3":{"data":{"text/markdown":"### 1st Law for compressor","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"4":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { h_{1} }&={ r134a.h(T[1],p[1]) } = { 400.11\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"5":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { h_{2} }&={ r134a.h(T[2],p[2]) } = { 443.28\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"6":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ w_{in} }&={ h_{2} - h_{1} }\\\\\n    &={ \\left( 443.28\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 400.11\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\\n    &={  43.163\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"7":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ \\dot{W}_{in} }&={ \\dot{m} w_{in} }\\\\\n    &={ \\left( 0.11605\\ \\frac{\\mathrm{kg}}{\\mathrm{s}} \\right) \\left( 43.163\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\\n    &={  5.0091\\ \\frac{\\mathrm{kJ}}{\\mathrm{s}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"1efbf4","input":"#### Heat output\nh[3] = r134a.h(p[3],x[3])\nq_out = h[2]-h[3]\nQdot_out = mdot*q_out\n\ndisplay.Calculations(locals(), comments=True);","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"data":{"text/markdown":"### Heat output","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":5,"output_type":"execute_result"},"1":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { h_{3} }&={ r134a.h(p[3],x[3]) } = { 249.78\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":5,"output_type":"execute_result"},"2":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ q_{out} }&={ h_{2} - h_{3} }\\\\\n    &={ \\left( 443.28\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 249.78\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\\n    &={  193.5\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":5,"output_type":"execute_result"},"3":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ \\dot{Q}_{out} }&={ \\dot{m} q_{out} }\\\\\n    &={ \\left( 0.11605\\ \\frac{\\mathrm{kg}}{\\mathrm{s}} \\right) \\left( 193.5\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\\n    &={  22.455\\ \\frac{\\mathrm{kJ}}{\\mathrm{s}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":5,"output_type":"execute_result"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"1690a4","input":"COP_HP = Qdot_out/Wdot_in\n\ndisplay.Calculations(locals());","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ COP_{HP} }&={ \\frac{\\dot{Q}_{out}}{\\dot{W}_{in}} }\\\\\n    &={ \\frac{\\left( 22.455\\ \\frac{\\mathrm{kJ}}{\\mathrm{s}} \\right)}{\\left( 5.0091\\ \\frac{\\mathrm{kJ}}{\\mathrm{s}} \\right)} }\\\\\n    &={  4.4829\\  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":6,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"67e2f0","input":"# Isentropic exit state\ns[1] = r134a.s(T[1],p[1])\ns['2s'] = s[1]\nh['2s'] = r134a.h(p[2],s[1])\n\n# Isentropic efficiency\neta_c = (h['2s']-h[1])/(h[2]-h[1])\n\ndisplay.Calculations(locals(),comments=True);","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"data":{"text/markdown":" Isentropic exit state","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":7,"output_type":"execute_result"},"1":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { s_{1} }&={ r134a.s(T[1],p[1]) } = { 1.7475\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":7,"output_type":"execute_result"},"2":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { s_{2s} }&={ s_{1} } = { 1.7475\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":7,"output_type":"execute_result"},"3":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { h_{2s} }&={ r134a.h(p[2],s[1]) } = { 428.39\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":7,"output_type":"execute_result"},"4":{"data":{"text/markdown":" Isentropic efficiency","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":7,"output_type":"execute_result"},"5":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ \\eta_{c} }&={ \\frac{h_{2s} - h_{1}}{h_{2} - h_{1}} }\\\\\n    &={ \\frac{\\left( 428.39\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 400.11\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)}{\\left( 443.28\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 400.11\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)} }\\\\\n    &={  0.65504\\  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":7,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"f6e107","input":"# Remaining properties\nh[4] = h[3]\nfor i in [1,2,3,4,'2s']:\n    states.fix(i, r134a)\nstates.display()","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [°C]</th>\n      <th>p [kPa]</th>\n      <th>v [m³/kg]</th>\n      <th>u [kJ/kg]</th>\n      <th>h [kJ/kg]</th>\n      <th>s [kJ/K/kg]</th>\n      <th>x []</th>\n      <th>phase []</th>\n      <th>Vdot [m³/s]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0.000000</td>\n      <td>240.0</td>\n      <td>0.086170</td>\n      <td>379.432445</td>\n      <td>400.113255</td>\n      <td>1.747534</td>\n      <td>-1.000000</td>\n      <td>gas</td>\n      <td>0.01</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>60.000000</td>\n      <td>900.0</td>\n      <td>0.026146</td>\n      <td>419.745099</td>\n      <td>443.276423</td>\n      <td>1.793220</td>\n      <td>-1.000000</td>\n      <td>gas</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>2s</th>\n      <td>45.688005</td>\n      <td>900.0</td>\n      <td>0.024206</td>\n      <td>406.601832</td>\n      <td>428.386931</td>\n      <td>1.747534</td>\n      <td>-1.000000</td>\n      <td>gas</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>35.526110</td>\n      <td>900.0</td>\n      <td>0.000858</td>\n      <td>249.007500</td>\n      <td>249.779795</td>\n      <td>1.169479</td>\n      <td>0.000000</td>\n      <td>twophase</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>-5.365325</td>\n      <td>240.0</td>\n      <td>0.024132</td>\n      <td>243.988164</td>\n      <td>249.779795</td>\n      <td>1.186310</td>\n      <td>0.281077</td>\n      <td>twophase</td>\n      <td>-</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"},"exec_count":8,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"98f4d3","input":"pv = r134a.pv_diagram()\npv.ax.set_ylim(bottom=Quantity(100,'kPa'))\n\npv.plot_state(states[1],label_loc='east')\npv.plot_state(states[2],label_loc='north east')\npv.plot_state(states[3],label_loc='north west')\npv.plot_state(states[4],label_loc='south west')\n    \npv.plot_process(states[1],states[2],path='isentropic')\npv.plot_process(states[2],states[3],path='isobaric', label='condenser', label_pos=.8)\npv.plot_process(states[3],states[4],path='isenthalpic', label='throttle', label_pos=0.75, labelprops=dict(offset=2))\npv.plot_process(states[4],states[1],path='isobaric', label='evaporator',label_pos=0.6,labelprops=dict(va='top'));","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"data":{"image/png":"b18b2d9742cd2b9835d4d87205502a4b8174e42d","text/plain":"<Figure size 720x480 with 1 Axes>"},"exec_count":9,"metadata":{"image/png":{"height":428,"width":633},"needs_background":"light"},"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","id":"00fd92","input":"","metadata":{"jupyter":{"outputs_hidden":false}},"pos":21,"type":"cell"}
{"cell_type":"markdown","id":"0a97c0","input":"### (c) $COP_{HP}$","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"198a52","input":"### Given Parameters\nWe now define variables to hold our known values.","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"1e77ac","input":"### (b) Heating Capacity","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"28c035","input":"### (a) Power input to the compressor","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"499804","input":"## Solution\n","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"653722","input":"# Example 11.3: Heat Pump\n\n*John F. Maddox, Ph.D., P.E.<br>\nUniversity of Kentucky - Paducah Campus<br>\nME 321: Engineering Thermodynamics II<br>*","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"86445c","input":"### (d) Compressor isentropic efficiency","pos":15,"type":"cell"}
{"cell_type":"markdown","id":"c03b2f","input":"### Diagrams","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"d3aa25","input":"### Assumptions\n- Non-ideal work devices\n- Saturated liquid at condenser exit\n- Isobaric heat exchangers\n- Negligible changes in kinetic energy\n- Negligible changes in potential energy","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"fa8fba","input":"### Python Initialization\nWe'll start by importing the libraries we will use for our analysis and initializing dictionaries to hold the properties we will be usings.","pos":3,"type":"cell"}
{"id":0,"time":1604454236283,"type":"user"}
{"last_load":1604454237541,"type":"file"}