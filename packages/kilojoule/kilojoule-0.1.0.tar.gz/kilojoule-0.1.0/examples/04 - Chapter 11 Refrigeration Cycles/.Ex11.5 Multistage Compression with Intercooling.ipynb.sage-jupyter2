{"attachments":{"24be1c2b-b173-4632-9820-c043567e8d4a.png":{"type":"sha1","value":"796ec44b83cf4430f6d1d8a7f321ece23e6b9b3f"}},"cell_type":"markdown","id":"d23e43","input":"## Problem Statement\nR-134a flows through a vapor-compression refrigeration cycle.  Heat is removed at a rate of 18 kW from a freezer at $-8^\\circ\\mathrm{C}$.  Heat is rejected to a room at $22^\\circ\\mathrm{C}$.  The evaporator and the condenser are $10^\\circ\\mathrm{C}$ colder or hotter than the thermal reservoirs.  A flash chamber is used to separate the vapor from the liquid at a pressure of $4\\ \\mathrm{bar}$.  The vapor portion is used to intercool multistage compression. Find:\n* (a) $p_\\mathrm{evap}$ and $p_\\mathrm{cond}$ (kPa)\n* (b) $COP_R$\n* (c) Net Work\n\n![image.png](attachment:24be1c2b-b173-4632-9820-c043567e8d4a.png)","pos":1,"state":"done","type":"cell"}
{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":221290496},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.9"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1602684921006,"exec_count":1,"id":"6fc7fc","input":"from thermoJFM.templates.default import *\n   \nr134a = realfluid.Properties('R134a')","kernel":"python3","metadata":{"jupyter":{}},"pos":4,"start":1602684915368,"state":"done","type":"cell"}
{"cell_type":"code","end":1602684921538,"exec_count":2,"id":"5b87a1","input":"Qdot_in = Quantity(18,'kW')   # Rate of heat input\nT_L = Quantity(-8,'degC')     # Temperature of refrigerated space\nT_H = Quantity(22,'degC')     # Temperature of surroundings\nDelta_T = Quantity(10,'delta_degC') # Temperature difference in evaporator and condenser\np_flash = Quantity(4,'bar')   # Flash chamber pressure\n\ndisplay.Summary(locals());","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/latex":"\\[\\begin{aligned}{ \\Delta T }&={  10\\ \\mathrm{Δ°C}  }&{ \\dot{Q}_{in} }&={  18\\ \\mathrm{kW}  }&{ T_{H} }&={  22\\ \\mathrm{°C}  }\\\\{ T_{L} }&={  -8\\ \\mathrm{°C}  }&{ p_{flash} }&={  4\\ \\mathrm{bar}  }&{  }\\end{aligned}\\]","text/plain":"<IPython.core.display.Latex object>"}},"1":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"}}},"pos":6,"start":1602684921029,"state":"done","type":"cell"}
{"cell_type":"code","end":1602684921591,"exec_count":3,"id":"508054","input":"x[1] = 1      # Saturated vapor at evaporator exit\nx[5] = 0      # Saturated liquid at condenser exit\nx[7] = 0      # Saturated liquid at flash chamber exit\nx[3] = 1      # Saturated vapor at flash chamber exit\np[6] = p[7] = p[3] = p[2] = p[9] = p_flash # isobaric heat exchangers\n\ndisplay.Summary(locals());","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/latex":"\\[\\begin{aligned}{ \\Delta T }&={  10\\ \\mathrm{Δ°C}  }&{ \\dot{Q}_{in} }&={  18\\ \\mathrm{kW}  }&{ T_{H} }&={  22\\ \\mathrm{°C}  }\\\\{ T_{L} }&={  -8\\ \\mathrm{°C}  }&{ p_{flash} }&={  4\\ \\mathrm{bar}  }&{  }\\end{aligned}\\]","text/plain":"<IPython.core.display.Latex object>"}},"1":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>p [kPa]</th>\n      <th>x []</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>-</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>400</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>400</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>-</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>400</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>400</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>400</td>\n      <td>-</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"}}},"pos":8,"start":1602684921560,"state":"done","type":"cell"}
{"cell_type":"code","end":1602684921699,"exec_count":4,"id":"5b4574","input":"#### Evaporator pressure\n# The working fluid temperature must be lower than the refrigerated space\nT[1] = T_L - Delta_T\n# The fluid is saturated, so the saturation pressure must be consistent with the saturation temperature\np[1] = r134a.p(T[1],x[1])\n\n#### Condenser pressure\n# The working fluid temperature must be hotter than the surroundings\nT[5] = T_H + Delta_T\n# The fluid is saturated, so the saturation pressure must be consistent with the saturation temperature\np[5] = r134a.p(T[5],x[5])\n\ndisplay.Calculations(locals(),comments=True);","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/markdown":"### Evaporator pressure","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/markdown":" The working fluid temperature must be lower than the refrigerated space","text/plain":"<IPython.core.display.Markdown object>"}},"2":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ T_{1} }&={ T_{L} - \\Delta{}T }\\\\\n    &={ \\left( -8\\ \\mathrm{°C} \\right) - \\left( 10\\ \\mathrm{Δ°C} \\right) }\\\\\n    &={  -18\\ \\mathrm{°C}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"3":{"data":{"text/markdown":" The fluid is saturated, so the saturation pressure must be consistent with the saturation temperature","text/plain":"<IPython.core.display.Markdown object>"}},"4":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { p_{1} }&={ r134a.p(T[1],x[1]) } = { 144.6\\ \\mathrm{kPa}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"5":{"data":{"text/markdown":"### Condenser pressure","text/plain":"<IPython.core.display.Markdown object>"}},"6":{"data":{"text/markdown":" The working fluid temperature must be hotter than the surroundings","text/plain":"<IPython.core.display.Markdown object>"}},"7":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ T_{5} }&={ T_{H} + \\Delta{}T }\\\\\n    &={ \\left( 22\\ \\mathrm{°C} \\right) + \\left( 10\\ \\mathrm{Δ°C} \\right) }\\\\\n    &={  32\\ \\mathrm{°C}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"8":{"data":{"text/markdown":" The fluid is saturated, so the saturation pressure must be consistent with the saturation temperature","text/plain":"<IPython.core.display.Markdown object>"}},"9":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { p_{5} }&={ r134a.p(T[5],x[5]) } = { 815.43\\ \\mathrm{kPa}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}}},"pos":10,"start":1602684921601,"state":"done","type":"cell"}
{"cell_type":"code","end":1602684922508,"exec_count":5,"id":"85d2b3","input":"#### 1st Law Analysis\n##### State 5\nh[5] = r134a.h(p[5],x[5])\n\n##### State 6\nh[6] = h[5]\nx[6] = r134a.x(p[6],h[6])\n\n##### State 7\nh[7] = r134a.h(p[7],x=0)\n\n#### State 8\nh[8] = h[7]\np[8] = p[1]\n\n##### State 1\nh[1] = r134a.h(T[1],x[1])\ns[1] = r134a.s(T[1],x[1])\n\n##### 8-1) Isobaric heat addition\nq_in = h[1]-h[8]\n##### Mass flow rate\nmdot[1] = mdot[2] = mdot[8] = mdot[7] = Qdot_in/q_in\n\n##### 1-2) Ideal compression\np[2] = p[3]\ns[2] = s[1]\n\n##### State 2\nT[2] = r134a.T(p[2],s[2])\nh[2] = r134a.h(p[2],s[2])\n\n##### 2,3-9) \n##### State 3\nh[3] = r134a.h(p[3],x[3])\n##### Mass flow rate\nmdot[3] = x[6]*mdot[1]\n##### State 9\nmdot[9] = mdot[4] = mdot[5] = mdot[6] = mdot[1] + mdot[3]\nh[9] = (mdot[2]*h[2] + mdot[3]*h[3])/mdot[9]\n\n##### 9-4) Ideal compression\ns[9] = r134a.s(p[9],h[9])\np[4] = p[5]\ns[4] = s[9]\nh[4] = r134a.h(p[4],s[4])\n\n##### COP\n# Desired: Heat Input\n# Cost: Net Work\nWdot_net = mdot[1]*(h[2]-h[1]) + mdot[9]*(h[4]-h[9])\n# COP: Desired/Cost\nCOP_R = Qdot_in/Wdot_net\n\ndisplay.Calculations(locals(), comments=True);","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/markdown":"### 1st Law Analysis","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/markdown":"#### State 5","text/plain":"<IPython.core.display.Markdown object>"}},"10":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { p_{8} }&={ p_{1} } = { 144.6\\ \\mathrm{kPa}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"11":{"data":{"text/markdown":"#### State 1","text/plain":"<IPython.core.display.Markdown object>"}},"12":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { h_{1} }&={ r134a.h(T[1],x[1]) } = { 387.79\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"13":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { s_{1} }&={ r134a.s(T[1],x[1]) } = { 1.7396\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"14":{"data":{"text/markdown":"#### 8-1) Isobaric heat addition","text/plain":"<IPython.core.display.Markdown object>"}},"15":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ q_{in} }&={ h_{1} - h_{8} }\\\\\n    &={ \\left( 387.79\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 212.11\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\\n    &={  175.68\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"16":{"data":{"text/markdown":"#### Mass flow rate","text/plain":"<IPython.core.display.Markdown object>"}},"17":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { \\dot{m}_{1} }&={ \\frac{\\dot{Q}_{in}}{q_{in}} } = { 0.10246\\ \\frac{\\mathrm{kg}}{\\mathrm{s}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"18":{"data":{"text/markdown":"#### 1-2) Ideal compression","text/plain":"<IPython.core.display.Markdown object>"}},"19":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { p_{2} }&={ p_{3} } = { 400.0\\ \\mathrm{kPa}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"2":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { h_{5} }&={ r134a.h(p[5],x[5]) } = { 244.62\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"20":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { s_{2} }&={ s_{1} } = { 1.7396\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"21":{"data":{"text/markdown":"#### State 2","text/plain":"<IPython.core.display.Markdown object>"}},"22":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { T_{2} }&={ r134a.T(p[2],s[2]) } = { 14.105\\ \\mathrm{°C}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"23":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { h_{2} }&={ r134a.h(p[2],s[2]) } = { 408.55\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"24":{"data":{"text/markdown":"#### 2,3-9) ","text/plain":"<IPython.core.display.Markdown object>"}},"25":{"data":{"text/markdown":"#### State 3","text/plain":"<IPython.core.display.Markdown object>"}},"26":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { h_{3} }&={ r134a.h(p[3],x[3]) } = { 403.72\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"27":{"data":{"text/markdown":"#### Mass flow rate","text/plain":"<IPython.core.display.Markdown object>"}},"28":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ \\dot{m}_{3} }&={ x_{6} \\dot{m}_{1} }\\\\\n    &={ \\left( 0.16968\\ \\right) \\left( 0.10246\\ \\frac{\\mathrm{kg}}{\\mathrm{s}} \\right) }\\\\\n    &={  0.017385\\ \\frac{\\mathrm{kg}}{\\mathrm{s}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"29":{"data":{"text/markdown":"#### State 9","text/plain":"<IPython.core.display.Markdown object>"}},"3":{"data":{"text/markdown":"#### State 6","text/plain":"<IPython.core.display.Markdown object>"}},"30":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { \\dot{m}_{9} }&={ \\dot{m}_{1} + \\dot{m}_{3} } = { 0.11985\\ \\frac{\\mathrm{kg}}{\\mathrm{s}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"31":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ h_{9} }&={ \\frac{\\dot{m}_{2} h_{2} + \\dot{m}_{3} h_{3}}{\\dot{m}_{9}} }\\\\\n    &={ \\frac{\\left( 0.10246\\ \\frac{\\mathrm{kg}}{\\mathrm{s}} \\right) \\left( 408.55\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) + \\left( 0.017385\\ \\frac{\\mathrm{kg}}{\\mathrm{s}} \\right) \\left( 403.72\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)}{\\left( 0.11985\\ \\frac{\\mathrm{kg}}{\\mathrm{s}} \\right)} }\\\\\n    &={  407.85\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"32":{"data":{"text/markdown":"#### 9-4) Ideal compression","text/plain":"<IPython.core.display.Markdown object>"}},"33":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { s_{9} }&={ r134a.s(p[9],h[9]) } = { 1.7371\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"34":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { p_{4} }&={ p_{5} } = { 815.43\\ \\mathrm{kPa}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"35":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { s_{4} }&={ s_{9} } = { 1.7371\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"36":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { h_{4} }&={ r134a.h(p[4],s[4]) } = { 422.97\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"37":{"data":{"text/markdown":"#### COP","text/plain":"<IPython.core.display.Markdown object>"}},"38":{"data":{"text/markdown":" Desired: Heat Input","text/plain":"<IPython.core.display.Markdown object>"}},"39":{"data":{"text/markdown":" Cost: Net Work","text/plain":"<IPython.core.display.Markdown object>"}},"4":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { h_{6} }&={ h_{5} } = { 244.62\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"40":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ \\dot{W}_{net} }&={ \\dot{m}_{1} \\left(h_{2} - h_{1}\\right) + \\dot{m}_{9} \\left(h_{4} - h_{9}\\right) }\\\\\n    &={ \\left( 0.10246\\ \\frac{\\mathrm{kg}}{\\mathrm{s}} \\right) \\left(\\left( 408.55\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 387.79\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)\\right) + \\left( 0.11985\\ \\frac{\\mathrm{kg}}{\\mathrm{s}} \\right) \\left(\\left( 422.97\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 407.85\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)\\right) }\\\\\n    &={  3.94\\ \\frac{\\mathrm{kJ}}{\\mathrm{s}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"41":{"data":{"text/markdown":" COP: Desired/Cost","text/plain":"<IPython.core.display.Markdown object>"}},"42":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ COP_{R} }&={ \\frac{\\dot{Q}_{in}}{\\dot{W}_{net}} }\\\\\n    &={ \\frac{\\left( 18\\ \\mathrm{kW} \\right)}{\\left( 3.94\\ \\frac{\\mathrm{kJ}}{\\mathrm{s}} \\right)} }\\\\\n    &={  4.5685\\ \\frac{\\mathrm{kW} \\cdot \\mathrm{s}}{\\mathrm{kJ}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"5":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { x_{6} }&={ r134a.x(p[6],h[6]) } = { 0.16968\\  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"6":{"data":{"text/markdown":"#### State 7","text/plain":"<IPython.core.display.Markdown object>"}},"7":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { h_{7} }&={ r134a.h(p[7],x=0) } = { 212.11\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"8":{"data":{"text/markdown":"### State 8","text/plain":"<IPython.core.display.Markdown object>"}},"9":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { h_{8} }&={ h_{7} } = { 212.11\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}}},"pos":12,"start":1602684921711,"state":"done","type":"cell"}
{"cell_type":"code","end":1602684922531,"exec_count":6,"id":"457caf","input":"# Solved in Part (b)\nWdot_net = Wdot_net\n\ndisplay.Calculations(locals());","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { \\dot{W}_{net} }&={ \\dot{W}_{net} } = { 3.94\\ \\frac{\\mathrm{kJ}}{\\mathrm{s}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}}},"pos":14,"start":1602684922523,"state":"done","type":"cell"}
{"cell_type":"code","end":1602684922630,"exec_count":7,"id":"1ee08b","input":"# Remaining properties\nfor i in range(1,10):\n    states.fix(i, r134a)","kernel":"python3","pos":16,"start":1602684922535,"state":"done","type":"cell"}
{"cell_type":"code","end":1602684926490,"exec_count":8,"id":"855162","input":"pv = r134a.pv_diagram()\npv.ax.set_ylim(bottom=100, top=1000)\n\npv.plot_state(states[1],label_loc='south east')\npv.plot_state(states[2],label_loc='north east')\npv.plot_state(states[3],label_loc='south west')\npv.plot_state(states[4],label_loc='north east')\npv.plot_state(states[5],label_loc='north west')\npv.plot_state(states[6],label_loc='south east')\npv.plot_state(states[7],label_loc='west')\npv.plot_state(states[8],label_loc='south west')\npv.plot_state(states[9],label_loc='south east')\n\npv.plot_process(states[1],states[2],path='isentropic')\npv.plot_process(states[2],states[9],path='isobaric')\npv.plot_process(states[3],states[9],path='isobaric')\npv.plot_process(states[9],states[4],path='isentropic');\npv.plot_process(states[4],states[5],path='isobaric',label='condenser',label_pos=.75)\npv.plot_process(states[5],states[6],path='isenthalpic',label='throttle',label_pos=.7,labelprops=dict(offset=-5))\npv.plot_process(states[6],states[7],path='isobaric',label='flash')\npv.plot_process(states[6],states[3],path='isobaric',label='flash');\npv.plot_process(states[7],states[8],path='isenthalpic',label='throttle',label_pos=.65,labelprops=dict(offset=-3))\npv.plot_process(states[8],states[1],path='isobaric',label='evaporator',label_pos=.3,labelprops=dict(va='top'));\n\n# Plot Reference Isotherms for refrigerated space and surroundings\n# Refrigerated space\npv.plot_isotherm(T_L,color='blue')\n# Surrounding temperature\npv.plot_isotherm(T_H,color='red');","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"image/png":"3478a88206dedc43cb23552b3e2600e8b60ed0ee","text/plain":"<Figure size 720x480 with 1 Axes>"},"metadata":{"image/png":{"height":434,"width":656},"needs_background":"light"}}},"pos":17,"start":1602684922643,"state":"done","type":"cell"}
{"cell_type":"code","end":1602685343054,"exec_count":10,"id":"a5d704","input":"Ts = r134a.Ts_diagram()\nTs.ax.set_ylim(bottom=-30, top=40)\nTs.ax.set_xlim(left=.8, right=1.8)\n\nTs.plot_state(states[1],label_loc='south east')\nTs.plot_state(states[2],label_loc='north east')\nTs.plot_state(states[3],label_loc='south west')\nTs.plot_state(states[4],label_loc='north east')\nTs.plot_state(states[5],label_loc='north west')\nTs.plot_state(states[6],label_loc='south east')\nTs.plot_state(states[7],label_loc='west')\nTs.plot_state(states[8],label_loc='south west')\nTs.plot_state(states[9],label_loc='south east')\n\nTs.plot_process(states[1],states[2],path='isentropic',label='compressor',labelprops=dict(va='top'))\nTs.plot_process(states[2],states[9],path='isobaric',arrow=False)\nTs.plot_process(states[3],states[9],path='isobaric')\nTs.plot_process(states[9],states[4],path='isentropic',label='compressor',labelprops=dict(va='top'));\nTs.plot_process(states[4],states[5],path='isobaric',label='condenser')\nTs.plot_process(states[5],states[6],path='isenthalpic',label='throttle')\nTs.plot_process(states[6],states[7],path='isobaric',label='flash')\nTs.plot_process(states[6],states[3],path='isobaric',label='flash');\nTs.plot_process(states[7],states[8],path='isenthalpic',label='throttle')\nTs.plot_process(states[8],states[1],path='isobaric',label='evaporator');\n\n# Plot Reference Isotherms for refrigerated space and surroundings\nTs.plot_isotherm(T_L,color='blue', label='$T_L$', label_pos=.1)\nTs.plot_isotherm(T_H,color='red', label='$T_H$', label_pos=.1);","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"image/png":"02b86d80d3717f5417dc8cc9e758b33eee2f9f6c","text/plain":"<Figure size 720x480 with 1 Axes>"},"metadata":{"image/png":{"height":440,"width":648},"needs_background":"light"}}},"pos":18,"start":1602685339148,"state":"done","type":"cell"}
{"cell_type":"code","id":"1bd026","input":"","metadata":{"jupyter":{"outputs_hidden":false}},"pos":19,"type":"cell"}
{"cell_type":"markdown","id":"17ecf5","input":"### (c) Net Work","pos":13,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"2235fb","input":"### Given Parameters\nWe now define variables to hold our known values.","pos":5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"4b2ecf","input":"### (b) $COP_R$","pos":11,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b554e4","input":"### Diagrams","pos":15,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b7c89e","input":"### (a) Pressures in condenser and evaporator","pos":9,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"bc983f","input":"### Assumptions\n- Ideal work devices\n- Saturated vapor at evaporator exit\n- Saturated liquid at condenser exit\n- Flash chamber exits are saturated vapor and liquid\n- Isobaric heat exchangers\n- Negligible changes in kinetic energy\n- Negligible changes in potential energy","pos":7,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e45d36","input":"## Solution\n","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"eea001","input":"# Example 11.5: Multistage Compression with Intercooling\n\n*John F. Maddox, Ph.D., P.E.<br>\nUniversity of Kentucky - Paducah Campus<br>\nME 321: Engineering Thermodynamics II<br>*","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"fd86c5","input":"### Python Initialization\nWe'll start by importing the libraries we will use for our analysis and initializing dictionaries to hold the properties we will be usings.","pos":3,"state":"done","type":"cell"}
{"id":0,"time":1602684878750,"type":"user"}
{"last_load":1602684879716,"type":"file"}