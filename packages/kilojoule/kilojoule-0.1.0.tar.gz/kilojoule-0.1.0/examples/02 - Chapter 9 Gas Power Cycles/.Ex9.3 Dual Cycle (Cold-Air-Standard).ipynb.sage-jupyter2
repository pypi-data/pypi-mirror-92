{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":80740352},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.9"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1600113288863,"exec_count":1,"id":"d741c7","input":"from thermoJFM import idealgas, Quantity, StatesTable, display\n\nproperties_dict = {\n    'T':'K',\n    'p':'kPa',\n    'v':'m^3/kg',\n    's':'kJ/kg/K',\n}\nstates = StatesTable(properties_dict, unit_system='SI_K')\nfor property in states.properties:\n    locals()[property] = states.dict[property]\n    \nair = idealgas.Properties('Air',unit_system='SI_K')","kernel":"python3","metadata":{"jupyter":{}},"pos":4,"start":1600113281339,"state":"done","type":"cell"}
{"cell_type":"code","end":1600113289012,"exec_count":2,"id":"70e907","input":"T[1] = Quantity(300,'K')  # Inlet Temperature\np[1] = Quantity(1,'bar')  # Inlet pressure\nr = Quantity(10,'')       # Compression ratio\np_max = Quantity(50,'bar')# Max pressure\nT_max = Quantity(2000,'K')# Max Temperature\n\ndisplay.Calculations(locals(),comments=True);","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/latex":"\\begin{align}{ T_{1} }&={  300\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"1":{"data":{"text/latex":"\\begin{align}{ p_{1} }&={ \\left( 1\\ \\mathrm{bar} \\right) } = { 100.0\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"2":{"data":{"text/latex":"\\begin{align}{ r }&={  10\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"3":{"data":{"text/latex":"\\begin{align}{ p_{max} }&={  50\\ \\mathrm{bar}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"4":{"data":{"text/latex":"\\begin{align}{ T_{max} }&={  2000\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":6,"start":1600113288878,"state":"done","type":"cell"}
{"cell_type":"code","end":1600113289107,"exec_count":3,"id":"1ded2d","input":"# Ideal Gas\nR = air.R()\n\n# Constant thermal properties evaluated at room temperature\nT_room = Quantity(25,'degC')\nc_v = air.Cv(T=T_room)\nc_p = air.Cp(T=T_room)\nk = air.k(T=T_room)\n\n# Maximum temperature and pressure\np[3] = p_max\np[4] = p_max\nT[4] = T_max\n\ndisplay.Calculations(locals(),comments=True);","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/markdown":" Ideal Gas","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/latex":"\\begin{align}{ R }&={ \\mathrm{air.R}\\left(\\right) } = { 0.28705\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"10":{"data":{"text/latex":"\\begin{align}{ T_{4} }&={ T_{max} } = { 2000\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"2":{"data":{"text/markdown":" Constant thermal properties evaluated at room temperature","text/plain":"<IPython.core.display.Markdown object>"}},"3":{"data":{"text/latex":"\\begin{align}{ T_{room} }&={  25\\ \\mathrm{°C}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"4":{"data":{"text/latex":"\\begin{align}{ c_{v} }&={ \\mathrm{air.Cv}\\left(\\mathrm{T}=T_{room}\\right) } = { 0.71768\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"5":{"data":{"text/latex":"\\begin{align}{ c_{p} }&={ \\mathrm{air.Cp}\\left(\\mathrm{T}=T_{room}\\right) } = { 1.0047\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"6":{"data":{"text/latex":"\\begin{align}{ k }&={ \\mathrm{air.k}\\left(\\mathrm{T}=T_{room}\\right) } = { 1.4\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"7":{"data":{"text/markdown":" Maximum temperature and pressure","text/plain":"<IPython.core.display.Markdown object>"}},"8":{"data":{"text/latex":"\\begin{align}{ p_{3} }&={ p_{max} } = { 5000.0\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"9":{"data":{"text/latex":"\\begin{align}{ p_{4} }&={ p_{max} } = { 5000.0\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":8,"start":1600113289028,"state":"done","type":"cell"}
{"cell_type":"code","end":1600113289683,"exec_count":4,"id":"2de8a4","input":"# 1-2) Isentropy compression: Isentropic Ideal Gas Relations\nT[2] = T[1]*r**(k-1)\np[2] = p[1]*r**k\n\n# 2-3) Constant volume heat addition: Ideal Gas law at both states\nT[3] = T[2]*p[3]/p[2]\n\n# 3-4) Constant pressure heat addition: We already know $T_4$ and $p_4$\n\n# 4-5) Isentropic Expansion: Isentropic Ideal Gas Relations\nv[1] = R*T[1]/p[1]\nv[5] = v[1]\nv[4] = R*T[4]/p[4]\nT[5] = T[4]*(v[4]/v[5])**(k-1)\np[5] = R*T[5]/v[5]\n\ndisplay.Calculations(locals(),comments=True);\nstates.display()","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/markdown":" 1-2) Isentropy compression: Isentropic Ideal Gas Relations","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/latex":"\\begin{align}{ T_{2} }&={ T_{1} r^{k - 1} }\\\\&={ \\left( 300\\ \\mathrm{K} \\right) \\left( 10\\ \\right)^{\\left( 1.4\\ \\right) -  1 } }\\\\&={  753.52\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"10":{"data":{"text/latex":"\\begin{align}{ T_{5} }&={ T_{4} \\left(\\frac{v_{4}}{v_{5}}\\right)^{k - 1} }\\\\&={ \\left( 2000\\ \\mathrm{K} \\right) \\left(\\frac{\\left( 0.11482\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}} \\right)}{\\left( 0.86116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}} \\right)}\\right)^{\\left( 1.4\\ \\right) -  1 } }\\\\&={  893.36\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"11":{"data":{"text/latex":"\\begin{align}{ p_{5} }&={ \\frac{R T_{5}}{v_{5}} }\\\\&={ \\frac{\\left( 0.28705\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)} \\right) \\left( 893.36\\ \\mathrm{K} \\right)}{\\left( 0.86116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}} \\right)} }\\\\&={  297.79\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"12":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [K]</th>\n      <th>p [kPa]</th>\n      <th>v [m³/kg]</th>\n      <th>s [kJ/K/kg]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>300.000000</td>\n      <td>100.000000</td>\n      <td>0.861158</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>753.521630</td>\n      <td>2511.738765</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1500.000000</td>\n      <td>5000.000000</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2000.000000</td>\n      <td>5000.000000</td>\n      <td>0.114821</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>893.362734</td>\n      <td>297.787578</td>\n      <td>0.861158</td>\n      <td>-</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"}},"2":{"data":{"text/latex":"\\begin{align}{ p_{2} }&={ p_{1} r^{k} }\\\\&={ \\left( 100.0\\ \\mathrm{kPa} \\right) \\left( 10\\ \\right)^{\\left( 1.4\\ \\right)} }\\\\&={  2511.7\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"3":{"data":{"text/markdown":" 2-3) Constant volume heat addition: Ideal Gas law at both states","text/plain":"<IPython.core.display.Markdown object>"}},"4":{"data":{"text/latex":"\\begin{align}{ T_{3} }&={ \\frac{T_{2} p_{3}}{p_{2}} }\\\\&={ \\frac{\\left( 753.52\\ \\mathrm{K} \\right) \\left( 5000.0\\ \\mathrm{kPa} \\right)}{\\left( 2511.7\\ \\mathrm{kPa} \\right)} }\\\\&={  1500.0\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"5":{"data":{"text/markdown":" 3-4) Constant pressure heat addition: We already know $T_4$ and $p_4$","text/plain":"<IPython.core.display.Markdown object>"}},"6":{"data":{"text/markdown":" 4-5) Isentropic Expansion: Isentropic Ideal Gas Relations","text/plain":"<IPython.core.display.Markdown object>"}},"7":{"data":{"text/latex":"\\begin{align}{ v_{1} }&={ \\frac{R T_{1}}{p_{1}} }\\\\&={ \\frac{\\left( 0.28705\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)} \\right) \\left( 300\\ \\mathrm{K} \\right)}{\\left( 100.0\\ \\mathrm{kPa} \\right)} }\\\\&={  0.86116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"8":{"data":{"text/latex":"\\begin{align}{ v_{5} }&={ v_{1} } = { 0.86116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"9":{"data":{"text/latex":"\\begin{align}{ v_{4} }&={ \\frac{R T_{4}}{p_{4}} }\\\\&={ \\frac{\\left( 0.28705\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)} \\right) \\left( 2000\\ \\mathrm{K} \\right)}{\\left( 5000.0\\ \\mathrm{kPa} \\right)} }\\\\&={  0.11482\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":10,"start":1600113289120,"state":"done","type":"cell"}
{"cell_type":"code","end":1600113289716,"exec_count":5,"id":"12797c","input":"v[3] = R*T[3]/p[3]\nr_c = v[4]/v[3]\n\ndisplay.Calculations(locals(),comments=True);","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/latex":"\\begin{align}{ v_{3} }&={ \\frac{R T_{3}}{p_{3}} }\\\\&={ \\frac{\\left( 0.28705\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)} \\right) \\left( 1500.0\\ \\mathrm{K} \\right)}{\\left( 5000.0\\ \\mathrm{kPa} \\right)} }\\\\&={  0.086116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"1":{"data":{"text/latex":"\\begin{align}{ r_{c} }&={ \\frac{v_{4}}{v_{3}} }\\\\&={ \\frac{\\left( 0.11482\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}} \\right)}{\\left( 0.086116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}} \\right)} }\\\\&={  1.3333\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":12,"start":1600113289698,"state":"done","type":"cell"}
{"cell_type":"code","end":1600113289787,"exec_count":6,"id":"bee1a4","input":"# 1st Law 2$\\to$3\nq_2_to_3 = c_v*(T[3]-T[2])\n\n# 1st Law 3$\\to$4\nq_3_to_4 = c_p*(T[4]-T[3])\n\n# Total heat input\nq_in = q_2_to_3 + q_3_to_4 \n\ndisplay.Calculations(locals(),comments=True);","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/markdown":" 1st Law 2$\\to$3","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/latex":"\\begin{align}{ q_{2\\to3} }&={ c_{v} \\left(T_{3} - T_{2}\\right) }\\\\&={ \\left( 0.71768\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)} \\right) \\left(\\left( 1500.0\\ \\mathrm{K} \\right) - \\left( 753.52\\ \\mathrm{K} \\right)\\right) }\\\\&={  535.73\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"2":{"data":{"text/markdown":" 1st Law 3$\\to$4","text/plain":"<IPython.core.display.Markdown object>"}},"3":{"data":{"text/latex":"\\begin{align}{ q_{3\\to4} }&={ c_{p} \\left(T_{4} - T_{3}\\right) }\\\\&={ \\left( 1.0047\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)} \\right) \\left(\\left( 2000\\ \\mathrm{K} \\right) - \\left( 1500.0\\ \\mathrm{K} \\right)\\right) }\\\\&={  502.36\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"4":{"data":{"text/markdown":" Total heat input","text/plain":"<IPython.core.display.Markdown object>"}},"5":{"data":{"text/latex":"\\begin{align}{ q_{in} }&={ q_{2\\to3} + q_{3\\to4} }\\\\&={ \\left( 535.73\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) + \\left( 502.36\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  1038.1\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":14,"start":1600113289724,"state":"done","type":"cell"}
{"cell_type":"code","end":1600113289880,"exec_count":7,"id":"14c339","input":"# 1st Law 5$\\to$1\nq_5_to_1 = c_v*(T[1]-T[5])\nq_out = -q_5_to_1\n\n# 1st Law Full Cycle\nw_net = q_in-q_out\n\ndisplay.Calculations(locals(),comments=True);","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/markdown":" 1st Law 5$\\to$1","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/latex":"\\begin{align}{ q_{5\\to1} }&={ c_{v} \\left(T_{1} - T_{5}\\right) }\\\\&={ \\left( 0.71768\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)} \\right) \\left(\\left( 300\\ \\mathrm{K} \\right) - \\left( 893.36\\ \\mathrm{K} \\right)\\right) }\\\\&={  -425.84\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"2":{"data":{"text/latex":"\\begin{align}{ q_{out} }&={ - q_{5\\to1} }\\\\&={ - \\left( -425.84\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  425.84\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"3":{"data":{"text/markdown":" 1st Law Full Cycle","text/plain":"<IPython.core.display.Markdown object>"}},"4":{"data":{"text/latex":"\\begin{align}{ w_{net} }&={ q_{in} - q_{out} }\\\\&={ \\left( 1038.1\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 425.84\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  612.25\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":16,"start":1600113289792,"state":"done","type":"cell"}
{"cell_type":"code","end":1600113289899,"exec_count":8,"id":"1eaf87","input":"# Thermal efficiency\neta_th = w_net/q_in\n\ndisplay.Calculations(locals(),comments=True);","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/markdown":" Thermal efficiency","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/latex":"\\begin{align}{ \\eta_{th} }&={ \\frac{w_{net}}{q_{in}} }\\\\&={ \\frac{\\left( 612.25\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)}{\\left( 1038.1\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)} }\\\\&={  0.58978\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":18,"start":1600113289886,"state":"done","type":"cell"}
{"cell_type":"code","end":1600113289998,"exec_count":9,"id":"be4874","input":"# Mean Effective Pressure\nv_max = v[1]\nv[2] = v[3]\nv_min = v[2]\nMEP = w_net/(v_max-v_min)\n\ndisplay.Calculations(locals(),comments=True);","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/markdown":" Mean Effective Pressure","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/latex":"\\begin{align}{ v_{max} }&={ v_{1} } = { 0.86116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"2":{"data":{"text/latex":"\\begin{align}{ v_{2} }&={ v_{3} } = { 0.086116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"3":{"data":{"text/latex":"\\begin{align}{ v_{min} }&={ v_{2} } = { 0.086116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"4":{"data":{"text/latex":"\\begin{align}{ MEP }&={ \\frac{w_{net}}{v_{max} - v_{min}} }\\\\&={ \\frac{\\left( 612.25\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)}{\\left( 0.86116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}} \\right) - \\left( 0.086116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}} \\right)} }\\\\&={  789.96\\ \\frac{\\mathrm{kJ}}{\\mathrm{m}^{3}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":20,"start":1600113289903,"state":"done","type":"cell"}
{"cell_type":"code","end":1600113293907,"exec_count":12,"id":"b1ff52","input":"display.Summary(locals());","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/latex":"\\begin{align}{ MEP }&={  789.96\\ \\frac{\\mathrm{kJ}}{\\mathrm{m}^{3}}  }&{ R }&={  0.28705\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }&{ T_{max} }&={  2000\\ \\mathrm{K}  }\\\\{ T_{room} }&={  25\\ \\mathrm{°C}  }&{ c_{p} }&={  1.0047\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }&{ c_{v} }&={  0.71768\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\\\{ \\eta_{th} }&={  0.58978\\  }&{ k }&={  1.4\\  }&{ p_{max} }&={  50\\ \\mathrm{bar}  }\\\\{ q_{2 to 3} }&={  535.73\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }&{ q_{3 to 4} }&={  502.36\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }&{ q_{5 to 1} }&={  -425.84\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\\\{ q_{in} }&={  1038.1\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }&{ q_{out} }&={  425.84\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }&{ r }&={  10\\  }\\\\{ r_{c} }&={  1.3333\\  }&{ v_{max} }&={  0.86116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}}  }&{ v_{min} }&={  0.086116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}}  }\\\\{ w_{net} }&={  612.25\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }&{  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"1":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [K]</th>\n      <th>p [kPa]</th>\n      <th>v [m³/kg]</th>\n      <th>s [kJ/K/kg]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>300.000000</td>\n      <td>100.000000</td>\n      <td>0.861158</td>\n      <td>6.707700</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>753.521630</td>\n      <td>2511.738765</td>\n      <td>0.086116</td>\n      <td>6.707700</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1500.000000</td>\n      <td>5000.000000</td>\n      <td>0.086116</td>\n      <td>7.201794</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2000.000000</td>\n      <td>5000.000000</td>\n      <td>0.114821</td>\n      <td>7.490837</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>893.362734</td>\n      <td>297.787578</td>\n      <td>0.861158</td>\n      <td>7.490837</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"}}},"pos":26,"start":1600113293859,"state":"done","type":"cell"}
{"cell_type":"code","end":1600113293945,"exec_count":13,"id":"cf8e6d","input":"display.Summary(locals(),['r_c','q_in','w_net','eta_th','MEP']);","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/latex":"\\begin{align}{ r_{c} }&={  1.3333\\  }\\\\{ q_{in} }&={  1038.1\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\\\{ w_{net} }&={  612.25\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\\\{ \\eta_{th} }&={  0.58978\\  }\\\\{ MEP }&={  789.96\\ \\frac{\\mathrm{kJ}}{\\mathrm{m}^{3}}  }\\\\{  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":27,"start":1600113293915,"state":"done","type":"cell"}
{"cell_type":"code","end":1600113373461,"exec_count":15,"id":"8178cf","input":"from math import log\n\n# Add entropy to the property table\nstates.add_property('s',units='kJ/kg/K')\ns = states.dict['s']\n\npv = air.pv_diagram()\n\ns[1] = air.s(T=T[1],p=p[1])\nfor i in [2,3,4,5]:\n    #s[i] = s[1] + c_p*log(T[i]/T[1]) - R*log(p[i]/p[1])\n    s[i] = air.s(T=T[i],p=p[i])\n\n# plot each state on the p,v diagram and calculate the entropy at each state\nfor i in range(1,6):\n    pv.plot_state(states[i],label_loc='north east')\n\n# plot the process paths\npv.plot_process(states[1],states[2],path='isentropic')\npv.plot_process(states[2],states[3],path='isochoric')\npv.plot_process(states[3],states[4],path='isobaric')\npv.plot_process(states[4],states[5],path='isentropic')\npv.plot_process(states[5],states[1],path='isochoric');","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"name":"stdout","text":"None\n"},"1":{"data":{"image/png":"429356b2bb88926ef6d1ab82c11302f88a200f1f","text/plain":"<Figure size 720x480 with 1 Axes>"},"metadata":{"image/png":{"height":436,"width":644},"needs_background":"light"}}},"pos":23,"start":1600113372006,"state":"done","type":"cell"}
{"cell_type":"code","end":1600113379958,"exec_count":16,"id":"2591f8","input":"Ts = air.Ts_diagram()\n\nfor i in range(1,6):\n    Ts.plot_state(states[i],label_loc='north east')\n  \n \nTs.plot_process(states[1],states[2],path='isentropic')\nTs.plot_process(states[2],states[3],path='isochoric')\nTs.plot_process(states[3],states[4],path='isobaric')\nTs.plot_process(states[4],states[5],path='isentropic')\nTs.plot_process(states[5],states[1],path='isochoric');","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"name":"stdout","text":"None\n"},"1":{"data":{"image/png":"cf3ffcd01c017fe5d59452d174c0c909ffa66614","text/plain":"<Figure size 720x480 with 1 Axes>"},"metadata":{"image/png":{"height":436,"width":643},"needs_background":"light"}}},"pos":25,"start":1600113378098,"state":"done","type":"cell"}
{"cell_type":"code","id":"cea34a","input":"","metadata":{"jupyter":{"outputs_hidden":false}},"pos":28,"type":"cell"}
{"cell_type":"markdown","id":"2fdeb3","input":"# Example 9.3: Dual Cycle (Cold-Air-Standard)\n\n*John F. Maddox, Ph.D., P.E.<br>\nUniversity of Kentucky - Paducah Campus<br>\nME 321: Engineering Thermodynamics II<br>*","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"3b87c1","input":"### Given Parameters\nWe now define variables to hold our known values.","pos":5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"3b8fb5","input":"#### (b) Cut-off ratio","pos":11,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"53170a","input":"### Plotting\n*Note: The plotting library using the property tables to draw the process paths, which inherently assumes variable specific heat (i.e. real-fluid or air-standard assumptions).  If the library is used to draw process paths between states that were obtained using constant specific heat (cold-air-standard assumptions) there will be inconsistencies between the state points and the process paths.*\n\nIn order to plot the paths of the cycle on the $p$-$v$ diagram and states on the $T$-$s$ diagram, we need discrete values for the specifc enthalpy and entropy at each state rather than just the changes in properties we calculated above.  To do this we can pick an arbritrary value for the enthalpy and entropy at any state, then caclulate the enthalpy and entropy at the rest of the states relative to the reference point. For this case, we will look up the properties from the tables for state 1 and use that as our starting point.","pos":21,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"6ff1e8","input":"## Solution\n","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"76b4a2","input":"### Python Initialization\nWe'll start by importing the libraries we will use for our analysis and initializing dictionaries to hold the properties we will be usings.","pos":3,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"851504","input":"#### (b) $T$-$s$ diagram\nNote: the isentropic lines are not vertical in this diagram because the entropies were \ncalculated for variable specific heat, but all other properties were calculated using the\ncold-air-standard assumptions (constant specific heat).  Therefore the errors resulting from the constant specific heat assumption are evident in the skewed shape of the cycle on the $T$-$s$ diagram.","pos":24,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"8af0ca","input":"#### (a) $p$-$v$\nNote: the isentropic lines do not line up exactly with the states in this diagram because the entropies were calculated for variable specific heat, but all other properties were calculated using the\ncold-air-standard assumptions (constant specific heat).  ","pos":22,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"92ce43","input":"#### (d) $w_{net}$","pos":15,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b4b2d6","input":"#### (f) MEP","pos":19,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c17141","input":"#### (e) $\\eta_{th}$","pos":17,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d84ab3","input":"#### (c) $T$ and $p$","pos":9,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"df7ce9","input":"### Assumptions\n- Cold-air-standard Analysis\n  - Ideal gas\n  - Constant specific heat (evaluated at $25^\\circ\\text{C}$)\n- Maximum pressure occurs at states 3 and 4\n- Maximum temperature occurs at state 4\n- Negligible changes in kinetic energy\n- Negligible changes in potential energy","pos":7,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e8bf31","input":"## Problem Statement\n\nA Dual cycle with intake conditions of $300\\ \\text{K}$ and $1\\ \\text{bar}$ has a compression ratio of $10$, a maximum pressure of $50\\ \\text{bar}$ and a maximum temperature of $2000\\ \\text{K}$.  Using a **cold-air-standard analysis**, find the cutoff ratio, net work output (kJ/kg), heat input, and cycle efficiency  \n\n* (a) $p$-$v$ diagram\n* (b) $T$-$s$ diagram\n* (c) $T$,$p$ at each state\n* (d) $r_c$\n* (e) $q_{in}$\n* (f) $w_{net}$\n* (g) $\\eta_{th}$\n* (h) $\\text{MEP}$","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"f7cf65","input":"#### (c) Heat input","pos":13,"state":"done","type":"cell"}
{"id":0,"time":1600226177871,"type":"user"}
{"last_load":1600113262544,"type":"file"}