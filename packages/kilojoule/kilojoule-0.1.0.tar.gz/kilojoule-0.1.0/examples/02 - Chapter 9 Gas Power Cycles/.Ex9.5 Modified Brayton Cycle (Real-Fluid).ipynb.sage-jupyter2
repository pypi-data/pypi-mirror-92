{"attachments":{"8b29a572-3455-46db-82b7-cc0f5f5bd785.png":{"type":"sha1","value":"38ae2f54bc77bb02f219d1ce9d50ac04b5b24ecb"}},"cell_type":"markdown","id":"25e20f","input":"## Problem Statement\n\nA Brayton cycle with intercooling, reheat, and regeneration has the following properties:\n\\begin{align}\nT_1&=300\\ \\mathrm{K} & T_3&=350\\ \\mathrm{K} & T_6&=T_8=1400\\ \\mathrm{K} \\\\\np_1 &= 1\\ \\mathrm{bar}  & \\frac{p_2}{p_1}&=\\frac{p_4}{p_3}=\\sqrt{10} & p_7&=\\sqrt{10}\\ \\mathrm{bar}\\\\\n\\eta_{c,1} &= \\eta_{c,2} = 0.8 & \\eta_{t,1}&=\\eta_{t,2}=0.8 & \\eta_{reg}&= 0.85\n\\end{align}\nDetermine:\n* (a) $w_{net}$\n* (b) $q_{in}$\n* (c) $\\eta_{th}$\n* (d) $BWR$\n\n![image.png](attachment:8b29a572-3455-46db-82b7-cc0f5f5bd785.png)","pos":1,"state":"done","type":"cell"}
{"backend_state":"ready","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":80789504},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.2"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"6b934d","input":"","metadata":{"jupyter":{"outputs_hidden":false}},"pos":25,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":1,"id":"4f29a5","input":"from thermoJFM import realfluid, Quantity, StatesTable, display\nfrom math import log, sqrt\n\nproperties_dict = {\n    'T':'K',         # Temperature\n    'p':'kPa',       # pressure\n    'v':'m^3/kg',    # specific volume\n    'h':'kJ/kg',     # specific enthalpy\n    's':'kJ/kg/K',   # specific entropy\n}\nstates = StatesTable(properties_dict, unit_system='SI_K')\nfor property in states.properties:\n    locals()[property] = states.dict[property]\n    \nair = realfluid.Properties('Air',unit_system='SI_K')","metadata":{"jupyter":{}},"pos":4,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":10,"id":"2cd320","input":"pv = air.pv_diagram(saturation=False)\n\n# plot each state on the p,v diagram\nfor i in [1,2,3,4,5,6,7,8,9,10]:\n    pv.plot_state(states[i],label_loc='north east')\n\n\n# plot the process paths\npv.plot_process(states[1],states['2s'],path='isentropic',linestyle='dashed')\npv.plot_process(states[1],states[2],path='isentropic efficiency')\npv.plot_process(states['2s'],states[2],path='isobaric',linestyle='dashed')\npv.plot_process(states[2],states[3],path='isobaric')\npv.plot_process(states[3],states['4s'],path='isentropic',linestyle='dashed')\npv.plot_process(states[3],states[4],path='isentropic efficiency')\npv.plot_process(states['4s'],states[4],path='isobaric',linestyle='dashed')\npv.plot_process(states[4],states[5],path='isobaric')\npv.plot_process(states[5],states[6],path='isobaric')\npv.plot_process(states[6],states['7s'],path='isentropic',linestyle='dashed')\npv.plot_process(states[6],states[7],path='nonideal')\npv.plot_process(states['7s'],states[7],path='isobaric',linestyle='dashed')\npv.plot_process(states[7],states[8],path='isobaric')\npv.plot_process(states[8],states['9s'],path='isentropic',linestyle='dashed')\npv.plot_process(states[8],states[9],path='nonideal');\npv.plot_process(states['9s'],states[9],path='isobaric',linestyle='dashed')\npv.plot_process(states[9],states[10],path='isobaric');\npv.plot_process(states[10],states[1],path='isobaric',linestyle='dashed');","metadata":{"jupyter":{}},"output":{"0":{"data":{"image/png":"d5d6c0f60e61ec57c68481337302333c412de7f9","text/plain":"<Figure size 720x480 with 1 Axes>"},"exec_count":10,"metadata":{"image/png":{"height":436,"width":644},"needs_background":"light"},"output_type":"execute_result"}},"pos":22,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":11,"id":"bc98c7","input":"Ts = air.Ts_diagram(saturation=False)\n\n# plot each state on the p,v diagram\nfor i in [1,2,3,4,5,6,7,8,9,10]:\n    Ts.plot_state(states[i],label_loc='south east')\n    \n# plot the process paths\nTs.plot_process(states[1],states['2s'],path='isentropic',linestyle='dashed')\nTs.plot_process(states[1],states[2],path='nonideal')\nTs.plot_process(states['2s'],states[2],path='isobaric',linestyle='dashed')\nTs.plot_process(states[2],states[3],path='isobaric')\nTs.plot_process(states[3],states['4s'],path='isentropic',linestyle='dashed')\nTs.plot_process(states[3],states[4],path='nonideal')\nTs.plot_process(states['4s'],states[4],path='isobaric',linestyle='dashed')\nTs.plot_process(states[4],states[5],path='isobaric')\nTs.plot_process(states[5],states[6],path='isobaric')\nTs.plot_process(states[6],states['7s'],path='isentropic',linestyle='dashed')\nTs.plot_process(states[6],states[7],path='nonideal')\nTs.plot_process(states['7s'],states[7],path='isobaric',linestyle='dashed')\nTs.plot_process(states[7],states[8],path='isobaric')\nTs.plot_process(states[8],states['9s'],path='isentropic',linestyle='dashed')\nTs.plot_process(states[8],states[9],path='nonideal');\nTs.plot_process(states['9s'],states[9],path='isobaric',linestyle='dashed')\nTs.plot_process(states[9],states[10],path='isobaric');\nTs.plot_process(states[10],states[1],path='isobaric',linestyle='dashed');","metadata":{"jupyter":{}},"output":{"0":{"data":{"image/png":"c78714a43d9dc5aaaaf8657002eb565c5a706dc5","text/plain":"<Figure size 720x480 with 1 Axes>"},"exec_count":11,"metadata":{"image/png":{"height":427,"width":643},"needs_background":"light"},"output_type":"execute_result"}},"pos":24,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":2,"id":"9b6484","input":"T[1] = Quantity(300,'K')      # Compressor Inlet Temperature\nT[3] = Quantity(350,'K')\nT[6] = T[8] = Quantity(1400,'K')\np[1] = Quantity(1,'bar')      # Compressor Inlet pressure\nr_p = Quantity(sqrt(10),' ')   # Pressure ratio\np[7] = Quantity(sqrt(10),'bar')\neta_c = Quantity(0.8,'')      # Compressor Isentropioc Efficiency\neta_t = Quantity(0.8,'')      # Turbine Isentropic Efficiency\neta_reg = Quantity(0.85,'')   # Regenerator effectiveness\n\ndisplay.Summary(locals());","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/latex":"\\begin{align}{ \\eta_{c} }&={  0.8\\  }&{ \\eta_{reg} }&={  0.85\\  }&{ \\eta_{t} }&={  0.8\\  }\\\\{ r_{p} }&={  3.1623\\  }&{  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":2,"output_type":"execute_result"},"1":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [K]</th>\n      <th>p [kPa]</th>\n      <th>v [m³/kg]</th>\n      <th>h [kJ/kg]</th>\n      <th>s [kJ/K/kg]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>300</td>\n      <td>100</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>350</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1400</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>-</td>\n      <td>316.228</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1400</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"},"exec_count":2,"output_type":"execute_result"}},"pos":6,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":3,"id":"97e75a","input":"# Isobaric heat exchangers\np[2] = r_p*p[1]\np[3] = p[2]\np[4] = r_p*p[3]\np[5] = p[4]\np[6] = p[5]\np[8] = p[7]\np[9] = p[1]\np[10] = p[9]\n\ndisplay.Summary(locals());","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/latex":"\\begin{align}{ \\eta_{c} }&={  0.8\\  }&{ \\eta_{reg} }&={  0.85\\  }&{ \\eta_{t} }&={  0.8\\  }\\\\{ r_{p} }&={  3.1623\\  }&{  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":3,"output_type":"execute_result"},"1":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [K]</th>\n      <th>p [kPa]</th>\n      <th>v [m³/kg]</th>\n      <th>h [kJ/kg]</th>\n      <th>s [kJ/K/kg]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>300</td>\n      <td>100.000000</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>-</td>\n      <td>100.000000</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>-</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>350</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>-</td>\n      <td>1000.000000</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>-</td>\n      <td>1000.000000</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1400</td>\n      <td>1000.000000</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>-</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1400</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>-</td>\n      <td>100.000000</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"},"exec_count":3,"output_type":"execute_result"}},"pos":8,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":4,"id":"dd9f5a","input":"##### 1$\\to$2) Non-ideal compression\n# Inlet properties\nh[1] = air.h(T=T[1],p=p[1])\ns[1] = air.s(T=T[1],p=p[1])\n# Isentropic exit state: Isentropic Ideal Gas Relations\np['2s'] = p[2]\ns['2s'] = s[1]\nh['2s'] = air.h(p=p['2s'],s=s['2s'])\nT['2s'] = air.T(p=p['2s'],s=s['2s'])\n\n# Isentropic efficiency\nh[2] = h[1] + (h['2s']-h[1])/eta_c\nT[2] = air.T(h=h[2],p=p[1])\ns[2] = air.s(h=h[2],p=p[2])\n\n# First Law for compressor\nw_1_to_2 = (h[1]-h[2])\n\n\n##### 2$\\to$3) Intercooling\nh[3] = air.h(T=T[3],p=p[3])\ns[3] = air.s(T=T[3],p=p[3])\nq_2_to_3 = (h[3]-h[2])\n\n\n##### 3$\\to$4) Non-ideal compression\n# Isentropic exit state\np['4s'] = p[4]\ns['4s'] = s[3]\nh['4s'] = air.h(p=p['4s'],s=s['4s'])\nT['4s'] = air.T(p=p['4s'],s=s['4s'])\n\n# Isentropic efficiency\nh[4] = h[3] + (h['4s']-h[3])/eta_c\nT[4] = air.T(h=h[4],p=p[4])\ns[4] = air.s(h=h[4],p=p[4])\n\n# First Law for compressor\nw_3_to_4 = (h[3]-h[4])\n\n\n##### 4$\\to$5) Regenerator\n# Skip for now.  Need $h_9$ to analyze\n\n\n##### 5$\\to$6) Combustor 1 \n# Skip for now.  Need $h_5$ from regenerator analysis\n\n\n##### 6$\\to$7) Non-ideal expansion\nh[6] = air.h(T=T[6],p=p[6])\ns[6] = air.s(T=T[6],p=p[6])\n\n# Isentropic exit state\np['7s'] = p[7]\ns['7s'] = s[6]\nh['7s'] = air.h(p=p['7s'],s=s['7s'])\nT['7s'] = air.T(h=h['7s'],p=p['7s'])\n\n# Isentropic efficiency\nh[7] = h[6] - eta_t*(h[6]-h['7s'])\nT[7] = air.T(h=h[7],p=p[7])\ns[7] = air.s(p=p[7],h=h[7])\n\n# First law for turbine\nw_6_to_7 = (h[6]-h[7])\n\n\n##### 7$\\to$8) Combustor 2\nh[8] = air.h(T=T[8],p=p[8])\ns[8] = air.s(T=T[8],p=p[8])\nq_7_to_8 = h[8]-h[7]\n\n\n##### 8$\\to$9) Non-ideal expansion\n# Isentropic exit state\np['9s'] = p[9]\ns['9s'] = s[8]\nh['9s'] = air.h(p=p['9s'],s=s['9s'])\nT['9s'] = air.T(h=h['9s'],p=p[8])\n\n# Isentropic efficiency\nh[9] = h[8] - eta_t*(h[8]-h['9s'])\nT[9] = air.T(h=h[9],p=p[9])\ns[9] = air.s(h=h[9],p=p[9])\n\n# First law for turbine\nw_8_to_9 = (h[8]-h[9])\n\n\n###### $w_{net}$\nw_net = w_1_to_2 + w_3_to_4 + w_6_to_7 + w_8_to_9\n\ndisplay.Calculations(locals(),comments=True);\nstates.display()","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/markdown":"#### 1$\\to$2) Non-ideal compression","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"1":{"data":{"text/markdown":" Inlet properties","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"10":{"data":{"text/latex":"\\begin{align}{ h_{2} }&={ h_{1} + \\frac{h_{2s} - h_{1}}{\\eta_{c}} }\\\\&={ \\left( 426.3\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) + \\frac{\\left( 543.67\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 426.3\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)}{\\left( 0.8\\ \\right)} }\\\\&={  573.02\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"11":{"data":{"text/latex":"\\begin{align}{ T_{2} }&={ air.T(h=h[2],p=p[1]) } = { 444.99\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"12":{"data":{"text/latex":"\\begin{align}{ s_{2} }&={ air.s(h=h[2],p=p[2]) } = { 3.9586\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"13":{"data":{"text/markdown":" First Law for compressor","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"14":{"data":{"text/latex":"\\begin{align}{ w_{1\\to2} }&={ h_{1} - h_{2} }\\\\&={ \\left( 426.3\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 573.02\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  -146.72\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"15":{"data":{"text/markdown":"#### 2$\\to$3) Intercooling","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"16":{"data":{"text/latex":"\\begin{align}{ h_{3} }&={ air.h(T=T[3],p=p[3]) } = { 476.33\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"17":{"data":{"text/latex":"\\begin{align}{ s_{3} }&={ air.s(T=T[3],p=p[3]) } = { 3.7143\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"18":{"data":{"text/latex":"\\begin{align}{ q_{2\\to3} }&={ h_{3} - h_{2} }\\\\&={ \\left( 476.33\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 573.02\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  -96.684\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"19":{"data":{"text/markdown":"#### 3$\\to$4) Non-ideal compression","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"2":{"data":{"text/latex":"\\begin{align}{ h_{1} }&={ air.h(T=T[1],p=p[1]) } = { 426.3\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"20":{"data":{"text/markdown":" Isentropic exit state","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"21":{"data":{"text/latex":"\\begin{align}{ p_{4s} }&={ p_{4} } = { 1000.0\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"22":{"data":{"text/latex":"\\begin{align}{ s_{4s} }&={ s_{3} } = { 3.7143\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"23":{"data":{"text/latex":"\\begin{align}{ h_{4s} }&={ air.h(p=p['4s'],s=s['4s']) } = { 613.35\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"24":{"data":{"text/latex":"\\begin{align}{ T_{4s} }&={ air.T(p=p['4s'],s=s['4s']) } = { 484.9\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"25":{"data":{"text/markdown":" Isentropic efficiency","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"26":{"data":{"text/latex":"\\begin{align}{ h_{4} }&={ h_{3} + \\frac{h_{4s} - h_{3}}{\\eta_{c}} }\\\\&={ \\left( 476.33\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) + \\frac{\\left( 613.35\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 476.33\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)}{\\left( 0.8\\ \\right)} }\\\\&={  647.6\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"27":{"data":{"text/latex":"\\begin{align}{ T_{4} }&={ air.T(h=h[4],p=p[4]) } = { 518.01\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"28":{"data":{"text/latex":"\\begin{align}{ s_{4} }&={ air.s(h=h[4],p=p[4]) } = { 3.7827\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"29":{"data":{"text/markdown":" First Law for compressor","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"3":{"data":{"text/latex":"\\begin{align}{ s_{1} }&={ air.s(T=T[1],p=p[1]) } = { 3.8905\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"30":{"data":{"text/latex":"\\begin{align}{ w_{3\\to4} }&={ h_{3} - h_{4} }\\\\&={ \\left( 476.33\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 647.6\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  -171.26\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"31":{"data":{"text/markdown":"#### 4$\\to$5) Regenerator","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"32":{"data":{"text/markdown":" Skip for now.  Need $h_9$ to analyze","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"33":{"data":{"text/markdown":"#### 5$\\to$6) Combustor 1 ","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"34":{"data":{"text/markdown":" Skip for now.  Need $h_5$ from regenerator analysis","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"35":{"data":{"text/markdown":"#### 6$\\to$7) Non-ideal expansion","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"36":{"data":{"text/latex":"\\begin{align}{ h_{6} }&={ air.h(T=T[6],p=p[6]) } = { 1642.5\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"37":{"data":{"text/latex":"\\begin{align}{ s_{6} }&={ air.s(T=T[6],p=p[6]) } = { 4.8902\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"38":{"data":{"text/markdown":" Isentropic exit state","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"39":{"data":{"text/latex":"\\begin{align}{ p_{7s} }&={ p_{7} } = { 316.23\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"4":{"data":{"text/markdown":" Isentropic exit state: Isentropic Ideal Gas Relations","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"40":{"data":{"text/latex":"\\begin{align}{ s_{7s} }&={ s_{6} } = { 4.8902\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"41":{"data":{"text/latex":"\\begin{align}{ h_{7s} }&={ air.h(p=p['7s'],s=s['7s']) } = { 1238.1\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"42":{"data":{"text/latex":"\\begin{align}{ T_{7s} }&={ air.T(h=h['7s'],p=p['7s']) } = { 1057.1\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"43":{"data":{"text/markdown":" Isentropic efficiency","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"44":{"data":{"text/latex":"\\begin{align}{ h_{7} }&={ - \\eta_{t} \\left(h_{6} - h_{7s}\\right) + h_{6} }\\\\&={ - \\left( 0.8\\ \\right) \\left(\\left( 1642.5\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 1238.1\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)\\right) + \\left( 1642.5\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  1319.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"45":{"data":{"text/latex":"\\begin{align}{ T_{7} }&={ air.T(h=h[7],p=p[7]) } = { 1127.0\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"46":{"data":{"text/latex":"\\begin{align}{ s_{7} }&={ air.s(p=p[7],h=h[7]) } = { 4.9643\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"47":{"data":{"text/markdown":" First law for turbine","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"48":{"data":{"text/latex":"\\begin{align}{ w_{6\\to7} }&={ h_{6} - h_{7} }\\\\&={ \\left( 1642.5\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 1319.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  323.52\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"49":{"data":{"text/markdown":"#### 7$\\to$8) Combustor 2","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"5":{"data":{"text/latex":"\\begin{align}{ p_{2s} }&={ p_{2} } = { 316.23\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"50":{"data":{"text/latex":"\\begin{align}{ h_{8} }&={ air.h(T=T[8],p=p[8]) } = { 1642.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"51":{"data":{"text/latex":"\\begin{align}{ s_{8} }&={ air.s(T=T[8],p=p[8]) } = { 5.2208\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"52":{"data":{"text/latex":"\\begin{align}{ q_{7\\to8} }&={ h_{8} - h_{7} }\\\\&={ \\left( 1642.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 1319.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  322.96\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"53":{"data":{"text/markdown":"#### 8$\\to$9) Non-ideal expansion","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"54":{"data":{"text/markdown":" Isentropic exit state","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"55":{"data":{"text/latex":"\\begin{align}{ p_{9s} }&={ p_{9} } = { 100.0\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"56":{"data":{"text/latex":"\\begin{align}{ s_{9s} }&={ s_{8} } = { 5.2208\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"57":{"data":{"text/latex":"\\begin{align}{ h_{9s} }&={ air.h(p=p['9s'],s=s['9s']) } = { 1238.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"58":{"data":{"text/latex":"\\begin{align}{ T_{9s} }&={ air.T(h=h['9s'],p=p[8]) } = { 1057.0\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"59":{"data":{"text/markdown":" Isentropic efficiency","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"6":{"data":{"text/latex":"\\begin{align}{ s_{2s} }&={ s_{1} } = { 3.8905\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"60":{"data":{"text/latex":"\\begin{align}{ h_{9} }&={ - \\eta_{t} \\left(h_{8} - h_{9s}\\right) + h_{8} }\\\\&={ - \\left( 0.8\\ \\right) \\left(\\left( 1642.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 1238.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)\\right) + \\left( 1642.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  1318.8\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"61":{"data":{"text/latex":"\\begin{align}{ T_{9} }&={ air.T(h=h[9],p=p[9]) } = { 1126.9\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"62":{"data":{"text/latex":"\\begin{align}{ s_{9} }&={ air.s(h=h[9],p=p[9]) } = { 5.2948\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"63":{"data":{"text/markdown":" First law for turbine","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"64":{"data":{"text/latex":"\\begin{align}{ w_{8\\to9} }&={ h_{8} - h_{9} }\\\\&={ \\left( 1642.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 1318.8\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  323.17\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"65":{"data":{"text/markdown":"##### $w_{net}$","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"66":{"data":{"text/latex":"\\begin{align}{ w_{net} }&={ w_{1\\to2} + w_{3\\to4} + w_{6\\to7} + w_{8\\to9} }\\\\&={ \\left( -146.72\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) + \\left( -171.26\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) + \\left( 323.52\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) + \\left( 323.17\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  328.71\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"67":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [K]</th>\n      <th>p [kPa]</th>\n      <th>v [m³/kg]</th>\n      <th>h [kJ/kg]</th>\n      <th>s [kJ/K/kg]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>300</td>\n      <td>100.000000</td>\n      <td>-</td>\n      <td>426.301</td>\n      <td>3.8905</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>-</td>\n      <td>100.000000</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>444.993</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>573.018</td>\n      <td>3.95864</td>\n    </tr>\n    <tr>\n      <th>2s</th>\n      <td>416.389</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>543.675</td>\n      <td>3.8905</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>350</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>476.334</td>\n      <td>3.71434</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>518.013</td>\n      <td>1000.000000</td>\n      <td>-</td>\n      <td>647.598</td>\n      <td>3.78267</td>\n    </tr>\n    <tr>\n      <th>4s</th>\n      <td>484.9</td>\n      <td>1000.000000</td>\n      <td>-</td>\n      <td>613.345</td>\n      <td>3.71434</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>-</td>\n      <td>1000.000000</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1400</td>\n      <td>1000.000000</td>\n      <td>-</td>\n      <td>1642.54</td>\n      <td>4.89025</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>1126.99</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>1319.01</td>\n      <td>4.96433</td>\n    </tr>\n    <tr>\n      <th>7s</th>\n      <td>1057.12</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>1238.13</td>\n      <td>4.89025</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1400</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>1641.98</td>\n      <td>5.2208</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1126.94</td>\n      <td>100.000000</td>\n      <td>-</td>\n      <td>1318.81</td>\n      <td>5.2948</td>\n    </tr>\n    <tr>\n      <th>9s</th>\n      <td>1057.02</td>\n      <td>100.000000</td>\n      <td>-</td>\n      <td>1238.01</td>\n      <td>5.2208</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"},"exec_count":4,"output_type":"execute_result"},"7":{"data":{"text/latex":"\\begin{align}{ h_{2s} }&={ air.h(p=p['2s'],s=s['2s']) } = { 543.67\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"8":{"data":{"text/latex":"\\begin{align}{ T_{2s} }&={ air.T(p=p['2s'],s=s['2s']) } = { 416.39\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"9":{"data":{"text/markdown":" Isentropic efficiency","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"}},"pos":10,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":5,"id":"e7bfa8","input":"##### 4$\\to$5 and 9$\\to$10) Regenerator\nh[5] = h[4] + eta_reg*(h[9]-h[4])\nh[10] = h[9] - (h[5]-h[4])\nT[5] = air.T(h=h[5],p=p[5])\ns[5] = air.s(h=h[5],p=p[5])\nT[10] = air.T(h=h[10],p=p[10])\ns[10] = air.s(h=h[10],p=p[10])\n\n##### 5$\\to$6) Combustor 1 \nq_5_to_6 =h[6]-h[5]\n\n\n##### 7$\\to$8) Combustor 2\nq_7_to_8 = h[8]-h[7]\n\n\n##### Heat input\nq_in = q_5_to_6 + q_7_to_8\n\ndisplay.Calculations(locals(),comments=True);","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/markdown":"#### 4$\\to$5 and 9$\\to$10) Regenerator","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":5,"output_type":"execute_result"},"1":{"data":{"text/latex":"\\begin{align}{ h_{5} }&={ \\eta_{reg} \\left(h_{9} - h_{4}\\right) + h_{4} }\\\\&={ \\left( 0.85\\ \\right) \\left(\\left( 1318.8\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 647.6\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)\\right) + \\left( 647.6\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  1218.1\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":5,"output_type":"execute_result"},"10":{"data":{"text/latex":"\\begin{align}{ q_{7\\to8} }&={ h_{8} - h_{7} }\\\\&={ \\left( 1642.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 1319.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  322.96\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":5,"output_type":"execute_result"},"11":{"data":{"text/markdown":"#### Heat input","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":5,"output_type":"execute_result"},"12":{"data":{"text/latex":"\\begin{align}{ q_{in} }&={ q_{5\\to6} + q_{7\\to8} }\\\\&={ \\left( 424.41\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) + \\left( 322.96\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  747.38\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":5,"output_type":"execute_result"},"2":{"data":{"text/latex":"\\begin{align}{ h_{10} }&={ h_{9} - h_{5} + h_{4} }\\\\&={ \\left( 1318.8\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 1218.1\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) + \\left( 647.6\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  748.28\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":5,"output_type":"execute_result"},"3":{"data":{"text/latex":"\\begin{align}{ T_{5} }&={ air.T(h=h[5],p=p[5]) } = { 1039.4\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":5,"output_type":"execute_result"},"4":{"data":{"text/latex":"\\begin{align}{ s_{5} }&={ air.s(h=h[5],p=p[5]) } = { 4.5401\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":5,"output_type":"execute_result"},"5":{"data":{"text/latex":"\\begin{align}{ T_{10} }&={ air.T(h=h[10],p=p[10]) } = { 614.12\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":5,"output_type":"execute_result"},"6":{"data":{"text/latex":"\\begin{align}{ s_{10} }&={ air.s(h=h[10],p=p[10]) } = { 4.6228\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":5,"output_type":"execute_result"},"7":{"data":{"text/markdown":"#### 5$\\to$6) Combustor 1 ","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":5,"output_type":"execute_result"},"8":{"data":{"text/latex":"\\begin{align}{ q_{5\\to6} }&={ h_{6} - h_{5} }\\\\&={ \\left( 1642.5\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 1218.1\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  424.41\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":5,"output_type":"execute_result"},"9":{"data":{"text/markdown":"#### 7$\\to$8) Combustor 2","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":5,"output_type":"execute_result"}},"pos":12,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":6,"id":"842310","input":"##### Thermal efficiency\neta_th = w_net/q_in\n\n##### Second Law efficiency\n# The low temperature is assumed to be the intake temperature\nT_L = T[1]\n# The high temperature is approximated as the hottest temperature of the working fluid\nT_H = T[6]\n# Carnot efficiency\neta_th_Carnot = 1-T_L/T_H\n\n# Second Law efficiency\neta_II = eta_th/eta_th_Carnot\n\ndisplay.Calculations(locals(),comments=True);","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/markdown":"#### Thermal efficiency","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":6,"output_type":"execute_result"},"1":{"data":{"text/latex":"\\begin{align}{ \\eta_{th} }&={ \\frac{w_{net}}{q_{in}} }\\\\&={ \\frac{\\left( 328.71\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)}{\\left( 747.38\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)} }\\\\&={  0.43982\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":6,"output_type":"execute_result"},"10":{"data":{"text/latex":"\\begin{align}{ \\eta_{II} }&={ \\frac{\\eta_{th}}{\\eta_{th,Carnot}} }\\\\&={ \\frac{\\left( 0.43982\\ \\right)}{\\left( 0.78571\\ \\right)} }\\\\&={  0.55978\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":6,"output_type":"execute_result"},"2":{"data":{"text/markdown":"#### Second Law efficiency","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":6,"output_type":"execute_result"},"3":{"data":{"text/markdown":" The low temperature is assumed to be the intake temperature","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":6,"output_type":"execute_result"},"4":{"data":{"text/latex":"\\begin{align}{ T_{L} }&={ T_{1} } = { 300\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":6,"output_type":"execute_result"},"5":{"data":{"text/markdown":" The high temperature is approximated as the hottest temperature of the working fluid","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":6,"output_type":"execute_result"},"6":{"data":{"text/latex":"\\begin{align}{ T_{H} }&={ T_{6} } = { 1400\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":6,"output_type":"execute_result"},"7":{"data":{"text/markdown":" Carnot efficiency","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":6,"output_type":"execute_result"},"8":{"data":{"text/latex":"\\begin{align}{ \\eta_{th,Carnot} }&={ 1 - \\frac{T_{L}}{T_{H}} }\\\\&={  1  - \\frac{\\left( 300\\ \\mathrm{K} \\right)}{\\left( 1400\\ \\mathrm{K} \\right)} }\\\\&={  0.78571\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":6,"output_type":"execute_result"},"9":{"data":{"text/markdown":" Second Law efficiency","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":6,"output_type":"execute_result"}},"pos":14,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":7,"id":"d060b0","input":"##### work in\nw_in = -(w_1_to_2 + w_3_to_4)\n\n##### work out\nw_out = w_6_to_7 + w_8_to_9\n\n##### back work ratio\nBWR = w_in/w_out\n\ndisplay.Calculations(locals(),comments=True);","output":{"0":{"data":{"text/markdown":"#### work in","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":7,"output_type":"execute_result"},"1":{"data":{"text/latex":"\\begin{align}{ w_{in} }&={ - w_{1\\to2} - w_{3\\to4} }\\\\&={ - \\left( -146.72\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( -171.26\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  317.98\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":7,"output_type":"execute_result"},"2":{"data":{"text/markdown":"#### work out","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":7,"output_type":"execute_result"},"3":{"data":{"text/latex":"\\begin{align}{ w_{out} }&={ w_{6\\to7} + w_{8\\to9} }\\\\&={ \\left( 323.52\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) + \\left( 323.17\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  646.69\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":7,"output_type":"execute_result"},"4":{"data":{"text/markdown":"#### back work ratio","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":7,"output_type":"execute_result"},"5":{"data":{"text/latex":"\\begin{align}{ BWR }&={ \\frac{w_{in}}{w_{out}} }\\\\&={ \\frac{\\left( 317.98\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)}{\\left( 646.69\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)} }\\\\&={  0.4917\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":7,"output_type":"execute_result"}},"pos":16,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":8,"id":"1fd2ff","input":"display.Summary(locals())\ndisplay.Summary(locals(),['w_net','q_in','eta_th','BWR']);","output":{"0":{"data":{"text/latex":"\\begin{align}{ BWR }&={  0.4917\\  }&{ T_{H} }&={  1400\\ \\mathrm{K}  }&{ T_{L} }&={  300\\ \\mathrm{K}  }\\\\{ \\eta_{II} }&={  0.55978\\  }&{ \\eta_{c} }&={  0.8\\  }&{ \\eta_{reg} }&={  0.85\\  }\\\\{ \\eta_{t} }&={  0.8\\  }&{ \\eta_{th} }&={  0.43982\\  }&{ \\eta_{th Carnot} }&={  0.78571\\  }\\\\{ q_{2 to 3} }&={  -96.684\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }&{ q_{5 to 6} }&={  424.41\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }&{ q_{7 to 8} }&={  322.96\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\\\{ q_{in} }&={  747.38\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }&{ r_{p} }&={  3.1623\\  }&{ w_{1 to 2} }&={  -146.72\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\\\{ w_{3 to 4} }&={  -171.26\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }&{ w_{6 to 7} }&={  323.52\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }&{ w_{8 to 9} }&={  323.17\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\\\{ w_{in} }&={  317.98\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }&{ w_{net} }&={  328.71\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }&{ w_{out} }&={  646.69\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\\\{  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":8,"output_type":"execute_result"},"1":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [K]</th>\n      <th>p [kPa]</th>\n      <th>v [m³/kg]</th>\n      <th>h [kJ/kg]</th>\n      <th>s [kJ/K/kg]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>300.000000</td>\n      <td>100.000000</td>\n      <td>-</td>\n      <td>426.300776</td>\n      <td>3.890501</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>614.117765</td>\n      <td>100.000000</td>\n      <td>-</td>\n      <td>748.279268</td>\n      <td>4.622808</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>444.993407</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>573.017977</td>\n      <td>3.958643</td>\n    </tr>\n    <tr>\n      <th>2s</th>\n      <td>416.389023</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>543.674536</td>\n      <td>3.890501</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>350.000000</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>476.334363</td>\n      <td>3.714342</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>518.012779</td>\n      <td>1000.000000</td>\n      <td>-</td>\n      <td>647.598028</td>\n      <td>3.782671</td>\n    </tr>\n    <tr>\n      <th>4s</th>\n      <td>484.899672</td>\n      <td>1000.000000</td>\n      <td>-</td>\n      <td>613.345295</td>\n      <td>3.714342</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1039.367378</td>\n      <td>1000.000000</td>\n      <td>-</td>\n      <td>1218.125053</td>\n      <td>4.540090</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1400.000000</td>\n      <td>1000.000000</td>\n      <td>-</td>\n      <td>1642.536333</td>\n      <td>4.890246</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>1126.993542</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>1319.012131</td>\n      <td>4.964330</td>\n    </tr>\n    <tr>\n      <th>7s</th>\n      <td>1057.124089</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>1238.131081</td>\n      <td>4.890246</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1400.000000</td>\n      <td>316.227766</td>\n      <td>-</td>\n      <td>1641.976857</td>\n      <td>5.220798</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1126.941368</td>\n      <td>100.000000</td>\n      <td>-</td>\n      <td>1318.806293</td>\n      <td>5.294803</td>\n    </tr>\n    <tr>\n      <th>9s</th>\n      <td>1057.022121</td>\n      <td>100.000000</td>\n      <td>-</td>\n      <td>1238.013652</td>\n      <td>5.220798</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"},"exec_count":8,"output_type":"execute_result"},"2":{"data":{"text/latex":"\\begin{align}{ w_{net} }&={  328.71\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\\\{ q_{in} }&={  747.38\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\\\{ \\eta_{th} }&={  0.43982\\  }\\\\{ BWR }&={  0.4917\\  }\\\\{  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"},"exec_count":8,"output_type":"execute_result"}},"pos":18,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":9,"id":"6089d5","input":"for i in [1,'2s',2,3,'4s',4,5,6,'7s',7,8,'9s',9,10]:\n    v[i] = air.v(T=T[i],p=p[i])\n\n#ShowCalculations(locals(), comments=True);\nstates.display()","output":{"0":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [K]</th>\n      <th>p [kPa]</th>\n      <th>v [m³/kg]</th>\n      <th>h [kJ/kg]</th>\n      <th>s [kJ/K/kg]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>300.000000</td>\n      <td>100.000000</td>\n      <td>0.860882</td>\n      <td>426.300776</td>\n      <td>3.890501</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>614.117765</td>\n      <td>100.000000</td>\n      <td>1.763464</td>\n      <td>748.279268</td>\n      <td>4.622808</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>444.993407</td>\n      <td>316.227766</td>\n      <td>0.404280</td>\n      <td>573.017977</td>\n      <td>3.958643</td>\n    </tr>\n    <tr>\n      <th>2s</th>\n      <td>416.389023</td>\n      <td>316.227766</td>\n      <td>0.378235</td>\n      <td>543.674536</td>\n      <td>3.890501</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>350.000000</td>\n      <td>316.227766</td>\n      <td>0.317722</td>\n      <td>476.334363</td>\n      <td>3.714342</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>518.012779</td>\n      <td>1000.000000</td>\n      <td>0.149207</td>\n      <td>647.598028</td>\n      <td>3.782671</td>\n    </tr>\n    <tr>\n      <th>4s</th>\n      <td>484.899672</td>\n      <td>1000.000000</td>\n      <td>0.139638</td>\n      <td>613.345295</td>\n      <td>3.714342</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1039.367378</td>\n      <td>1000.000000</td>\n      <td>0.299256</td>\n      <td>1218.125053</td>\n      <td>4.540090</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1400.000000</td>\n      <td>1000.000000</td>\n      <td>0.402841</td>\n      <td>1642.536333</td>\n      <td>4.890246</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>1126.993542</td>\n      <td>316.227766</td>\n      <td>1.023932</td>\n      <td>1319.012131</td>\n      <td>4.964330</td>\n    </tr>\n    <tr>\n      <th>7s</th>\n      <td>1057.124089</td>\n      <td>316.227766</td>\n      <td>0.960492</td>\n      <td>1238.131081</td>\n      <td>4.890246</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1400.000000</td>\n      <td>316.227766</td>\n      <td>1.271792</td>\n      <td>1641.976857</td>\n      <td>5.220798</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1126.941368</td>\n      <td>100.000000</td>\n      <td>3.235802</td>\n      <td>1318.806293</td>\n      <td>5.294803</td>\n    </tr>\n    <tr>\n      <th>9s</th>\n      <td>1057.022121</td>\n      <td>100.000000</td>\n      <td>3.035082</td>\n      <td>1238.013652</td>\n      <td>5.220798</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"},"exec_count":9,"output_type":"execute_result"}},"pos":20,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"302ae6","input":"### Given Parameters\nWe now define variables to hold our known values.","pos":5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"3185aa","input":"#### (c) Thermal efficiency","pos":13,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"55ff51","input":"#### (b) Heat input","pos":11,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"5cfee8","input":"#### (a) $w_{net}$","pos":9,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"60fc04","input":"### Plotting\n*Note: The plotting library uses the property tables to draw the process paths, which inherently assumes variable specific heat (i.e. real-fluid or air-standard assumptions).  If the library is used to draw process paths between states were obtained using constant specific heat (cold-air-standard assumptions) There will be inconsistencies between the state points and the process paths.*\n\nIn order to plot the paths of the cycle on the $p$-$v$ diagram and states on the $T$-$s$ diagram, we need discrete values for the specifc enthalpy and entropy at each state rather than just the changes in properties we calculated above.  To do this we can pick an arbritrary value for the enthalpy and entropy at any state, then caclulate the enthalpy and entropy at the rest of the states relative to the reference point. For this case, we will look up the properties from the tables for state 1 and use that as our starting point.","pos":19,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"66aae6","input":"## Solution\n","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"700ddb","input":"#### (d) Back-Work-Ratio","pos":15,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"8bbe1d","input":"#### (b) $T$-$s$ diagram\n*Note: the process paths do not line up with the state points in this diagram because the paths were \ncalculated for variable specific heat, but the states were calculated using the\ncold-air-standard assumptions (constant specific heat).  Therefore the errors resulting from the constant specific heat assumption are evident in the misalignment on the graph.  The larger inconsistencies at the higher temperatures illustrate how the constant specific heat assumption becomes increasing inaccurate as the temperature change of the fluid increases.*","pos":23,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"96d614","input":"#### (a) $p$-$v$\nNote: the isentropic lines do not line up exactly with the states in this diagram because the entropies were calculated for variable specific heat, but all other properties were calculated using the cold-air-standard assumptions (constant specific heat).  ","pos":21,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"a39659","input":"### Python Initialization\nWe'll start by importing the libraries we will use for our analysis and initializing dictionaries to hold the properties we will be usings.","pos":3,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"bb946d","input":"#### Summary of Results","pos":17,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"da9f49","input":"### Assumptions\n- Real fluid\n  - non-ideal gas\n  - variable specific heat\n- Isobaric heat exchagners: Intercooler, Combustors, Regeneator\n- Negligible changes in kinetic energy\n- Negligible changes in potential energy","pos":7,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e19422","input":"# Example 9.5: Modified Brayton Cycle (Real-Fluid)\n\n*John F. Maddox, Ph.D., P.E.<br>\nUniversity of Kentucky - Paducah Campus<br>\nME 321: Engineering Thermodynamics II<br>*","pos":0,"state":"done","type":"cell"}
{"id":0,"time":1599876962799,"type":"user"}
{"last_load":1600009932442,"type":"file"}