{"attachments":{},"cell_type":"markdown","id":"843dc3","input":"## Problem Statement\nAn Otto cycle with compression ratio of $8$ starts its compression stroke from $p_1=1\\ \\text{bar}$, $T_1=300\\ \\text{K}$.  The maximum temperature after combustion is $1200\\ \\text{K}$.  \nDetermine:\n* (a) $p$-$v$ diagram\n* (b) $T$-$s$ diagram\n* (c) $T$,$p$ at each state\n* (d) $q_{in}$\n* (e) $w_{net}$\n* (f) $\\eta_{th}$","pos":1,"state":"done","type":"cell"}
{"backend_state":"ready","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":222781440},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.2"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1598499529346,"exec_count":2,"id":"98ea3d","input":"T[1] = Q_(300,'K')\np[1] = Q_(1,'bar')\nT_max = Q_(1200,'K')\nr = Q_(8,'')\n\nsc=ShowCalculations(locals(),comments=True)","kernel":"python3","output":{"0":{"data":{"text/latex":"\\begin{align}{ T_{1} }&={  300\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"1":{"data":{"text/latex":"\\begin{align}{ p_{1} }&={ \\left( 1\\ \\mathrm{bar} \\right) } = { 100.0\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"2":{"data":{"text/latex":"\\begin{align}{ T_{max} }&={  1200\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"3":{"data":{"text/latex":"\\begin{align}{ r }&={  8\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":6,"start":1598499528990,"state":"done","type":"cell"}
{"cell_type":"code","end":1598499530280,"exec_count":4,"id":"f9e8c6","input":"# Isentropic Compression $1\\to2$\ns[1] = air.s(T=T[1],p=p[1])\nv[1] = R*T[1]/p[1]\nv[2] = v[1]/r\ns[2] = s[1]\nT[2] = air.T(s=s[2],v=v[2])\np[2] = air.p(s=s[2],v=v[2])\n\n# Isochoric Heat Addition $2\\to3$\nv[3] = v[2]\nT[3] = T_max\np[3] = air.p(T=T[3],v=v[3])\n\n# Isentropic Expansion $3\\to4$\ns[3] = air.s(T=T[3],v=v[3])\ns[4] = s[3]\nv[4] = r*v[3]\nT[4] = air.T(v=v[4],s=s[4])\np[4] = air.p(v=v[4],s=s[4])\n\n\nsc=ShowCalculations(locals(),comments=True)\nstates.display()","kernel":"python3","output":{"0":{"data":{"text/markdown":" Isentropic Compression $1\\to2$","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/latex":"\\begin{align}{ s_{1} }&={ \\mathrm{air.s}\\left(\\mathrm{T}=T_{1} , \\mathrm{p}=p_{1}\\right) } = { 6.7077\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"10":{"data":{"text/latex":"\\begin{align}{ p_{3} }&={ \\mathrm{air.p}\\left(\\mathrm{T}=T_{3} , \\mathrm{v}=v_{3}\\right) } = { 3200.0\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"11":{"data":{"text/markdown":" Isentropic Expansion $3\\to4$","text/plain":"<IPython.core.display.Markdown object>"}},"12":{"data":{"text/latex":"\\begin{align}{ s_{3} }&={ \\mathrm{air.s}\\left(\\mathrm{T}=T_{3} , \\mathrm{v}=v_{3}\\right) } = { 7.1899\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"13":{"data":{"text/latex":"\\begin{align}{ s_{4} }&={ s_{3} } = { 7.1899\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"14":{"data":{"text/latex":"\\begin{align}{ v_{4} }&={ r v_{3} }\\\\&={ \\left( 8\\ \\right) \\left( 0.10764\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}} \\right) }\\\\&={  0.86116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"15":{"data":{"text/latex":"\\begin{align}{ T_{4} }&={ \\mathrm{air.T}\\left(\\mathrm{v}=v_{4} , \\mathrm{s}=s_{4}\\right) } = { 579.52\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"16":{"data":{"text/latex":"\\begin{align}{ p_{4} }&={ \\mathrm{air.p}\\left(\\mathrm{v}=v_{4} , \\mathrm{s}=s_{4}\\right) } = { 193.17\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"17":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [K]</th>\n      <th>p [kPa]</th>\n      <th>v [m³/kg]</th>\n      <th>u [kJ/kg]</th>\n      <th>s [kJ/K/kg]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>300.000000</td>\n      <td>100.000000</td>\n      <td>0.861158</td>\n      <td>-</td>\n      <td>6.707700</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>672.711591</td>\n      <td>1793.897575</td>\n      <td>0.107645</td>\n      <td>-</td>\n      <td>6.707700</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1200.000000</td>\n      <td>3200.000000</td>\n      <td>0.107645</td>\n      <td>-</td>\n      <td>7.189906</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>579.518321</td>\n      <td>193.172774</td>\n      <td>0.861158</td>\n      <td>-</td>\n      <td>7.189906</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"}},"2":{"data":{"text/latex":"\\begin{align}{ v_{1} }&={ \\frac{R T_{1}}{p_{1}} }\\\\&={ \\frac{\\left( 0.28705\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{kg} \\cdot \\mathrm{Δ°C}\\right)} \\right) \\left( 300\\ \\mathrm{K} \\right)}{\\left( 100.0\\ \\mathrm{kPa} \\right)} }\\\\&={  0.86116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"3":{"data":{"text/latex":"\\begin{align}{ v_{2} }&={ \\frac{v_{1}}{r} }\\\\&={ \\frac{\\left( 0.86116\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}} \\right)}{\\left( 8\\ \\right)} }\\\\&={  0.10764\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"4":{"data":{"text/latex":"\\begin{align}{ s_{2} }&={ s_{1} } = { 6.7077\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"5":{"data":{"text/latex":"\\begin{align}{ T_{2} }&={ \\mathrm{air.T}\\left(\\mathrm{s}=s_{2} , \\mathrm{v}=v_{2}\\right) } = { 672.71\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"6":{"data":{"text/latex":"\\begin{align}{ p_{2} }&={ \\mathrm{air.p}\\left(\\mathrm{s}=s_{2} , \\mathrm{v}=v_{2}\\right) } = { 1793.9\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"7":{"data":{"text/markdown":" Isochoric Heat Addition $2\\to3$","text/plain":"<IPython.core.display.Markdown object>"}},"8":{"data":{"text/latex":"\\begin{align}{ v_{3} }&={ v_{2} } = { 0.10764\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"9":{"data":{"text/latex":"\\begin{align}{ T_{3} }&={ T_{max} } = { 1200\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":9,"start":1598499529417,"state":"done","type":"cell"}
{"cell_type":"code","end":1598499536268,"exec_count":5,"id":"73b0c6","input":"pv = IdealGasPropertyPlot(x='v',y='p',fluid='Air')\nfor i in [1,2,3,4]:\n    pv.plot_state(states[i],label_loc='east')\npv.plot_process(states[1],states[2], path='isentropic')\npv.plot_process(states[2],states[3], path='isochoric')\npv.plot_process(states[3],states[4], path='isentropic')\npv.plot_process(states[4],states[1], path='isochoric')","kernel":"python3","output":{"0":{"data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7f120ce04cd0>]"},"exec_count":5},"1":{"data":{"image/png":"7c73b938016f3add7d9ca26d24238411d034ee6e","text/plain":"<Figure size 864x504 with 1 Axes>"},"metadata":{"image/png":{"height":426,"width":732},"needs_background":"light"}}},"pos":11,"start":1598499530292,"state":"done","type":"cell"}
{"cell_type":"code","end":1598499591766,"exec_count":7,"id":"3c3079","input":"Ts = IdealGasPropertyPlot(x='s',y='T',fluid='Air')\nfor i in [1,2,3,4]:\n    Ts.plot_state(states[i], label_loc='north east')\nTs.plot_process(states[1],states[2], path='isentropic')\nTs.plot_process(states[2],states[3], path='isochoric')\nTs.plot_process(states[3],states[4], path='isentropic')\nTs.plot_process(states[4],states[1], path='isochoric')","kernel":"python3","output":{"0":{"data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7f120cca98e0>]"},"exec_count":7},"1":{"data":{"image/png":"0e04ed4340a4369a7ae9388aad0fcdf3d2d836a4","text/plain":"<Figure size 864x504 with 1 Axes>"},"metadata":{"image/png":{"height":427,"width":724},"needs_background":"light"}}},"pos":13,"start":1598499586200,"state":"done","type":"cell"}
{"cell_type":"code","end":1598499599317,"exec_count":8,"id":"4479e4","input":"# Heat transfer only takes place from $2\\to3$ and from $4\\to1$\nu[2] = air.u(T=T[2],p=p[2])\nu[3] = air.u(T=T[3],p=p[3])\n\nq_2_to_3 = u[3]-u[2]\nq_in = q_2_to_3\n\nsc=ShowCalculations(locals(),comments=True)","kernel":"python3","output":{"0":{"data":{"text/markdown":" Heat transfer only takes place from $2\\to3$ and from $4\\to1$","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/latex":"\\begin{align}{ u_{2} }&={ \\mathrm{air.u}\\left(\\mathrm{T}=T_{2} , \\mathrm{p}=p_{2}\\right) } = { 188.52\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"2":{"data":{"text/latex":"\\begin{align}{ u_{3} }&={ \\mathrm{air.u}\\left(\\mathrm{T}=T_{3} , \\mathrm{p}=p_{3}\\right) } = { 630.51\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"3":{"data":{"text/latex":"\\begin{align}{ q_{2\\to3} }&={ u_{3} - u_{2} }\\\\&={ \\left( 630.51\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 188.52\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  442.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"4":{"data":{"text/latex":"\\begin{align}{ q_{in} }&={ q_{2\\to3} } = { 442.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":15,"start":1598499599246,"state":"done","type":"cell"}
{"cell_type":"code","end":1598499604738,"exec_count":9,"id":"8cd842","input":"u[1] = air.u(T=T[1],p=p[1])\nu[4] = air.u(T=T[4],p=p[4])\nq_4_to_1 = u[4]-u[1]\nq_out = q_4_to_1\n\nw_net = q_in-q_out\n\nsc=ShowCalculations(locals(),comments=True)","kernel":"python3","output":{"0":{"data":{"text/latex":"\\begin{align}{ u_{1} }&={ \\mathrm{air.u}\\left(\\mathrm{T}=T_{1} , \\mathrm{p}=p_{1}\\right) } = { -88.523\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"1":{"data":{"text/latex":"\\begin{align}{ u_{4} }&={ \\mathrm{air.u}\\left(\\mathrm{T}=T_{4} , \\mathrm{p}=p_{4}\\right) } = { 116.81\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"2":{"data":{"text/latex":"\\begin{align}{ q_{4\\to1} }&={ u_{4} - u_{1} }\\\\&={ \\left( 116.81\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( -88.523\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  205.33\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"3":{"data":{"text/latex":"\\begin{align}{ q_{out} }&={ q_{4\\to1} } = { 205.33\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"4":{"data":{"text/latex":"\\begin{align}{ w_{net} }&={ q_{in} - q_{out} }\\\\&={ \\left( 442.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) - \\left( 205.33\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right) }\\\\&={  236.66\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":17,"start":1598499604663,"state":"done","type":"cell"}
{"cell_type":"code","end":1598499610076,"exec_count":10,"id":"8ec0c4","input":"# Thermal efficiency\neta_th = w_net/q_in\n\nsc=ShowCalculations(locals(),comments=True)","kernel":"python3","output":{"0":{"data":{"text/markdown":" Thermal efficiency","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/latex":"\\begin{align}{ \\eta_{th} }&={ \\frac{w_{net}}{q_{in}} }\\\\&={ \\frac{\\left( 236.66\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)}{\\left( 442.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}} \\right)} }\\\\&={  0.53545\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":19,"start":1598499610052,"state":"done","type":"cell"}
{"cell_type":"code","end":1598499614255,"exec_count":11,"id":"18f55a","input":"ss=ShowSummary(locals())","kernel":"python3","output":{"0":{"data":{"text/latex":"\\begin{align}{ R }&={  0.28705\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{kg} \\cdot \\mathrm{Δ°C}\\right)}  }&{ T_{max} }&={  1200\\ \\mathrm{K}  }&{ \\eta_{th} }&={  0.53545\\  }\\\\{ q_{2\\to3} }&={  442.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }&{ q_{4\\to1} }&={  205.33\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }&{ q_{in} }&={  442.0\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\\\{ q_{out} }&={  205.33\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }&{ r }&={  8\\  }&{ w_{net} }&={  236.66\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg}}  }\\\\{  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"1":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [K]</th>\n      <th>p [kPa]</th>\n      <th>v [m³/kg]</th>\n      <th>u [kJ/kg]</th>\n      <th>s [kJ/K/kg]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>300.000000</td>\n      <td>100.000000</td>\n      <td>0.861158</td>\n      <td>-88.522903</td>\n      <td>6.707700</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>672.711591</td>\n      <td>1793.897575</td>\n      <td>0.107645</td>\n      <td>188.517327</td>\n      <td>6.707700</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1200.000000</td>\n      <td>3200.000000</td>\n      <td>0.107645</td>\n      <td>630.512594</td>\n      <td>7.189906</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>579.518321</td>\n      <td>193.172774</td>\n      <td>0.861158</td>\n      <td>116.808064</td>\n      <td>7.189906</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"}}},"pos":20,"start":1598499614226,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":1,"id":"57bf29","input":"from thermoJFM import *\n\nproperties_dict = {\n    'T':'K',\n    'p':'kPa',\n    'v':'m^3/kg',\n    'u':'kJ/kg',\n    's':'kJ/kg/K',\n}\nstates = StatesTable(properties_dict, unit_system='SI_C')\nfor property in states.properties:\n    globals()[property] = states.dict[property]\n\nair = IdealGasProperties('Air', unit_system='SI_C')\n","kernel":"python3","pos":4,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"17b34b","input":"#### (e) $w_{net}$","pos":16,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"292004","input":"### Python Initialization\nWe'll start by importing the libraries we will use for our analysis and initializing dictionaries to hold the properties we will be usings.","pos":3,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"33a098","input":"#### (a) $p$-$v$ diagram ","pos":10,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"3f8298","input":"# Example 9.2: Otto Cycle (Air-Standard)\n\n*John F. Maddox, Ph.D., P.E.<br>\nUniversity of Kentucky - Paducah Campus<br>\nME 321: Engineering Thermodynamics II<br>*","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"4b1688","input":"#### (f)  $\\eta_{th}$","pos":18,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"4b4f9d","input":"#### (b) $T$-$s$ diagram ","pos":12,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"63b1d3","input":"#### (c) $T$,$p$ at each state ","pos":8,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"77234b","input":"#### (d) $q_{in}$","pos":14,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"822046","input":"## Solution\n","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"9c5b64","input":"### Assumptions\n  - Treat air as an ideal gas\n  - Variable Specific Heat","pos":7,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"f8bd98","input":"### Given Parameters\nWe now define variables to hold our known values.","pos":5,"state":"done","type":"cell"}
{"end":1598499529387,"exec_count":3,"id":"c7e0e0","input":"R = air.R()","kernel":"python3","pos":7.5,"start":1598499529366,"state":"done","type":"cell"}
{"id":0,"time":1598481077987,"type":"user"}
{"last_load":1598481079137,"type":"file"}