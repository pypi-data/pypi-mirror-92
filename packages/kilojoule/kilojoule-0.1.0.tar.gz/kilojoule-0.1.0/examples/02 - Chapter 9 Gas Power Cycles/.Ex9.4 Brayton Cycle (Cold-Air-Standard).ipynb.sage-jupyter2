{"attachments":{},"cell_type":"markdown","id":"2cd0ff","input":"## Problem Statement\n\nAir enters the compressor of a cold air-standard Brayton cycle at $100\\ \\mathrm{kPa}$, $300\\mathrm{K}$ with a volumetric flow rate of $5\\ mathrm{m^3/s}$.  The pressure ratio is $10$ and the turbine inlet temperature is $1400\\ \\mathrm{K}$.  The turbine and compressor each have an isentropic efficiency of $80\\%$.\n\n* (a) $p$-$v$ diagram\n* (b) $T$-$s$ diagram\n* (c) Back work ratio\n* (d) Net power\n* (e) $\\eta_{th}$","pos":1,"type":"cell"}
{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":227213312},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.2"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1598804351986,"exec_count":2,"id":"6aa0bd","input":"from thermoJFM import *\n\nproperties_dict = {\n    'T':'K',         # Temperature\n    'p':'kPa',       # pressure\n    'v':'m^3/kg',    # specific volume\n    'Vdot':'m^3/s',  # Volumetric flow rate\n}\nstates = StatesTable(properties_dict, unit_system='SI_K')\nfor property in states.properties:\n    globals()[property] = states.dict[property]\n    \nair = IdealGasProperties('Air',unit_system='SI_K')","kernel":"python3","pos":4,"start":1598804351980,"state":"done","type":"cell"}
{"cell_type":"code","end":1598804564785,"exec_count":4,"id":"82a1c9","input":"T[1] = Q_(300,'K')      # Compressor Inlet Temperature\np[1] = Q_(1,'bar')      # Compressor Inlet pressure\nVdot[1] = Q_(5,'m^3/s') # Volumetic Flow rate into Compressor\nr_p = Q_(10,'')         # Pressure ratio\nT[3] = Q_(1400,'K')     # Turbine Inlet Temperature\neta_c = Q_(0.8,'')      # Compressor Isentropioc Efficiency\neta_t = Q_(0.8,'')      # Turbine Isentropic Efficiency\n\nsc=ShowCalculations(locals(),comments=True)","kernel":"python3","output":{"0":{"data":{"text/latex":"\\begin{align}{ T_{1} }&={  300\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"1":{"data":{"text/latex":"\\begin{align}{ p_{1} }&={ \\left( 1\\ \\mathrm{bar} \\right) } = { 100.0\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"2":{"data":{"text/latex":"\\begin{align}{ \\dot{V}_{1} }&={  5\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{s}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"3":{"data":{"text/latex":"\\begin{align}{ r_{p} }&={  10\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"4":{"data":{"text/latex":"\\begin{align}{ T_{3} }&={  1400\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"5":{"data":{"text/latex":"\\begin{align}{ \\eta_{c} }&={  0.8\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"6":{"data":{"text/latex":"\\begin{align}{ \\eta_{t} }&={  0.8\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":6,"start":1598804564711,"state":"done","type":"cell"}
{"cell_type":"code","end":1598804584622,"exec_count":6,"id":"40f05c","input":"# Ideal Gas\nR = air.R()\n\n# Constant thermal properties evaluated at room temperature\nT_room = Q_(25,'degC')\nc_v = air.Cv(T=T_room)\nc_p = air.Cp(T=T_room)\nk = air.k(T=T_room)\n\nsc=ShowCalculations(locals(),comments=True)","kernel":"python3","output":{"0":{"data":{"text/markdown":" Ideal Gas","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/latex":"\\begin{align}{ R }&={ \\mathrm{air.R}\\left(\\right) } = { 0.28705\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"2":{"data":{"text/markdown":" Constant thermal properties evaluated at room temperature","text/plain":"<IPython.core.display.Markdown object>"}},"3":{"data":{"text/latex":"\\begin{align}{ T_{room} }&={  25\\ \\mathrm{Â°C}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"4":{"data":{"text/latex":"\\begin{align}{ c_{v} }&={ \\mathrm{air.Cv}\\left(\\mathrm{T}=T_{room}\\right) } = { 0.71768\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"5":{"data":{"text/latex":"\\begin{align}{ c_{p} }&={ \\mathrm{air.Cp}\\left(\\mathrm{T}=T_{room}\\right) } = { 1.0047\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"6":{"data":{"text/latex":"\\begin{align}{ k }&={ \\mathrm{air.k}\\left(\\mathrm{T}=T_{room}\\right) } = { 1.4\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":8,"start":1598804584571,"state":"done","type":"cell"}
{"cell_type":"code","end":1598807266613,"exec_count":23,"id":"1d9786","input":"# Turbine work\nWdot_T = Wdot_3_to_4\n\n# Compressor work\nWdot_C = -Wdot_1_to_2\n\n# Net work\nWdot_net = Wdot_T-Wdot_C\n\nsc=ShowCalculations(locals(),comments=True)","kernel":"python3","output":{"0":{"data":{"text/markdown":" Turbine work","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/latex":"\\begin{align}{ \\dot{W}_{T} }&={ \\dot{W}_{3\\to4} } = { 3149.5\\ \\mathrm{kW}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"2":{"data":{"text/markdown":" Compressor work","text/plain":"<IPython.core.display.Markdown object>"}},"3":{"data":{"text/latex":"\\begin{align}{ \\dot{W}_{C} }&={ - \\dot{W}_{1\\to2} }\\\\&={ - \\left( -2035.9\\ \\mathrm{kW} \\right) }\\\\&={  2035.9\\ \\mathrm{kW}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"4":{"data":{"text/markdown":" Net work","text/plain":"<IPython.core.display.Markdown object>"}},"5":{"data":{"text/latex":"\\begin{align}{ \\dot{W}_{net} }&={ - \\dot{W}_{C} + \\dot{W}_{T} }\\\\&={ - \\left( 2035.9\\ \\mathrm{kW} \\right) + \\left( 3149.5\\ \\mathrm{kW} \\right) }\\\\&={  1113.6\\ \\mathrm{kW}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":12,"start":1598807266542,"state":"done","type":"cell"}
{"cell_type":"code","end":1598807332678,"exec_count":25,"id":"39cfd9","input":"##### 1$\\to$2) Non-ideal compression\n# Isentropic exit state: Isentropic Ideal Gas Relations\np[2] = p[1]*r_p\np['2s'] = p[2]\nT['2s'] = T[1]*r_p**((k-1)/k)\n\n# Isentropic efficiency\nT[2] = T[1] + (T['2s']-T[1])/eta_c\n\n# Mass flow rate through compressor\nmdot = Vdot[1]*p[1]/(R*T[1])\nmdot = mdot.to('kg/s') # hide\n\n# First Law for compressor\nWdot_1_to_2 = mdot*c_p*(T[1]-T[2])\nWdot_1_to_2 = Wdot_1_to_2.to('kW') # hide\n\n##### 2$\\to$3) Isobaric heat addition\np[3] = p[2]\n\n##### 3$\\to$4) Non-ideal expansion\n# Isentropic exit state: Isentropic Ideal Gas Relations\np[4] = p[1]\np['4s'] = p[4]\nT['4s'] = T[3]*(1/r_p)**((k-1)/k)\n\n# Isentropic efficiency\nT[4] = T[3] - eta_t*(T[3]-T['4s'])\n\n# First law for turbine\nWdot_3_to_4 = mdot*c_p*(T[3]-T[4])\nWdot_3_to_4 = Wdot_3_to_4.to('kW') # hide\n\n##### Backwork Ratio\nBWR = -Wdot_1_to_2/Wdot_3_to_4\n\nsc=ShowCalculations(locals(),comments=True)\nstates.display()","kernel":"python3","output":{"0":{"data":{"text/markdown":"#### 1$\\to$2) Non-ideal compression","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/markdown":" Isentropic exit state: Isentropic Ideal Gas Relations","text/plain":"<IPython.core.display.Markdown object>"}},"10":{"data":{"text/latex":"\\begin{align}{ \\dot{W}_{1\\to2} }&={ c_{p} \\dot{m} \\left(T_{1} - T_{2}\\right) }\\\\&={ \\left( 1.0047\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)} \\right) \\left( 5.8061\\ \\frac{\\mathrm{kg}}{\\mathrm{s}} \\right) \\left(\\left( 300\\ \\mathrm{K} \\right) - \\left( 648.99\\ \\mathrm{K} \\right)\\right) }\\\\&={  -2035.9\\ \\mathrm{kW}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"11":{"data":{"text/markdown":"#### 2$\\to$3) Isobaric heat addition","text/plain":"<IPython.core.display.Markdown object>"}},"12":{"data":{"text/latex":"\\begin{align}{ p_{3} }&={ p_{2} } = { 1000.0\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"13":{"data":{"text/markdown":"#### 3$\\to$4) Non-ideal expansion","text/plain":"<IPython.core.display.Markdown object>"}},"14":{"data":{"text/markdown":" Isentropic exit state: Isentropic Ideal Gas Relations","text/plain":"<IPython.core.display.Markdown object>"}},"15":{"data":{"text/latex":"\\begin{align}{ p_{4} }&={ p_{1} } = { 100.0\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"16":{"data":{"text/latex":"\\begin{align}{ p_{4s} }&={ p_{4} } = { 100.0\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"17":{"data":{"text/latex":"\\begin{align}{ T_{4s} }&={ T_{3} \\left(\\frac{1}{r_{p}}\\right)^{\\frac{k - 1}{k}} }\\\\&={ \\left(   1  400\\ \\mathrm{K} \\right) \\left(\\frac{  1  }{\\left(  1 0\\ \\right)}\\right)^{\\frac{\\left(  1 .4\\ \\right) -   1  }{\\left(  1 .4\\ \\right)}} }\\\\&={  725.  1  5\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"18":{"data":{"text/markdown":" Isentropic efficiency","text/plain":"<IPython.core.display.Markdown object>"}},"19":{"data":{"text/latex":"\\begin{align}{ T_{4} }&={ - \\eta_{t} \\left(- T_{4s} + T_{3}\\right) + T_{3} }\\\\&={ - \\left( 0.8\\ \\right) \\left(- \\left( 725.15\\ \\mathrm{K} \\right) + \\left( 1400\\ \\mathrm{K} \\right)\\right) + \\left( 1400\\ \\mathrm{K} \\right) }\\\\&={  860.12\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"2":{"data":{"text/latex":"\\begin{align}{ p_{2} }&={ p_{1} r_{p} }\\\\&={ \\left( 100.0\\ \\mathrm{kPa} \\right) \\left( 10\\ \\right) }\\\\&={  1000.0\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"20":{"data":{"text/markdown":" First law for turbine","text/plain":"<IPython.core.display.Markdown object>"}},"21":{"data":{"text/latex":"\\begin{align}{ \\dot{W}_{3\\to4} }&={ c_{p} \\dot{m} \\left(- T_{4} + T_{3}\\right) }\\\\&={ \\left( 1.0047\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)} \\right) \\left( 5.8061\\ \\frac{\\mathrm{kg}}{\\mathrm{s}} \\right) \\left(- \\left( 860.12\\ \\mathrm{K} \\right) + \\left( 1400\\ \\mathrm{K} \\right)\\right) }\\\\&={  3149.5\\ \\mathrm{kW}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"22":{"data":{"text/markdown":"#### Backwork Ratio","text/plain":"<IPython.core.display.Markdown object>"}},"23":{"data":{"text/latex":"\\begin{align}{ BWR }&={ - \\frac{\\dot{W}_{1\\to2}}{\\dot{W}_{3\\to4}} }\\\\&={ - \\frac{\\left( -2035.9\\ \\mathrm{kW} \\right)}{\\left( 3149.5\\ \\mathrm{kW} \\right)} }\\\\&={  0.64642\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"24":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [K]</th>\n      <th>p [kPa]</th>\n      <th>v [mÂ³/kg]</th>\n      <th>Vdot [mÂ³/s]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>300.000000</td>\n      <td>100.0</td>\n      <td>-</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>648.989932</td>\n      <td>1000.0</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>2s</th>\n      <td>579.191946</td>\n      <td>1000.0</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1400.000000</td>\n      <td>1000.0</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>860.118564</td>\n      <td>100.0</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>4s</th>\n      <td>725.148205</td>\n      <td>100.0</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"}},"3":{"data":{"text/latex":"\\begin{align}{ p_{2s} }&={ p_{2} } = { 1000.0\\ \\mathrm{kPa}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"4":{"data":{"text/latex":"\\begin{align}{ T_{2s} }&={ T_{1} r_{p}^{\\frac{k - 1}{k}} }\\\\&={ \\left( 300\\ \\mathrm{K} \\right) \\left(  1 0\\ \\right)^{\\frac{\\left(  1 .4\\ \\right) -  1 }{\\left(  1 .4\\ \\right)}} }\\\\&={  579. 1 9\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"5":{"data":{"text/markdown":" Isentropic efficiency","text/plain":"<IPython.core.display.Markdown object>"}},"6":{"data":{"text/latex":"\\begin{align}{ T_{2} }&={ T_{1} + \\frac{- T_{1} + T_{2s}}{\\eta_{c}} }\\\\&={ \\left( 300\\ \\mathrm{K} \\right) + \\frac{- \\left( 300\\ \\mathrm{K} \\right) + \\left( 579.19\\ \\mathrm{K} \\right)}{\\left( 0.8\\ \\right)} }\\\\&={  648.99\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"7":{"data":{"text/markdown":" Mass flow rate through compressor","text/plain":"<IPython.core.display.Markdown object>"}},"8":{"data":{"text/latex":"\\begin{align}{ \\dot{m} }&={ \\frac{\\dot{V}_{1} p_{1}}{R T_{1}} }\\\\&={ \\frac{\\left( 5\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{s}} \\right) \\left( 100.0\\ \\mathrm{kPa} \\right)}{\\left( 0.28705\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)} \\right) \\left( 300\\ \\mathrm{K} \\right)} }\\\\&={  5.8061\\ \\frac{\\mathrm{kg}}{\\mathrm{s}}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"9":{"data":{"text/markdown":" First Law for compressor","text/plain":"<IPython.core.display.Markdown object>"}}},"pos":10,"start":1598807332389,"state":"done","type":"cell"}
{"cell_type":"code","end":1598807644804,"exec_count":27,"id":"33352e","input":"##### 2$\\to$3) Isobaric heat addition\n# First law for combuster\nQdot_2_to_3 = mdot*c_p*(T[3]-T[2])\nQdot_2_to_3 = Qdot_2_to_3.to('kW') # hide\n\n# Heat input\nQdot_in = Qdot_2_to_3\n\n##### Thermal efficiency\neta_th = Wdot_net/Qdot_in\n\n##### Second Law efficiency\n# The low temperature is assumed to be the intake temperature\nT_L = T[1]\n# The high temperature is approximated as the hottest temperature of the working fluid\nT_H = T[3]\n# Carnot efficiency\neta_th_Carnot = 1-T_L/T_H\n\n# Second Law efficiency\neta_II = eta_th/eta_th_Carnot\n\nsc=ShowCalculations(locals(),comments=True)","kernel":"python3","output":{"0":{"data":{"text/markdown":"#### 2$\\to$3) Isobaric heat addition","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/markdown":" First law for combuster","text/plain":"<IPython.core.display.Markdown object>"}},"10":{"data":{"text/markdown":" The high temperature is approximated as the hottest temperature of the working fluid","text/plain":"<IPython.core.display.Markdown object>"}},"11":{"data":{"text/latex":"\\begin{align}{ T_{H} }&={ T_{3} } = { 1400\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"12":{"data":{"text/markdown":" Carnot efficiency","text/plain":"<IPython.core.display.Markdown object>"}},"13":{"data":{"text/latex":"\\begin{align}{ \\eta_{th,Carnot} }&={ 1 - \\frac{T_{L}}{T_{H}} }\\\\&={  1  - \\frac{\\left( 300\\ \\mathrm{K} \\right)}{\\left( 1400\\ \\mathrm{K} \\right)} }\\\\&={  0.7857 1 \\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"14":{"data":{"text/markdown":" Second Law efficiency","text/plain":"<IPython.core.display.Markdown object>"}},"15":{"data":{"text/latex":"\\begin{align}{ \\eta_{II} }&={ \\frac{\\eta_{th}}{\\eta_{th,Carnot}} }\\\\&={ \\frac{\\left( 0.25418\\ \\right)}{\\left( 0.78571\\ \\right)} }\\\\&={  0.3235\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"2":{"data":{"text/latex":"\\begin{align}{ \\dot{Q}_{2\\to3} }&={ c_{p} \\dot{m} \\left(T_{3} - T_{2}\\right) }\\\\&={ \\left( 1.0047\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)} \\right) \\left( 5.8061\\ \\frac{\\mathrm{kg}}{\\mathrm{s}} \\right) \\left(\\left( 1400\\ \\mathrm{K} \\right) - \\left( 648.99\\ \\mathrm{K} \\right)\\right) }\\\\&={  4381.1\\ \\mathrm{kW}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"3":{"data":{"text/markdown":" Heat input","text/plain":"<IPython.core.display.Markdown object>"}},"4":{"data":{"text/latex":"\\begin{align}{ \\dot{Q}_{in} }&={ \\dot{Q}_{2\\to3} } = { 4381.1\\ \\mathrm{kW}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"5":{"data":{"text/markdown":"#### Thermal efficiency","text/plain":"<IPython.core.display.Markdown object>"}},"6":{"data":{"text/latex":"\\begin{align}{ \\eta_{th} }&={ \\frac{\\dot{W}_{net}}{\\dot{Q}_{in}} }\\\\&={ \\frac{\\left( 1113.6\\ \\mathrm{kW} \\right)}{\\left( 4381.1\\ \\mathrm{kW} \\right)} }\\\\&={  0.25418\\  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"7":{"data":{"text/markdown":"#### Second Law efficiency","text/plain":"<IPython.core.display.Markdown object>"}},"8":{"data":{"text/markdown":" The low temperature is assumed to be the intake temperature","text/plain":"<IPython.core.display.Markdown object>"}},"9":{"data":{"text/latex":"\\begin{align}{ T_{L} }&={ T_{1} } = { 300\\ \\mathrm{K}  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":14,"start":1598807644608,"state":"done","type":"cell"}
{"cell_type":"code","end":1598807731465,"exec_count":28,"id":"157713","input":"ss=ShowSummary(locals(),['BWR','Wdot_net','eta_th'])","kernel":"python3","output":{"0":{"data":{"text/latex":"\\begin{align}{ BWR }&={  0.64642\\  }\\\\{ \\dot{W}_{net} }&={  1113.6\\ \\mathrm{kW}  }\\\\{ \\eta_{th} }&={  0.25418\\  }\\\\{  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}}},"pos":26,"start":1598807731459,"state":"done","type":"cell"}
{"cell_type":"code","end":1598807738145,"exec_count":29,"id":"bf653d","input":"ss=ShowSummary(locals())","kernel":"python3","output":{"0":{"data":{"text/latex":"\\begin{align}{ BWR }&={  0.64642\\  }&{ \\dot{Q}_{2\\to3} }&={  4381.1\\ \\mathrm{kW}  }&{ \\dot{Q}_{in} }&={  4381.1\\ \\mathrm{kW}  }\\\\{ R }&={  0.28705\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }&{ T_{H} }&={  1400\\ \\mathrm{K}  }&{ T_{L} }&={  300\\ \\mathrm{K}  }\\\\{ T_{room} }&={  25\\ \\mathrm{Â°C}  }&{ \\dot{W}_{1\\to2} }&={  -2035.9\\ \\mathrm{kW}  }&{ \\dot{W}_{3\\to4} }&={  3149.5\\ \\mathrm{kW}  }\\\\{ \\dot{W}_{C} }&={  2035.9\\ \\mathrm{kW}  }&{ \\dot{W}_{T} }&={  3149.5\\ \\mathrm{kW}  }&{ \\dot{W}_{net} }&={  1113.6\\ \\mathrm{kW}  }\\\\{ c_{p} }&={  1.0047\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }&{ c_{v} }&={  0.71768\\ \\frac{\\mathrm{kJ}}{\\left(\\mathrm{K} \\cdot \\mathrm{kg}\\right)}  }&{ \\eta_{II} }&={  0.3235\\  }\\\\{ \\eta_{c} }&={  0.8\\  }&{ \\eta_{t} }&={  0.8\\  }&{ \\eta_{th} }&={  0.25418\\  }\\\\{ \\eta_{th,Carnot} }&={  0.78571\\  }&{ k }&={  1.4\\  }&{ \\dot{m} }&={  5.8061\\ \\frac{\\mathrm{kg}}{\\mathrm{s}}  }\\\\{ r_{p} }&={  10\\  }&{  }\\end{align}","text/plain":"<IPython.core.display.Latex object>"}},"1":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [K]</th>\n      <th>p [kPa]</th>\n      <th>v [mÂ³/kg]</th>\n      <th>Vdot [mÂ³/s]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>300.000000</td>\n      <td>100.0</td>\n      <td>-</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>648.989932</td>\n      <td>1000.0</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>2s</th>\n      <td>579.191946</td>\n      <td>1000.0</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1400.000000</td>\n      <td>1000.0</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>860.118564</td>\n      <td>100.0</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n    <tr>\n      <th>4s</th>\n      <td>725.148205</td>\n      <td>100.0</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"}}},"pos":25,"start":1598807738086,"state":"done","type":"cell"}
{"cell_type":"code","end":1598807958787,"exec_count":32,"id":"0b7617","input":"# Add entropy to the property table\nstates.add_property('s',units='kJ/kg/K')\ns = states.dict['s']\n\npv = IdealGasPropertyPlot(x='v',y='p',fluid='Air')\n\n# plot each state on the p,v diagram and calculate the entropy at each state\nfor i in [1,2,'2s',3,'4s',4]:\n    v[i] = R*T[i]/p[i]\n    pv.plot_state(states[i],label_loc='north east')\n    s[i] = air.s(T=T[i],p=p[i])\n\n# plot the process paths\n#pv.plot_process(states[1],states['2s'],path='isentropic')\npv.plot_process(states[2],states[3],path='isobaric')\n#pv.plot_process(states[3],states['4s'],path='isentropic')\npv.plot_process(states[4],states[1],path='isobaric')\n#pv.plot_process(states[5],states[1],path='isochoric');","kernel":"python3","output":{"0":{"data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7f1372fa4280>]"},"exec_count":32},"1":{"data":{"image/png":"1ec211bccdb222590df661f7dde17dce3982dcc7","text/plain":"<Figure size 864x504 with 1 Axes>"},"metadata":{"image/png":{"height":427,"width":732},"needs_background":"light"}}},"pos":22,"start":1598807958412,"state":"done","type":"cell"}
{"cell_type":"code","end":1598808088149,"exec_count":33,"id":"5c5fc4","input":"Ts = IdealGasPropertyPlot(x='s',y='T',fluid='Air')\n\nfor i in [1,'2s',2,3,'4s',4]:\n    Ts.plot_state(states[i],label_loc='north east')\n    \n#Ts.plot_process(states[1],states[2],path='isentropic')\nTs.plot_process(states[2],states[3],path='isobaric')\n#Ts.plot_process(states[3],states[4],path='isobaric')\nTs.plot_process(states[4],states[1],path='isobaric');","kernel":"python3","output":{"0":{"data":{"image/png":"06589046d6031f25343c88dec1fb29e21713947e","text/plain":"<Figure size 864x504 with 1 Axes>"},"metadata":{"image/png":{"height":427,"width":731},"needs_background":"light"}}},"pos":24,"start":1598808082982,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"cfba54","input":"","pos":27,"type":"cell"}
{"cell_type":"markdown","id":"2295f3","input":"#### (c) $T$ and $p$","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"2ac105","input":"# Example 9.4: Brayton Cycle (Cold-Air-Standard)\n\n*John F. Maddox, Ph.D., P.E.<br>\nUniversity of Kentucky - Paducah Campus<br>\nME 321: Engineering Thermodynamics II<br>*","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"40946b","input":"### Given Parameters\nWe now define variables to hold our known values.","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"622af3","input":"#### (a) $p$-$v$\nNote: the isentropic lines do not line up exactly with the states in this diagram because the entropies were calculated for variable specific heat, but all other properties were calculated using the\ncold-air-standard assumptions (constant specific heat).  ","pos":21,"type":"cell"}
{"cell_type":"markdown","id":"6561e6","input":"## Solution\n","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"7ad157","input":"### Assumptions\n- Cold-air-standard Analysis\n  - Ideal gas\n  - Constant specific heat (evaluated at $25^\\circ\\text{C}$)\n- Maximum pressure occurs at states 3 and 4\n- Maximum temperature occurs at state 4\n- Negligible changes in kinetic energy\n- Negligible changes in potential energy","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"c085db","input":"### Python Initialization\nWe'll start by importing the libraries we will use for our analysis and initializing dictionaries to hold the properties we will be usings.","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"c52faf","input":"#### (d) Net power","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"ccb052","input":"#### (e) Thermal efficiency","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"e61407","input":"#### (b) $T$-$s$ diagram\nNote: the isentropic lines are not vertical in this diagram because the entropies were \ncalculated for variable specific heat, but all other properties were calculated using the\ncold-air-standard assumptions (constant specific heat).  Therefore the errors resulting from the constant specific heat assumption are evident in the skewed shape of the cycle on the $T$-$s$ diagram.","pos":23,"type":"cell"}
{"id":0,"time":1598804067210,"type":"user"}
{"last_load":1598804069060,"type":"file"}