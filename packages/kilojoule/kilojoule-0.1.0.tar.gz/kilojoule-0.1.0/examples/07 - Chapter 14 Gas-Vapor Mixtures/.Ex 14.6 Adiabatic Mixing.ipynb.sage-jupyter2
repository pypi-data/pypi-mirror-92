{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":81096704},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"e6c8e7","input":"","pos":12,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"f5374b","input":"from thermoJFM.templates.humidair_default import *","metadata":{"jupyter":{}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"1707ed","input":"p_surr = Quantity(1,'atm')\n\n# State 1 - Inlet\nT[1] = Quantity(27,'degC')\nrel_hum[1] = Quantity(0.6,'')\nVdot[1] = Quantity(25,'m^3/min')\n\n# State 2 - Exit\nT[2] = Quantity(5,'degC')\nrel_hum[2] = Quantity(0.2,'')\nVdot[2] = Quantity(15,'m^3/min')\n\ndisplay.Summary(locals());","output":{"0":{"data":{"text/latex":"\\[\\begin{aligned}{ p_{surr} }&={  1\\ \\mathrm{atm}  }&{  }\\end{aligned}\\]","text/plain":"<IPython.core.display.Latex object>"},"exec_count":2,"output_type":"execute_result"},"1":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th>T</th>\n      <th>Vdot</th>\n      <th>rel_hum</th>\n    </tr>\n    <tr>\n      <th>unit</th>\n      <th>°C</th>\n      <th>m³/s</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>27</td>\n      <td>0.416667</td>\n      <td>0.6</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>0.250000</td>\n      <td>0.2</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"},"exec_count":2,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"e41e2f","input":"states.fix(1,humidair)\nstates.fix(2,humidair)\n\ndisplay.Summary(locals());","output":{"0":{"data":{"text/latex":"\\[\\begin{aligned}{ p_{surr} }&={  1\\ \\mathrm{atm}  }&{  }\\end{aligned}\\]","text/plain":"<IPython.core.display.Latex object>"},"exec_count":3,"output_type":"execute_result"},"1":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th>T</th>\n      <th>v</th>\n      <th>h</th>\n      <th>s</th>\n      <th>Vdot</th>\n      <th>T_wb</th>\n      <th>T_dp</th>\n      <th>rel_hum</th>\n      <th>omega</th>\n    </tr>\n    <tr>\n      <th>unit</th>\n      <th>°C</th>\n      <th>m³/kg_a</th>\n      <th>kJ/kg_a</th>\n      <th>kJ/K/kg_a</th>\n      <th>m³/s</th>\n      <th>°C</th>\n      <th>°C</th>\n      <th></th>\n      <th>kg_water/kg_a</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>27</td>\n      <td>0.868404</td>\n      <td>61.542624</td>\n      <td>0.218969</td>\n      <td>0.416667</td>\n      <td>21.202464</td>\n      <td>18.579487</td>\n      <td>0.6</td>\n      <td>0.013483</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>0.788904</td>\n      <td>7.732413</td>\n      <td>0.029265</td>\n      <td>0.250000</td>\n      <td>-1.430624</td>\n      <td>-14.413276</td>\n      <td>0.2</td>\n      <td>0.001077</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"},"exec_count":3,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"9796db","input":"# Mass flow rates\nmdot_a[1] = Vdot[1]/v[1]\nmdot_a[2] = Vdot[2]/v[2]\nmdot_a[3] = mdot_a[1] + mdot_a[2]\n\n# 1st Law\nh[3] = (mdot_a[1]*h[1] + mdot_a[2]*h[2])/(mdot_a[3])\n\n# Water Balance\nomega[3] = (mdot_a[1]*omega[1] + mdot_a[2]*omega[2])/(mdot_a[3])\n\n# Exit Temperature\nT[3] = humidair.T(h=h[3],omega=omega[3])\nrel_hum[3] = humidair.rel_hum(h=h[3],omega=omega[3])\n\ndisplay.Calculations(locals(),comments=True);","output":{"0":{"data":{"text/markdown":" Mass flow rates","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"1":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ \\dot{m}_{a,1} }&={ \\frac{\\dot{V}_{1}}{v_{1}} }\\\\\n    &={ \\frac{\\left( 0.41667\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{s}} \\right)}{\\left( 0.8684\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg\\_a}} \\right)} }\\\\\n    &={  0.47981\\ \\frac{\\mathrm{kg\\_a}}{\\mathrm{s}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"10":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { rel_{hum,3} }&={ humidair.rel_hum(h=h[3],omega=omega[3]) } = { 0.64747\\  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"2":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ \\dot{m}_{a,2} }&={ \\frac{\\dot{V}_{2}}{v_{2}} }\\\\\n    &={ \\frac{\\left( 0.25\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{s}} \\right)}{\\left( 0.7889\\ \\frac{\\mathrm{m}^{3}}{\\mathrm{kg\\_a}} \\right)} }\\\\\n    &={  0.3169\\ \\frac{\\mathrm{kg\\_a}}{\\mathrm{s}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"3":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ \\dot{m}_{a,3} }&={ \\dot{m}_{a,1} + \\dot{m}_{a,2} }\\\\\n    &={ \\left( 0.47981\\ \\frac{\\mathrm{kg\\_a}}{\\mathrm{s}} \\right) + \\left( 0.3169\\ \\frac{\\mathrm{kg\\_a}}{\\mathrm{s}} \\right) }\\\\\n    &={  0.7967\\ \\frac{\\mathrm{kg\\_a}}{\\mathrm{s}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"4":{"data":{"text/markdown":" 1st Law","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"5":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ h_{3} }&={ \\frac{\\dot{m}_{a,1} h_{1} + \\dot{m}_{a,2} h_{2}}{\\dot{m}_{a,3}} }\\\\\n    &={ \\frac{\\left( 0.47981\\ \\frac{\\mathrm{kg\\_a}}{\\mathrm{s}} \\right) \\left( 61.543\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg\\_a}} \\right) + \\left( 0.3169\\ \\frac{\\mathrm{kg\\_a}}{\\mathrm{s}} \\right) \\left( 7.7324\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg\\_a}} \\right)}{\\left( 0.7967\\ \\frac{\\mathrm{kg\\_a}}{\\mathrm{s}} \\right)} }\\\\\n    &={  40.139\\ \\frac{\\mathrm{kJ}}{\\mathrm{kg\\_a}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"6":{"data":{"text/markdown":" Water Balance","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"7":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ \\omega_{3} }&={ \\frac{\\dot{m}_{a,1} \\omega_{1} + \\dot{m}_{a,2} \\omega_{2}}{\\dot{m}_{a,3}} }\\\\\n    &={ \\frac{\\left( 0.47981\\ \\frac{\\mathrm{kg\\_a}}{\\mathrm{s}} \\right) \\left( 0.013483\\ \\frac{\\mathrm{kg\\_water}}{\\mathrm{kg\\_a}} \\right) + \\left( 0.3169\\ \\frac{\\mathrm{kg\\_a}}{\\mathrm{s}} \\right) \\left( 0.0010774\\ \\frac{\\mathrm{kg\\_water}}{\\mathrm{kg\\_a}} \\right)}{\\left( 0.7967\\ \\frac{\\mathrm{kg\\_a}}{\\mathrm{s}} \\right)} }\\\\\n    &={  0.0085487\\ \\frac{\\mathrm{kg\\_water}}{\\mathrm{kg\\_a}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"},"8":{"data":{"text/markdown":" Exit Temperature","text/plain":"<IPython.core.display.Markdown object>"},"exec_count":4,"output_type":"execute_result"},"9":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { T_{3} }&={ humidair.T(h=h[3],omega=omega[3]) } = { 18.369\\ \\mathrm{°C}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"},"exec_count":4,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"59db31","input":"psych = humidair.psychrometric_chart(redraw=False)\n\n# Plot States\npsych.plot_state(states[1])\npsych.plot_state(states[2])\npsych.plot_state(states[3])\n\n# Plot Processes\npsych.plot_process(states[1],states[3])\npsych.plot_process(states[2],states[3]);\n","output":{"0":{"data":{"image/png":"b45fb7e5873530bf2188ca49c71147feb820edd5","text/plain":"<Figure size 1200x800 with 1 Axes>"},"exec_count":5,"metadata":{"image/png":{"height":687,"width":1047},"needs_background":"light"},"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"markdown","id":"237c3e","input":"## Solution\n","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"35e7a6","input":"### Psychrometric Chart","pos":10,"type":"cell"}
{"cell_type":"markdown","id":"57e820","input":"### Given","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"64f4ea","input":"# Example 14.6: Adiabatic Mixing\n\n*John F. Maddox, Ph.D., P.E.<br>\nUniversity of Kentucky - Paducah Campus<br>\nME 321: Engineering Thermodynamics II<br>*","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"b2ec5b","input":"#### Exit properties","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"e2129d","input":"### Python Initialization\nWe'll start by importing the libraries we will use for our analysis and initializing dictionaries to hold the properties we will be usings.","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"e51463","input":"## Problem Statement\nReturn air with a temperature of $27^\\circ\\mathrm{C}$, a relative humidity of $60\\%$ and a volumetric flow rate of $25\\ \\mathrm{m^3/min}$ is mixed with $15\\ \\mathrm{m^3/min}$ of outside air with a temperature of $5^\\circ\\mathrm{C}$ and relative humidity of $20\\%$. Determine the exit temperature, relative humidity, and volumetric flow rate.","pos":1,"type":"cell"}
{"id":0,"time":1605074148308,"type":"user"}
{"last_load":1605107024855,"type":"file"}