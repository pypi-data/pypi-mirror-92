{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":428539904},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.9"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1604291888834,"exec_count":1,"id":"d83f0c","input":"from thermoJFM.templates.humidair_USCS_F import *","kernel":"python3","metadata":{"jupyter":{}},"pos":4,"start":1604291884484,"state":"done","type":"cell"}
{"cell_type":"code","end":1604291888935,"exec_count":2,"id":"9ab07f","input":"p_surr = Quantity(1,'atm')\n\n# State 1 - Inlet\nT[1] = Quantity(40,'degF')\nrel_hum[1] = Quantity(0.4,'')\nVdot[1] = Quantity(500,'cfm')\n\n# Water injection\np['w'] = Quantity(1,'atm')\nx['w'] = Quantity(1,'')\n\n# State 3 - Exit\nT[3] = Quantity(78,'degF')\nrel_hum[3] = Quantity(0.6,'')\n\ndisplay.Summary(locals());","kernel":"python3","output":{"0":{"data":{"text/latex":"\\[\\begin{aligned}{ p_{surr} }&={  1\\ \\mathrm{atm}  }&{  }\\end{aligned}\\]","text/plain":"<IPython.core.display.Latex object>"}},"1":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [°F]</th>\n      <th>p [psi]</th>\n      <th>x []</th>\n      <th>Vdot [ft³/s]</th>\n      <th>rel_hum []</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>40</td>\n      <td>-</td>\n      <td>-</td>\n      <td>8.33333</td>\n      <td>0.4</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>78</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>0.6</td>\n    </tr>\n    <tr>\n      <th>w</th>\n      <td>-</td>\n      <td>14.6959</td>\n      <td>1</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"}}},"pos":6,"start":1604291888847,"state":"done","type":"cell"}
{"cell_type":"code","end":1604291889023,"exec_count":3,"id":"8870a3","input":"states.fix(1,humidair)\nstates.fix('w',humidair)\nstates.fix(3,humidair)\n# h_w['inj'] = water.h(T['inj'],x['inj'])\ndisplay.Summary(locals());","kernel":"python3","output":{"0":{"data":{"text/latex":"\\[\\begin{aligned}{ p_{surr} }&={  1\\ \\mathrm{atm}  }&{  }\\end{aligned}\\]","text/plain":"<IPython.core.display.Latex object>"}},"1":{"data":{"text/html":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>T [°F]</th>\n      <th>p [psi]</th>\n      <th>v [ft³/lb_dry_air]</th>\n      <th>h [Btu/lb_dry_air]</th>\n      <th>h_w [Btu/lb_water]</th>\n      <th>s [Btu/lb_dry_air/°R]</th>\n      <th>x []</th>\n      <th>Vdot [ft³/s]</th>\n      <th>T_wb [°F]</th>\n      <th>T_dp [°F]</th>\n      <th>rel_hum []</th>\n      <th>omega [lb_water/lb_dry_air]</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>40</td>\n      <td>-</td>\n      <td>12.6319</td>\n      <td>4.16057</td>\n      <td>-</td>\n      <td>0.00879739</td>\n      <td>-</td>\n      <td>8.33333</td>\n      <td>31.6493</td>\n      <td>19.2458</td>\n      <td>0.4</td>\n      <td>0.00207606</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>78</td>\n      <td>-</td>\n      <td>13.8189</td>\n      <td>24.5867</td>\n      <td>-</td>\n      <td>0.0487584</td>\n      <td>-</td>\n      <td>-</td>\n      <td>67.9084</td>\n      <td>63.0045</td>\n      <td>0.6</td>\n      <td>0.0123587</td>\n    </tr>\n    <tr>\n      <th>w</th>\n      <td>-</td>\n      <td>14.6959</td>\n      <td>-</td>\n      <td>-</td>\n      <td>1150.27</td>\n      <td>-</td>\n      <td>1</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n    </tr>\n  </tbody>\n</table>","text/plain":"<IPython.core.display.HTML object>"}}},"pos":7,"start":1604291888963,"state":"done","type":"cell"}
{"cell_type":"code","end":1604291889436,"exec_count":4,"id":"54bf04","input":"# Mass flow rate\nmdot_a[1] = Vdot[1]/v[1]\nmdot_a[3] = mdot_a[1]\n\n# Water balance\nmdot_w['w'] = mdot_a[1]*(omega[3]-omega[1])\n\ndisplay.Calculations(locals(),comments=True);","kernel":"python3","output":{"0":{"data":{"text/markdown":" Mass flow rate","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ \\dot{m}_{a,1} }&={ \\frac{\\dot{V}_{1}}{v_{1}} }\\\\\n    &={ \\frac{\\left( 8.3333\\ \\frac{\\mathrm{ft}^{3}}{\\mathrm{s}} \\right)}{\\left( 12.632\\ \\frac{\\mathrm{ft}^{3}}{\\mathrm{lb\\_dry\\_air}} \\right)} }\\\\\n    &={  0.65971\\ \\frac{\\mathrm{lb\\_dry\\_air}}{\\mathrm{s}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"2":{"data":{"text/latex":"\\[\n  \\begin{aligned}\n    { \\dot{m}_{a,3} }&={ \\dot{m}_{a,1} } = { 0.65971\\ \\frac{\\mathrm{lb\\_dry\\_air}}{\\mathrm{s}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}},"3":{"data":{"text/markdown":" Water balance","text/plain":"<IPython.core.display.Markdown object>"}},"4":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ \\dot{m}_{w,w} }&={ \\dot{m}_{a,1} \\left(\\omega_{3} - \\omega_{1}\\right) }\\\\\n    &={ \\left( 0.65971\\ \\frac{\\mathrm{lb\\_dry\\_air}}{\\mathrm{s}} \\right) \\left(\\left( 0.012359\\ \\frac{\\mathrm{lb\\_water}}{\\mathrm{lb\\_dry\\_air}} \\right) - \\left( 0.0020761\\ \\frac{\\mathrm{lb\\_water}}{\\mathrm{lb\\_dry\\_air}} \\right)\\right) }\\\\\n    &={  0.0067835\\ \\frac{\\mathrm{lb\\_water}}{\\mathrm{s}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}}},"pos":9,"start":1604291889031,"state":"done","type":"cell"}
{"cell_type":"code","end":1604291889478,"exec_count":5,"id":"c31c73","input":"# 1st Law\nQdot_1_to_2 = mdot_a[1]*(h[3]-h[1]) - mdot_w['w']*h_w['w']\nQdot_1_to_2 = Qdot_1_to_2.to('Btu/min') # hide\n\ndisplay.Calculations(locals(),comments=True);","kernel":"python3","output":{"0":{"data":{"text/markdown":" 1st Law","text/plain":"<IPython.core.display.Markdown object>"}},"1":{"data":{"text/latex":"\\[\n  \\begin{aligned}{ \\dot{Q}_{1\\to2} }&={ - \\dot{m}_{w,w} h_{w,w} + \\dot{m}_{a,1} \\left(h_{3} - h_{1}\\right) }\\\\\n    &={ - \\left( 0.0067835\\ \\frac{\\mathrm{lb\\_water}}{\\mathrm{s}} \\right) \\left( 1150.3\\ \\frac{\\mathrm{Btu}}{\\mathrm{lb\\_water}} \\right) + \\left( 0.65971\\ \\frac{\\mathrm{lb\\_dry\\_air}}{\\mathrm{s}} \\right) \\left(\\left( 24.587\\ \\frac{\\mathrm{Btu}}{\\mathrm{lb\\_dry\\_air}} \\right) - \\left( 4.1606\\ \\frac{\\mathrm{Btu}}{\\mathrm{lb\\_dry\\_air}} \\right)\\right) }\\\\\n    &={  340.34\\ \\frac{\\mathrm{Btu}}{\\mathrm{min}}  }\n  \\end{aligned}\n\\]\n","text/plain":"<IPython.core.display.Latex object>"}}},"pos":11,"start":1604291889444,"state":"done","type":"cell"}
{"cell_type":"code","end":1604291955242,"exec_count":7,"id":"e41293","input":"psych = humidair.psychrometric_chart(redraw=False)\n\n# State 2\nomega[2] = omega[1]\nh[2] = h[1] + Qdot_1_to_2/mdot_a[1]\nstates.fix(2,humidair)\n\n# Plot States\npsych.plot_state(states[1])\npsych.plot_state(states[2],label_loc='south east')\npsych.plot_state(states[3])\n\n# Plot Processes\npsych.plot_process(states[1],states[2],path='simple heating')\npsych.plot_process(states[2],states[3])","kernel":"python3","output":{"0":{"data":{"image/png":"a26b58b34a7582a404607fc460826459416318bf","text/plain":"<Figure size 1200x800 with 1 Axes>"},"metadata":{"image/png":{"height":684,"width":1046}}},"1":{"data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7fdfd09716a0>]"},"exec_count":7}},"pos":13,"start":1604291951985,"state":"done","type":"cell"}
{"cell_type":"code","id":"f69206","input":"","pos":14,"type":"cell"}
{"cell_type":"markdown","id":"35f284","input":"# Example 14.4: Heating with Humidification\n\n*John F. Maddox, Ph.D., P.E.<br>\nUniversity of Kentucky - Paducah Campus<br>\nME 321: Engineering Thermodynamics II<br>*","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"5a0144","input":"### Psychrometric Chart","pos":12,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"67f110","input":"#### (b) Steam flow rate","pos":8,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"806f54","input":"#### (a) Heat input","pos":10,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"abdf34","input":"## Problem Statement\nAn air-conditioning system takes in atmospheric air at $40^\\circ\\mathrm{F}$, $1\\ \\mathrm{atm}$ with a $40\\%$ relative humidity at a rate of $500\\ \\mathrm{CFM}$ and conditions it to a temperature of $78^\\circ\\mathrm{F}$ and a relative humidity of $60\\%$ by first heating and then injecting saturated water vapor at $1\\ \\mathrm{atm}$ into the air. Determine:\n* (a) The required rate of heat transfer from the coils\n* (b) The required mass flow rate of steam","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b23bf5","input":"### Given","pos":5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"bb8ff7","input":"### Python Initialization\nWe'll start by importing the libraries we will use for our analysis and initializing dictionaries to hold the properties we will be usings.","pos":3,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d43de8","input":"## Solution\n","pos":2,"state":"done","type":"cell"}
{"id":0,"time":1604291877865,"type":"user"}
{"last_load":1604291878242,"type":"file"}