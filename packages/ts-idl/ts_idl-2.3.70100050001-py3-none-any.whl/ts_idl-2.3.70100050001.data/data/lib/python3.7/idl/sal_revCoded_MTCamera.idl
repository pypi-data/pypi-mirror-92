// SAL_VERSION=5.0.1 XML_VERSION=7.1.0
module MTCamera {
struct command_abort_9e5ecdb2 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_abort_9e5ecdb2 
struct command_clear_becafb70 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	nClears; // @Metadata=(Units="unitless",Description="Number of consecutive clear operations to perform")
	};
#pragma keylist command_clear_becafb70 
struct command_disable_ced5e5a3 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_disable_ced5e5a3 
struct command_disableCalibration_bf660bec {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	};
#pragma keylist command_disableCalibration_bf660bec 
struct command_discardRows_63583db6 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	nRows; // @Metadata=(Units="unitless",Description="Number of rows to discard")
	};
#pragma keylist command_discardRows_63583db6 
struct command_enable_8329247e {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_enable_8329247e 
struct command_enableCalibration_d979840e {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	};
#pragma keylist command_enableCalibration_d979840e 
struct command_endImage_0ebba276 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	};
#pragma keylist command_endImage_0ebba276 
struct command_enterControl_259e5d80 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_enterControl_259e5d80 
struct command_exitControl_52cfe5f0 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_exitControl_52cfe5f0 
struct command_initGuiders_f2201a16 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<256>	roiSpec; // @Metadata=(Units="unitless",Description="TBD specification for region of interest")
	};
#pragma keylist command_initGuiders_f2201a16 
struct command_initImage_a2db6ba1 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	deltaT; // @Metadata=(Units="second",Description="Estimate of time period before takeImages will be issued")
	};
#pragma keylist command_initImage_a2db6ba1 
struct command_setAuthList_22e9b6ff {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	authorizedUsers; // @Metadata=(Units="unitless",Description="Comma seperated list of authorized users currently allowed to command this CSC;")
	  string	nonAuthorizedCSCs; // @Metadata=(Units="unitless",Description="Comma seperated list of CSC's not currently allowed to command this CSC;")
	};
#pragma keylist command_setAuthList_22e9b6ff 
struct command_setFilter_98691ee4 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<256>	name; // @Metadata=(Units="unitless",Description="The filter name to install")
	};
#pragma keylist command_setFilter_98691ee4 
struct command_setLogLevel_3b890902 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	level; // @Metadata=(Units="unitless",Description="Logging level; as a Python logging level: error=40; warning=30; info=20; debug=10.")
	};
#pragma keylist command_setLogLevel_3b890902 
struct command_setValue_9bc17528 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<256>	parametersAndValues; // @Metadata=(Units="unitless",Description="List of parameters and their values as a Json string")
	};
#pragma keylist command_setValue_9bc17528 
struct command_standby_3af2e939 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_standby_3af2e939 
struct command_start_07d9bee9 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<256>	settingsToApply; // @Metadata=(Units="unitless",Description="Name of the selected settings set")
	};
#pragma keylist command_start_07d9bee9 
struct command_startImage_3cb19079 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	shutter; // @Metadata=(Units="unitless",Description="True if the shutter should be opened/closed")
	  string	sensors; // @Metadata=(Units="unitless",Description="Sensors to be read out; if blank all configured sensors will be read out")
	  string	keyValueMap; // @Metadata=(Units="unitless",Description="Map of additional key value pairs; e.g. imageType: XYZ; groupId: ABC")
	  string	obsNote; // @Metadata=(Units="unitless",Description="An arbitrary operator provided string; useful for informally flagging images")
	  double	timeout; // @Metadata=(Units="second",Description="Timeout after which imaging will be abandoned if no endImage command received")
	};
#pragma keylist command_startImage_3cb19079 
struct command_stop_196246cf {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	};
#pragma keylist command_stop_196246cf 
struct command_takeImages_b8a1857c {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	numImages; // @Metadata=(Units="unitless",Description="Number of consecutive images to take")
	  double	expTime; // @Metadata=(Units="second",Description="Exposure time")
	  boolean	shutter; // @Metadata=(Units="unitless",Description="True if the shutter should be opened/closed")
	  string	sensors; // @Metadata=(Units="unitless",Description="Sensors to be read out; if blank all configured sensors will be read out")
	  string	keyValueMap; // @Metadata=(Units="unitless",Description="Map of additional key value pairs to associate extra data with the image(s); e.g. imageType: XYZ; groupId: ABC")
	  string	obsNote; // @Metadata=(Units="unitless",Description="An arbitrary operator provided string; useful for informally flagging images")
	};
#pragma keylist command_takeImages_b8a1857c 
struct daq_monitor_Store_364df415 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	capacity; // @Metadata=(Units="Gbyte",Description="total disk space")
	  double	freeSpace; // @Metadata=(Units="Gbyte",Description="available disk space")
	  double	freeFraction; // @Metadata=(Units="unitless",Description="available-space fraction")
	};
#pragma keylist daq_monitor_Store_364df415 
struct focal_plane_Ccd_d1d08bf9 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	gDV[197]; // @Metadata=(Units="Volt",Description="GD 0 voltage")
	  string	location; // @Metadata=(Units="unitless",Description="Ccd Location")
	  double	oDI[197]; // @Metadata=(Units="mA",Description="OD 0 current")
	  double	oDV[197]; // @Metadata=(Units="Volt",Description="OD 0 voltage")
	  double	oGV[197]; // @Metadata=(Units="Volt",Description="OG 0 voltage")
	  double	rDV[197]; // @Metadata=(Units="Volt",Description="RD 0 voltage")
	  double	temp[197]; // @Metadata=(Units="Celsius",Description="CCD temperature")
	};
#pragma keylist focal_plane_Ccd_d1d08bf9 
struct focal_plane_Reb_39563364 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	anaI[71]; // @Metadata=(Units="mA",Description="Analog PS current")
	  double	anaV[71]; // @Metadata=(Units="Volt",Description="Analog PS voltage")
	  double	aspicl_Temp0[71]; // @Metadata=(Units="Celsius",Description="ASPIC 0 lower temp")
	  double	aspicl_Temp1[71]; // @Metadata=(Units="Celsius",Description="ASPIC 1 lower temp")
	  double	aspicl_Temp2[71]; // @Metadata=(Units="Celsius",Description="ASPIC 2 lower temp")
	  double	aspicu_Temp0[71]; // @Metadata=(Units="Celsius",Description="ASPIC 0 upper temp")
	  double	aspicu_Temp1[71]; // @Metadata=(Units="Celsius",Description="ASPIC 1 upper temp")
	  double	aspicu_Temp2[71]; // @Metadata=(Units="Celsius",Description="ASPIC 2 upper temp")
	  double	clkHI[71]; // @Metadata=(Units="mA",Description="Clock High PS current")
	  double	clkHV[71]; // @Metadata=(Units="Volt",Description="Clock High PS voltage")
	  double	clkLI[71]; // @Metadata=(Units="mA",Description="Clock Low PS current")
	  double	clkLV[71]; // @Metadata=(Units="Volt",Description="Clock Low PS voltage")
	  double	digI[71]; // @Metadata=(Units="mA",Description="Digital PS current")
	  double	digV[71]; // @Metadata=(Units="Volt",Description="Digital PS voltage")
	  double	htrPI[8]; // @Metadata=(Units="mA",Description="Heater PS current")
	  double	htrPV[8]; // @Metadata=(Units="Volt",Description="Heater PS voltage")
	  double	htrV[71]; // @Metadata=(Units="Volt",Description="Heater voltage")
	  double	htrW[71]; // @Metadata=(Units="Watt",Description="Heater power")
	  double	hVBiasSwitch[71]; // @Metadata=(Units="unitless",Description="HV bias switch")
	  string	location; // @Metadata=(Units="unitless",Description="Reb Location")
	  double	oDI[71]; // @Metadata=(Units="mA",Description="OD PS current")
	  double	oDV[71]; // @Metadata=(Units="Volt",Description="OD PS voltage")
	  double	pClk0[71]; // @Metadata=(Units="Volt",Description="Parallel 0")
	  double	pClk1[71]; // @Metadata=(Units="Volt",Description="Parallel 1")
	  double	pClkL[71]; // @Metadata=(Units="Volt",Description="Parallel lower")
	  double	pClkU[71]; // @Metadata=(Units="Volt",Description="Parallel upper")
	  double	power[71]; // @Metadata=(Units="Watt",Description="Total power")
	  double	ref05V[71]; // @Metadata=(Units="Volt",Description="5V ref 0 voltage")
	  double	ref125V[71]; // @Metadata=(Units="Volt",Description="2.5V ref 1 voltage")
	  double	ref15V[71]; // @Metadata=(Units="Volt",Description="5V ref 1 voltage")
	  double	ref25V[71]; // @Metadata=(Units="Volt",Description="5V ref 2 voltage")
	  double	refN12[71]; // @Metadata=(Units="Volt",Description="Negative 12 ref")
	  double	refP12[71]; // @Metadata=(Units="Volt",Description="Positive 12 ref")
	  double	rG0[71]; // @Metadata=(Units="Volt",Description="RG 0")
	  double	rG1[71]; // @Metadata=(Units="Volt",Description="RG 1")
	  double	rGL[71]; // @Metadata=(Units="Volt",Description="Reset gate lower")
	  double	rGU[71]; // @Metadata=(Units="Volt",Description="Reset gate upper")
	  double	rTDTemp[71]; // @Metadata=(Units="Celsius",Description="RTD temperature")
	  double	sClk0[71]; // @Metadata=(Units="Volt",Description="Serial 0")
	  double	sClk1[71]; // @Metadata=(Units="Volt",Description="Serial 1")
	  double	sClkL[71]; // @Metadata=(Units="Volt",Description="Serial lower")
	  double	sClkU[71]; // @Metadata=(Units="Volt",Description="Serial upper")
	  double	sw_GDV[71]; // @Metadata=(Units="Volt",Description="GD 0 voltage")
	  double	sw_ODI[71]; // @Metadata=(Units="mA",Description="OD 0 current")
	  double	sw_ODV[71]; // @Metadata=(Units="Volt",Description="OD 0 voltage")
	  double	sw_OGV[71]; // @Metadata=(Units="Volt",Description="OG 0 voltage")
	  double	sw_RDV[71]; // @Metadata=(Units="Volt",Description="RD 0 voltage")
	  double	sw_Temp[71]; // @Metadata=(Units="Celsius",Description="SW temperature")
	  double	temp1[71]; // @Metadata=(Units="Celsius",Description="Board temperature 1")
	  double	temp10[71]; // @Metadata=(Units="Celsius",Description="Board temperature 10")
	  double	temp2[71]; // @Metadata=(Units="Celsius",Description="Board temperature 2")
	  double	temp3[71]; // @Metadata=(Units="Celsius",Description="Board temperature 3")
	  double	temp4[71]; // @Metadata=(Units="Celsius",Description="Board temperature 4")
	  double	temp5[71]; // @Metadata=(Units="Celsius",Description="Board temperature 5")
	  double	temp6[71]; // @Metadata=(Units="Celsius",Description="Board temperature 6")
	  double	temp7[71]; // @Metadata=(Units="Celsius",Description="Board temperature 7")
	  double	temp8[71]; // @Metadata=(Units="Celsius",Description="Board temperature 8")
	  double	temp9[71]; // @Metadata=(Units="Celsius",Description="Board temperature 9")
	};
#pragma keylist focal_plane_Reb_39563364 
struct focal_plane_RebTotalPower_20fc05a8 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	rebTotalPower; // @Metadata=(Units="Watt",Description="Reb Total Power")
	};
#pragma keylist focal_plane_RebTotalPower_20fc05a8 
struct focal_plane_Segment_f05db9cc {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	i[3024]; // @Metadata=(Units="mA",Description="Amplifier current")
	  string	location; // @Metadata=(Units="unitless",Description="Segment Location")
	};
#pragma keylist focal_plane_Segment_f05db9cc 
struct hex_Cold1_00737ff8 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	supplyTmp; // @Metadata=(Units="Celsius",Description="Supply Temperature")
	  double	preExpnTmp; // @Metadata=(Units="Celsius",Description="Pre Expn Temperature")
	  double	evapExitTmp; // @Metadata=(Units="Celsius",Description="Evap Exit Temperature")
	  double	hexRtrnTmp; // @Metadata=(Units="Celsius",Description="HX Return Temperature")
	  double	supplyPrs; // @Metadata=(Units="psia",Description="Supply Pressure")
	  double	returnPrs; // @Metadata=(Units="psia",Description="Return Pressure")
	  double	superHeat; // @Metadata=(Units="Celsius",Description="Cold1 SuperHeat")
	  double	supplySubCooling; // @Metadata=(Units="Celsius",Description="Cold1 Supply SubCooling")
	};
#pragma keylist hex_Cold1_00737ff8 
struct hex_Cold2_453dcbd9 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	supplyTmp; // @Metadata=(Units="Celsius",Description="Supply Temperature")
	  double	preExpnTmp; // @Metadata=(Units="Celsius",Description="Pre Expn Temperature")
	  double	evapExitTmp; // @Metadata=(Units="Celsius",Description="Evap Exit Temperature")
	  double	hexRtrnTmp; // @Metadata=(Units="Celsius",Description="HX Return Temperature")
	  double	supplyPrs; // @Metadata=(Units="psia",Description="Supply Pressure")
	  double	returnPrs; // @Metadata=(Units="psia",Description="Return Pressure")
	  double	superHeat; // @Metadata=(Units="Celsius",Description="Cold2 SuperHeat")
	  double	supplySubCooling; // @Metadata=(Units="Celsius",Description="Cold2 Supply SubCooling")
	};
#pragma keylist hex_Cold2_453dcbd9 
struct hex_Cryo1_a49f0127 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	c3ExitTmp; // @Metadata=(Units="Celsius",Description="C3 Exit Temperature")
	  double	preC3Tmp; // @Metadata=(Units="Celsius",Description="Pre C3 Temperature")
	  double	preC4Tmp; // @Metadata=(Units="Celsius",Description="Pre C4 Temperature")
	  double	c4ExitTmp; // @Metadata=(Units="Celsius",Description="C4 Exit Temperature")
	  double	evapExitTmp; // @Metadata=(Units="Celsius",Description="Evap Exit Temperature")
	  double	hexRtrnTmp; // @Metadata=(Units="Celsius",Description="HX Return Temperature")
	  double	vaporPrs; // @Metadata=(Units="psia",Description="Vapor Pressure")
	  double	liquidPrs; // @Metadata=(Units="psia",Description="Liquid Pressure")
	  double	returnPrs; // @Metadata=(Units="psia",Description="Return Pressure")
	};
#pragma keylist hex_Cryo1_a49f0127 
struct hex_Cryo2_d61cb9bf {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	c3ExitTmp; // @Metadata=(Units="Celsius",Description="C3 Exit Temperature")
	  double	preC3Tmp; // @Metadata=(Units="Celsius",Description="Pre C3 Temperature")
	  double	preC4Tmp; // @Metadata=(Units="Celsius",Description="Pre C4 Temperature")
	  double	c4ExitTmp; // @Metadata=(Units="Celsius",Description="C4 Exit Temperature")
	  double	evapExitTmp; // @Metadata=(Units="Celsius",Description="Evap Exit Temperature")
	  double	hexRtrnTmp; // @Metadata=(Units="Celsius",Description="HX Return Temperature")
	  double	vaporPrs; // @Metadata=(Units="psia",Description="Vapor Pressure")
	  double	liquidPrs; // @Metadata=(Units="psia",Description="Liquid Pressure")
	  double	returnPrs; // @Metadata=(Units="psia",Description="Return Pressure")
	};
#pragma keylist hex_Cryo2_d61cb9bf 
struct hex_Cryo3_2766f3df {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	c3ExitTmp; // @Metadata=(Units="Celsius",Description="C3 Exit Temperature")
	  double	preC3Tmp; // @Metadata=(Units="Celsius",Description="Pre C3 Temperature")
	  double	preC4Tmp; // @Metadata=(Units="Celsius",Description="Pre C4 Temperature")
	  double	c4ExitTmp; // @Metadata=(Units="Celsius",Description="C4 Exit Temperature")
	  double	evapExitTmp; // @Metadata=(Units="Celsius",Description="Evap Exit Temperature")
	  double	hexRtrnTmp; // @Metadata=(Units="Celsius",Description="HX Return Temperature")
	  double	vaporPrs; // @Metadata=(Units="psia",Description="Vapor Pressure")
	  double	liquidPrs; // @Metadata=(Units="psia",Description="Liquid Pressure")
	  double	returnPrs; // @Metadata=(Units="psia",Description="Return Pressure")
	};
#pragma keylist hex_Cryo3_2766f3df 
struct hex_Cryo4_917f2cba {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	c3ExitTmp; // @Metadata=(Units="Celsius",Description="C3 Exit Temperature")
	  double	preC3Tmp; // @Metadata=(Units="Celsius",Description="Pre C3 Temperature")
	  double	preC4Tmp; // @Metadata=(Units="Celsius",Description="Pre C4 Temperature")
	  double	c4ExitTmp; // @Metadata=(Units="Celsius",Description="C4 Exit Temperature")
	  double	evapExitTmp; // @Metadata=(Units="Celsius",Description="Evap Exit Temperature")
	  double	hexRtrnTmp; // @Metadata=(Units="Celsius",Description="HX Return Temperature")
	  double	vaporPrs; // @Metadata=(Units="psia",Description="Vapor Pressure")
	  double	liquidPrs; // @Metadata=(Units="psia",Description="Liquid Pressure")
	  double	returnPrs; // @Metadata=(Units="psia",Description="Return Pressure")
	};
#pragma keylist hex_Cryo4_917f2cba 
struct hex_Cryo5_025a67bc {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	c3ExitTmp; // @Metadata=(Units="Celsius",Description="C3 Exit Temperature")
	  double	preC3Tmp; // @Metadata=(Units="Celsius",Description="Pre C3 Temperature")
	  double	preC4Tmp; // @Metadata=(Units="Celsius",Description="Pre C4 Temperature")
	  double	c4ExitTmp; // @Metadata=(Units="Celsius",Description="C4 Exit Temperature")
	  double	evapExitTmp; // @Metadata=(Units="Celsius",Description="Evap Exit Temperature")
	  double	hexRtrnTmp; // @Metadata=(Units="Celsius",Description="HX Return Temperature")
	  double	vaporPrs; // @Metadata=(Units="psia",Description="Vapor Pressure")
	  double	liquidPrs; // @Metadata=(Units="psia",Description="Liquid Pressure")
	  double	returnPrs; // @Metadata=(Units="psia",Description="Return Pressure")
	};
#pragma keylist hex_Cryo5_025a67bc 
struct hex_Cryo6_e1d79352 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	c3ExitTmp; // @Metadata=(Units="Celsius",Description="C3 Exit Temperature")
	  double	preC3Tmp; // @Metadata=(Units="Celsius",Description="Pre C3 Temperature")
	  double	preC4Tmp; // @Metadata=(Units="Celsius",Description="Pre C4 Temperature")
	  double	c4ExitTmp; // @Metadata=(Units="Celsius",Description="C4 Exit Temperature")
	  double	evapExitTmp; // @Metadata=(Units="Celsius",Description="Evap Exit Temperature")
	  double	hexRtrnTmp; // @Metadata=(Units="Celsius",Description="HX Return Temperature")
	  double	vaporPrs; // @Metadata=(Units="psia",Description="Vapor Pressure")
	  double	liquidPrs; // @Metadata=(Units="psia",Description="Liquid Pressure")
	  double	returnPrs; // @Metadata=(Units="psia",Description="Return Pressure")
	};
#pragma keylist hex_Cryo6_e1d79352 
struct logevent_appliedSettingsMatchStart_6e6a2d46 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	appliedSettingsMatchStartIsTrue; // @Metadata=(Units="unitless",Description="True when the configuration matches the start conditions")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_appliedSettingsMatchStart_6e6a2d46 
struct logevent_authList_28b43892 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	authorizedUsers; // @Metadata=(Units="unitless",Description="Comma seperated list of authorized users currently allowed to command this CSC.")
	  string	nonAuthorizedCSCs; // @Metadata=(Units="unitless",Description="Comma seperated list of CSC's not currently allowed to command this CSC.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_authList_28b43892 
struct logevent_availableFilters_91813f14 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<256>	filterNames; // @Metadata=(Units="unitless",Description="A list of installed filter names (comma delimimted; U-001;G-004;R-010;Z-012;Y-014); in the same order as the list of filter types.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_availableFilters_91813f14 
struct logevent_calibrationDetailedState_6cf38e66 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	substate; // @Metadata=(Units="unitless",Description="Enumeration of valid substates")
	  double	timestampTransition; // @Metadata=(Units="second",Description="The time at which the state transition occurred")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_calibrationDetailedState_6cf38e66 
	 const long calibrationDetailedState_DISABLED=1;
	 const long calibrationDetailedState_ENABLED=2;
	 const long calibrationDetailedState_INTEGRATING=3;
struct logevent_ccsCommandState_ccda1074 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	substate; // @Metadata=(Units="unitless",Description="Substate of the CCS command.")
	  double	timestampTransition; // @Metadata=(Units="second",Description="The time at which the state transition occurred")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_ccsCommandState_ccda1074 
	 const long ccsCommandState_IDLE=1;
	 const long ccsCommandState_BUSY=2;
struct logevent_ccsConfigured_3082557d {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_ccsConfigured_3082557d 
struct logevent_endInitializeGuider_7531be21 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_endInitializeGuider_7531be21 
struct logevent_endInitializeImage_9f67d666 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_endInitializeImage_9f67d666 
struct logevent_endLoadFilter_ea9b4444 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_endLoadFilter_ea9b4444 
struct logevent_endOfImageTelemetry_4df80b03 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	additionalKeys; // @Metadata=(Units="unitless",Description="Additional keys passed to the takeImages command (: delimited)")
	  string	additionalValues; // @Metadata=(Units="unitless",Description="Additional values passed to the takeImages command (: delimited; in same order as additionalKeys)")
	  long	imagesInSequence; // @Metadata=(Units="unitless",Description="The total number of requested images in sequence")
	  string<32>	imageName; // @Metadata=(Units="unitless",Description="The imageName for this specific exposure; assigned by the camera")
	  long	imageIndex; // @Metadata=(Units="unitless",Description="The zero based index number for this specific exposure within the sequence")
	  string<2>	imageSource; // @Metadata=(Units="unitless",Description="The source component of the image name (AT/CC/MC)")
	  string	imageController; // @Metadata=(Units="unitless",Description="The controller for the image  (O=OCS/C=CCS/...)")
	  string<8>	imageDate; // @Metadata=(Units="unitless",Description="The date component of the image name (YYYYMMDD)")
	  long	imageNumber; // @Metadata=(Units="unitless",Description="The image number (SEQNO) component of the image name")
	  double	timestampAcquisitionStart; // @Metadata=(Units="second",Description="The effective time at which the image acquisition started (i.e. the end of the previous clear or readout)")
	  double	exposureTime; // @Metadata=(Units="second",Description="The requested exposure time")
	  string<64>	imageTag; // @Metadata=(Units="unitless",Description="The DAQ assigned image tag (hex string)")
	  double	timestampDateObs; // @Metadata=(Units="second",Description="The observation date; as computed by CCS (as TAI)")
	  double	timestampDateEnd; // @Metadata=(Units="second",Description="The end observation date; as computed by CCS (as TAI)")
	  double	measuredShutterOpenTime; // @Metadata=(Units="second",Description="The measured shutter open time; as computed by CCS. This is a best estimate based on a summary of the full information provided")
	  double	darkTime; // @Metadata=(Units="second",Description="The dark time; as computed by CCS")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_endOfImageTelemetry_4df80b03 
struct logevent_endReadout_8a6835f4 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	additionalKeys; // @Metadata=(Units="unitless",Description="Additional keys passed to the takeImages command (: delimited)")
	  string	additionalValues; // @Metadata=(Units="unitless",Description="Additional values passed to the takeImages command (: delimited; in same order as additionalKeys)")
	  long	imagesInSequence; // @Metadata=(Units="unitless",Description="The total number of requested images in sequence")
	  string<32>	imageName; // @Metadata=(Units="unitless",Description="The imageName for this specific exposure; assigned by the camera")
	  long	imageIndex; // @Metadata=(Units="unitless",Description="The zero based index number for this specific exposure within the sequence")
	  string<2>	imageSource; // @Metadata=(Units="unitless",Description="The source component of the image name (AT/CC/MC)")
	  string	imageController; // @Metadata=(Units="unitless",Description="The controller for the image  (O=OCS/C=CCS/...)")
	  string<8>	imageDate; // @Metadata=(Units="unitless",Description="The date component of the image name (YYYYMMDD)")
	  long	imageNumber; // @Metadata=(Units="unitless",Description="The image number (SEQNO) component of the image name")
	  double	timestampAcquisitionStart; // @Metadata=(Units="second",Description="The effective time at which the image acquisition started (i.e. the end of the previous clear or readout)")
	  double	requestedExposureTime; // @Metadata=(Units="second",Description="The requested exposure time (as specified in the takeImages command)")
	  double	timestampEndOfReadout; // @Metadata=(Units="second",Description="The time at which the readout was completed")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_endReadout_8a6835f4 
struct logevent_endRotateCarousel_b31cb1c9 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_endRotateCarousel_b31cb1c9 
struct logevent_endSetFilter_965de806 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	filterName; // @Metadata=(Units="unitless",Description="The name of the filter being installed (e.g. U-001)")
	  string	filterType; // @Metadata=(Units="unitless",Description="The type of the filter being installed (e.g. g;r;i;z;y;u;none;other). If other it can optionally be")
	  long	filterSlot; // @Metadata=(Units="unitless",Description="The slot which the filter is in (ComCam) or came from (Main Camera)")
	  double	filterPosition; // @Metadata=(Units="mm",Description="For ComCam this is the measured linear encoder position once the filter in in place. For Main Camera it may be unused.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_endSetFilter_965de806 
struct logevent_endShutterClose_20ba3989 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_endShutterClose_20ba3989 
struct logevent_endShutterOpen_225f750a {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_endShutterOpen_225f750a 
struct logevent_endTakeImage_ab8f936a {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_endTakeImage_ab8f936a 
struct logevent_endUnloadFilter_6ff9b7e5 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_endUnloadFilter_6ff9b7e5 
struct logevent_errorCode_a6672510 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	errorCode; // @Metadata=(Units="unitless",Description="A numeric error code")
	  string	errorReport; // @Metadata=(Units="unitless",Description="An string providing detailed information about the error")
	  string	traceback; // @Metadata=(Units="unitless",Description="An optional stack trace of the error condition")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_errorCode_a6672510 
struct logevent_filterChangerDetailedState_c660fece {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	substate; // @Metadata=(Units="unitless",Description="substate")
	  double	timestampTransition; // @Metadata=(Units="second",Description="The time at which the state transition occurred")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_filterChangerDetailedState_c660fece 
	 const long filterChangerDetailedState_UNLOADING=1;
	 const long filterChangerDetailedState_LOADING=2;
	 const long filterChangerDetailedState_LOADED=3;
	 const long filterChangerDetailedState_UNLOADED=4;
	 const long filterChangerDetailedState_ROTATING=5;
struct logevent_focalPlaneSummaryInfo_e96ea017 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	ccdLocation; // @Metadata=(Units="unitless",Description="CCD location in focal-plane (e.g. R22S01) (: delimited).")
	  string	raftBay; // @Metadata=(Units="unitless",Description="The raft bay for each CCD listed above; of the form Rnn : delimited")
	  string	ccdSlot; // @Metadata=(Units="unitless",Description="The CCD slot for each CCD listed above; of the form SXn : delimited")
	  string	rebSerialNumber; // @Metadata=(Units="unitless",Description="REB hardware serial number (: delimited)")
	  string	rebLSSTName; // @Metadata=(Units="unitless",Description="REB LSST identifier (: delimited)")
	  string	ccdLSSTName; // @Metadata=(Units="unitless",Description="CCD LSST identifier (: delimited)")
	  string	raftLSSTName; // @Metadata=(Units="unitless",Description="Raft LSST identifier (: delimited)")
	  string	ccdManSerNum; // @Metadata=(Units="unitless",Description="Sensor manufacturer's serial number (: delimited)")
	  string	ccdManufacturer; // @Metadata=(Units="unitless",Description="Sensor manufacturer E2V or ITL (: delimited)")
	  long	ccdType[212]; // @Metadata=(Units="unitless",Description="The type of each CCD")
	  double	ccdTempSetPoint[212]; // @Metadata=(Units="unitless",Description="Sensor temperature set point")
	  string	sequencerKey; // @Metadata=(Units="unitless",Description="The name of the CCD sequencer loaded (: delimited)")
	  string	sequencerChecksum; // @Metadata=(Units="unitless",Description="The checksum of the CCD sequencer loaded (: delimited)")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_focalPlaneSummaryInfo_e96ea017 
	 const long focalPlaneSummaryInfo_E2V=1;
	 const long focalPlaneSummaryInfo_ITL=2;
struct logevent_heartbeat_6f11e7ec {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	heartbeat; // @Metadata=(Units="unitless",Description="Beats the drum.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_heartbeat_6f11e7ec 
struct logevent_imageReadinessDetailedState_e0ca5310 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	substate; // @Metadata=(Units="unitless",Description="Enumeration of valid substates")
	  double	timestampTransition; // @Metadata=(Units="second",Description="The time at which the state transition occurred")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_imageReadinessDetailedState_e0ca5310 
	 const long imageReadinessDetailedState_READY=1;
	 const long imageReadinessDetailedState_NOT_READY=2;
	 const long imageReadinessDetailedState_GETTING_READY=3;
struct logevent_imageReadoutParameters_d8785d88 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	imageName; // @Metadata=(Units="unitless",Description="The imageName for this specific exposure")
	  string	ccdLocation; // @Metadata=(Units="unitless",Description="A list of all ccds currently configured; of the form RnnSnn; : delimited (empty if entry not used)")
	  string	raftBay; // @Metadata=(Units="unitless",Description="The raft bay for each CCD listed above; of the form Rnn : delimited")
	  string	ccdSlot; // @Metadata=(Units="unitless",Description="The CCD slot for each CCD listed above; of the form SXn : delimited")
	  long	ccdType[201]; // @Metadata=(Units="unitless",Description="The type of each CCD; this determines segRows; segCols and serCols")
	  long	overRows[201]; // @Metadata=(Units="unitless",Description="See CCD Readout Parameters Diagram")
	  long	overCols[201]; // @Metadata=(Units="unitless",Description="See CCD Readout Parameters Diagram")
	  long	readRows[201]; // @Metadata=(Units="unitless",Description="See CCD Readout Parameters Diagram")
	  long	readCols[201]; // @Metadata=(Units="unitless",Description="See CCD Readout Parameters Diagram")
	  long	readCols2[201]; // @Metadata=(Units="unitless",Description="See CCD Readout Parameters Diagram")
	  long	preCols[201]; // @Metadata=(Units="unitless",Description="See CCD Readout Parameters Diagram")
	  long	preRows[201]; // @Metadata=(Units="unitless",Description="See CCD Readout Parameters Diagram")
	  long	postCols[201]; // @Metadata=(Units="unitless",Description="See CCD Readout Parameters Diagram")
	  long	underCols[201]; // @Metadata=(Units="unitless",Description="See CCD Readout Parameters Diagram")
	  string	daqFolder; // @Metadata=(Units="unitless",Description="DAQ folder where image will be created")
	  string	daqAnnotation; // @Metadata=(Units="unitless",Description="Annotation sent to DAQ")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_imageReadoutParameters_d8785d88 
	 const long imageReadoutParameters_E2V=1;
	 const long imageReadoutParameters_ITL=2;
struct logevent_logLevel_6590f7d3 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	level; // @Metadata=(Units="unitless",Description="Current logging level; a Python logging level: error=40; warning=30; info=20; debug=10.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_logLevel_6590f7d3 
struct logevent_logMessage_86ffaa3f {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	name; // @Metadata=(Units="unitless",Description="Log name.")
	  long	level; // @Metadata=(Units="unitless",Description="Message level; a Python logging level: error=40; warning=30; info=20; debug=10.")
	  string	message; // @Metadata=(Units="unitless",Description="Log message.")
	  string	traceback; // @Metadata=(Units="unitless",Description="Exception traceback; "" if not an exception.")
	  string	filePath; // @Metadata=(Units="unitless",Description="Path to source file.")
	  string	functionName; // @Metadata=(Units="unitless",Description="Function or method name.")
	  long	lineNumber; // @Metadata=(Units="unitless",Description="Line number in the file specified by filePath.")
	  long	process; // @Metadata=(Units="unitless",Description="Process ID.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_logMessage_86ffaa3f 
struct logevent_notReadyToTakeImage_6821b796 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_notReadyToTakeImage_6821b796 
struct logevent_offlineDetailedState_0d2f1d4f {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	substate; // @Metadata=(Units="unitless",Description="Enumeration of valid substates")
	  double	timestampTransition; // @Metadata=(Units="second",Description="The time at which the state transition occurred")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_offlineDetailedState_0d2f1d4f 
	 const long offlineDetailedState_OFFLINE_AVAILABLE=1;
	 const long offlineDetailedState_OFFLINE_PUBLISH_ONLY=2;
struct logevent_prepareToTakeImage_9ef8ce3e {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_prepareToTakeImage_9ef8ce3e 
struct logevent_raftsDetailedState_f300d216 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	substate; // @Metadata=(Units="unitless",Description="Enumeration of valid substates")
	  double	timestampTransition; // @Metadata=(Units="second",Description="The time at which the state transition occurred")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_raftsDetailedState_f300d216 
	 const long raftsDetailedState_NEEDS_CLEAR=1;
	 const long raftsDetailedState_CLEARING=2;
	 const long raftsDetailedState_INTEGRATING=3;
	 const long raftsDetailedState_READING_OUT=4;
	 const long raftsDetailedState_QUIESCENT=5;
struct logevent_readyToTakeImage_97f877a6 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_readyToTakeImage_97f877a6 
struct logevent_settingVersions_e6a4400f {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	recommendedSettingsVersion; // @Metadata=(Units="unitless",Description="List of comma seperated recomended versions of settings sets")
	  string	recommendedSettingsLabels; // @Metadata=(Units="unitless",Description="List of comma seperated names of settings sets")
	  string	settingsUrl; // @Metadata=(Units="unitless",Description="The URL where the settings sets definitions can be found")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_settingVersions_e6a4400f 
struct logevent_settingsApplied_42c7d237 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<256>	settingsVersion; // @Metadata=(Units="unitless",Description="The SHA or name corresponding to the published configuration")
	  string	otherSettingsEvents; // @Metadata=(Units="unitless",Description="A comma delimited list of other specific CSC configuration events. This may be blank if no other CSC specific events are necessary")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_settingsApplied_42c7d237 
struct logevent_shutterDetailedState_027130a8 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	substate; // @Metadata=(Units="unitless",Description="Enumeration of valid substates")
	  double	timestampTransition; // @Metadata=(Units="second",Description="The time at which the state transition occurred")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_shutterDetailedState_027130a8 
	 const long shutterDetailedState_CLOSED=1;
	 const long shutterDetailedState_OPEN=2;
	 const long shutterDetailedState_CLOSING=3;
	 const long shutterDetailedState_OPENING=4;
struct logevent_simulationMode_4b093956 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	mode; // @Metadata=(Units="unitless",Description="Current simulation mode; 0 for normal operation (no simulation); other supported values are specific to each CSC.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_simulationMode_4b093956 
struct logevent_softwareVersions_36161df4 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<256>	salVersion; // @Metadata=(Units="unitless",Description="This is the current version of SAL generation")
	  string<256>	xmlVersion; // @Metadata=(Units="unitless",Description="This is the current version of CSC XML")
	  string<256>	openSpliceVersion; // @Metadata=(Units="unitless",Description="This is the current version of OpenSplice")
	  string<256>	cscVersion; // @Metadata=(Units="unitless",Description="This is the top-level version of the CSC")
	  string	subsystemVersions; // @Metadata=(Units="unitless",Description="A comma delimited list of key=value pairs relating subsystem name (key) to its version number (value). This may be left blank if there are no subsystems within a CSC")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_softwareVersions_36161df4 
struct logevent_startIntegration_15b85662 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	additionalKeys; // @Metadata=(Units="unitless",Description="Additional keys passed to the takeImages command (: delimited)")
	  string	additionalValues; // @Metadata=(Units="unitless",Description="Additional values passed to the takeImages command (: delimited; in same order as additionalKeys)")
	  long	imagesInSequence; // @Metadata=(Units="unitless",Description="The total number of requested images in sequence")
	  string<32>	imageName; // @Metadata=(Units="unitless",Description="The imageName for this specific exposure; assigned by the camera")
	  long	imageIndex; // @Metadata=(Units="unitless",Description="The zero based index number for this specific exposure within the sequence")
	  string<2>	imageSource; // @Metadata=(Units="unitless",Description="The source component of the image name (AT/CC/MC)")
	  string	imageController; // @Metadata=(Units="unitless",Description="The controller for the image  (O=OCS/C=CCS/...)")
	  string<8>	imageDate; // @Metadata=(Units="unitless",Description="The date component of the image name (YYYYMMDD)")
	  long	imageNumber; // @Metadata=(Units="unitless",Description="The image number (SEQNO) component of the image name")
	  double	timestampAcquisitionStart; // @Metadata=(Units="second",Description="The effective time at which the image acquisition started (i.e. the end of the previous clear or readout)")
	  double	exposureTime; // @Metadata=(Units="second",Description="The requested exposure time")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_startIntegration_15b85662 
struct logevent_startLoadFilter_d827980d {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_startLoadFilter_d827980d 
struct logevent_startReadout_1ce9c6a8 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	additionalKeys; // @Metadata=(Units="unitless",Description="Additional keys passed to the takeImages command (: delimited)")
	  string	additionalValues; // @Metadata=(Units="unitless",Description="Additional values passed to the takeImages command (: delimited; in same order as additionalKeys)")
	  long	imagesInSequence; // @Metadata=(Units="unitless",Description="The total number of requested images in sequence")
	  string<32>	imageName; // @Metadata=(Units="unitless",Description="The imageName for this specific exposure; assigned by the camera")
	  long	imageIndex; // @Metadata=(Units="unitless",Description="The zero based index number for this specific exposure within the sequence")
	  string<2>	imageSource; // @Metadata=(Units="unitless",Description="The source component of the image name (AT/CC/MC)")
	  string	imageController; // @Metadata=(Units="unitless",Description="The controller for the image  (O=OCS/C=CCS/...)")
	  string<8>	imageDate; // @Metadata=(Units="unitless",Description="The date component of the image name (YYYYMMDD)")
	  long	imageNumber; // @Metadata=(Units="unitless",Description="The image number (SEQNO) component of the image name")
	  double	timestampAcquisitionStart; // @Metadata=(Units="second",Description="The effective time at which the image acquisition started (i.e. the end of the previous clear or readout)")
	  double	exposureTime; // @Metadata=(Units="second",Description="The requested exposure time")
	  double	timestampStartOfReadout; // @Metadata=(Units="second",Description="The time at which the readout was triggered")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_startReadout_1ce9c6a8 
struct logevent_startRotateCarousel_fc0feabf {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_startRotateCarousel_fc0feabf 
struct logevent_startSetFilter_cf82d736 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	filterName; // @Metadata=(Units="unitless",Description="The name of the filter being installed (e.g. U-001)")
	  string	filterType; // @Metadata=(Units="unitless",Description="The type of the filter being installed (e.g. g;r;i;z;y;u;none;other). If other it can optionally be")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_startSetFilter_cf82d736 
struct logevent_startShutterClose_86bce224 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_startShutterClose_86bce224 
struct logevent_startShutterOpen_f7c4b1f4 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_startShutterOpen_f7c4b1f4 
struct logevent_startUnloadFilter_31cd7983 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_startUnloadFilter_31cd7983 
struct logevent_summaryState_11a91a8f {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	summaryState; // @Metadata=(Units="unitless",Description="High level state machine state identifier")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_summaryState_11a91a8f 
struct quadbox_BFR_da6944b6 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	protection_I; // @Metadata=(Units="mA",Description="Protection system current")
	  double	clean_5_24V_I; // @Metadata=(Units="mA",Description="Clean 5 and 24V current")
	  double	dirty_24V_I; // @Metadata=(Units="mA",Description="Dirty 24V current")
	  double	dirty_48V_I; // @Metadata=(Units="mA",Description="Dirty 48V current")
	  double	rebps_0_2_I; // @Metadata=(Units="mA",Description="REB PS 0-2 current")
	  double	rebps_3_5_I; // @Metadata=(Units="mA",Description="REB PS 3-5 current")
	  double	rebps_6_8_I; // @Metadata=(Units="mA",Description="REB PS 6-8 current")
	  double	rebps_9_12_I; // @Metadata=(Units="mA",Description="REB PS 9-12 current")
	  double	dirty_28V_I; // @Metadata=(Units="mA",Description="Dirty 28V current")
	  double	heater_I; // @Metadata=(Units="mA",Description="Heater current")
	  double	rebps_Spr_I; // @Metadata=(Units="mA",Description="REB PS spare current")
	};
#pragma keylist quadbox_BFR_da6944b6 
struct quadbox_PDU_24VC_f6d35eb0 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	main_V; // @Metadata=(Units="Volt",Description="24V Clean PDU main voltage")
	  double	main_I; // @Metadata=(Units="mA",Description="24V Clean PDU main current")
	  double	main_T; // @Metadata=(Units="Celsius",Description="24V Clean PDU main temperature")
	  double	board_T; // @Metadata=(Units="Celsius",Description="24V Clean PDU board temperature")
	  double	fPGA_T; // @Metadata=(Units="Celsius",Description="24V Clean PDU FPGA temperature")
	  double	pwr_Cry_HCU_V; // @Metadata=(Units="Volt",Description="Power/cryo HCU voltage")
	  double	pwr_Cry_HCU_I; // @Metadata=(Units="mA",Description="Power/cryo HCU current")
	  double	fes_Shu_HCU_V; // @Metadata=(Units="Volt",Description="FES/shutter HCU voltage")
	  double	fes_Shu_HCU_I; // @Metadata=(Units="mA",Description="FES/shutter HCU current")
	  double	ion_Pumps_V; // @Metadata=(Units="Volt",Description="Ion pumps voltage")
	  double	ion_Pumps_I; // @Metadata=(Units="mA",Description="Ion pumps current")
	  double	body_Purge_V; // @Metadata=(Units="Volt",Description="Body purge voltage")
	  double	body_Purge_I; // @Metadata=(Units="mA",Description="Body purge current")
	  double	bpu_Maq20_V; // @Metadata=(Units="Volt",Description="Body purge MAQ20 voltage")
	  double	bpu_Maq20_I; // @Metadata=(Units="mA",Description="Body purge MAQ20 current")
	  double	gauges_V; // @Metadata=(Units="Volt",Description="Gauges voltage")
	  double	gauges_I; // @Metadata=(Units="mA",Description="Gauges current")
	};
#pragma keylist quadbox_PDU_24VC_f6d35eb0 
struct quadbox_PDU_24VD_5151f227 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	main_V; // @Metadata=(Units="Volt",Description="24V Dirty PDU main voltage")
	  double	main_I; // @Metadata=(Units="mA",Description="24V Dirty PDU main current")
	  double	main_T; // @Metadata=(Units="Celsius",Description="24V Dirty PDU main temperature")
	  double	board_T; // @Metadata=(Units="Celsius",Description="24V Dirty PDU board temperature")
	  double	fPGA_T; // @Metadata=(Units="Celsius",Description="24V Dirty PDU FPGA temperature")
	  double	cryo_Turbo_V; // @Metadata=(Units="Volt",Description="Cryo turbo pump voltage")
	  double	cryo_Turbo_I; // @Metadata=(Units="mA",Description="Cryo turbo pump current")
	  double	hex_Turbo_V; // @Metadata=(Units="Volt",Description="Hex turbo pump voltage")
	  double	hex_Turbo_I; // @Metadata=(Units="mA",Description="Hex turbo pump current")
	};
#pragma keylist quadbox_PDU_24VD_5151f227 
struct quadbox_PDU_48V_6a4ae5b7 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	main_V; // @Metadata=(Units="Volt",Description="48V PDU main voltage")
	  double	main_I; // @Metadata=(Units="mA",Description="48V PDU main current")
	  double	main_T; // @Metadata=(Units="Celsius",Description="48V PDU main temperature")
	  double	board_T; // @Metadata=(Units="Celsius",Description="48V PDU board temperature")
	  double	fPGA_T; // @Metadata=(Units="Celsius",Description="48V PDU FPGA temperature")
	  double	purge_Fan_V; // @Metadata=(Units="Volt",Description="Purge fan voltage")
	  double	purge_Fan_I; // @Metadata=(Units="mA",Description="Purge fan current")
	};
#pragma keylist quadbox_PDU_48V_6a4ae5b7 
struct quadbox_PDU_5V_f123c8a5 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	otm_0_A_V; // @Metadata=(Units="Volt",Description="OTM 0-A voltage")
	  double	otm_0_A_I; // @Metadata=(Units="mA",Description="OTM 0-A current")
	  double	otm_0_B_V; // @Metadata=(Units="Volt",Description="OTM 0-B voltage")
	  double	otm_0_B_I; // @Metadata=(Units="mA",Description="OTM 0-B current")
	  double	otm_1_A_V; // @Metadata=(Units="Volt",Description="OTM 1-A voltage")
	  double	otm_1_A_I; // @Metadata=(Units="mA",Description="OTM 1-A current")
	  double	otm_1_B_V; // @Metadata=(Units="Volt",Description="OTM 1-B voltage")
	  double	otm_1_B_I; // @Metadata=(Units="mA",Description="OTM 1-B current")
	  double	otm_2_A_V; // @Metadata=(Units="Volt",Description="OTM 2-A voltage")
	  double	otm_2_A_I; // @Metadata=(Units="mA",Description="OTM 2-A current")
	  double	otm_2_B_V; // @Metadata=(Units="Volt",Description="OTM 2-B voltage")
	  double	otm_2_B_I; // @Metadata=(Units="mA",Description="OTM 2-B current")
	  double	otm_3_A_V; // @Metadata=(Units="Volt",Description="OTM 3-A voltage")
	  double	otm_3_A_I; // @Metadata=(Units="mA",Description="OTM 3-A current")
	  double	otm_3_B_V; // @Metadata=(Units="Volt",Description="OTM 3-B voltage")
	  double	otm_3_B_I; // @Metadata=(Units="mA",Description="OTM 3-B current")
	  double	otm_4_A_V; // @Metadata=(Units="Volt",Description="OTM 4-A voltage")
	  double	otm_4_A_I; // @Metadata=(Units="mA",Description="OTM 4-A current")
	  double	otm_4_B_V; // @Metadata=(Units="Volt",Description="OTM 4-B voltage")
	  double	otm_4_B_I; // @Metadata=(Units="mA",Description="OTM 4-B current")
	  double	otm_5_A_V; // @Metadata=(Units="Volt",Description="OTM 5-A voltage")
	  double	otm_5_A_I; // @Metadata=(Units="mA",Description="OTM 5-A current")
	  double	otm_5_B_V; // @Metadata=(Units="Volt",Description="OTM 5-B voltage")
	  double	otm_5_B_I; // @Metadata=(Units="mA",Description="OTM 5-B current")
	};
#pragma keylist quadbox_PDU_5V_f123c8a5 
struct quadbox_REB_Bulk_PS_f283d413 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	rebbulkps_Brd_T; // @Metadata=(Units="Celsius",Description="REB Bulk PS board temperature")
	  double	rebbulkps_0_2_V; // @Metadata=(Units="Volt",Description="REB Bulk PS 0-2 voltage")
	  double	rebbulkps_0_2_I; // @Metadata=(Units="mA",Description="REB Bulk PS 0-2 current")
	  double	rebbulkps_0_2_T; // @Metadata=(Units="Celsius",Description="REB Bulk PS 0-2 temperature")
	  double	rebbulkps_3_5_V; // @Metadata=(Units="Volt",Description="REB Bulk PS 3-5 voltage")
	  double	rebbulkps_3_5_I; // @Metadata=(Units="mA",Description="REB Bulk PS 3-5 current")
	  double	rebbulkps_3_5_T; // @Metadata=(Units="Celsius",Description="REB Bulk PS 3-5 temperature")
	  double	rebbulkps_6_8_V; // @Metadata=(Units="Volt",Description="REB Bulk PS 6-8 voltage")
	  double	rebbulkps_6_8_I; // @Metadata=(Units="mA",Description="REB Bulk PS 6-8 current")
	  double	rebbulkps_6_8_T; // @Metadata=(Units="Celsius",Description="REB Bulk PS 6-8 temperature")
	  double	rebbulkps_9_12_V; // @Metadata=(Units="Volt",Description="REB Bulk PS 9-12 voltage")
	  double	rebbulkps_9_12_I; // @Metadata=(Units="mA",Description="REB Bulk PS 9-12 current")
	  double	rebbulkps_9_12_T; // @Metadata=(Units="Celsius",Description="REB Bulk PS 9-12 temperature")
	};
#pragma keylist quadbox_REB_Bulk_PS_f283d413 
struct rebpower_Reb_4f71074f {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	digital_VbefLDO[71]; // @Metadata=(Units="Volt",Description="R00/RebG digital PS\Voltage before LDO")
	  string	location; // @Metadata=(Units="unitless",Description="Reb Location")
	  double	digital_IbefLDO[71]; // @Metadata=(Units="mA",Description="Current before LDO")
	  double	digital_VaftLDO[71]; // @Metadata=(Units="Volt",Description="Voltage after LDO")
	  double	digital_IaftLDO[71]; // @Metadata=(Units="mA",Description="Current after LDO")
	  double	digital_VaftSwch[71]; // @Metadata=(Units="Volt",Description="Voltage after switch")
	  double	analog_VbefLDO[71]; // @Metadata=(Units="Volt",Description="R00/RebG analog PS\Voltage before LDO")
	  double	analog_IbefLDO[71]; // @Metadata=(Units="mA",Description="Current before LDO")
	  double	analog_VaftLDO[71]; // @Metadata=(Units="Volt",Description="Voltage after LDO")
	  double	analog_IaftLDO[71]; // @Metadata=(Units="mA",Description="Current after LDO")
	  double	analog_VaftSwch[71]; // @Metadata=(Units="Volt",Description="Voltage after switch")
	  double	od_VbefLDO[71]; // @Metadata=(Units="Volt",Description="R00/RebG OD PS\Voltage before LDO")
	  double	od_IbefLDO[71]; // @Metadata=(Units="mA",Description="Current before LDO")
	  double	od_VaftLDO[71]; // @Metadata=(Units="Volt",Description="Voltage after LDO")
	  double	od_VaftLDO2[71]; // @Metadata=(Units="Volt",Description="Voltage after LDO2")
	  double	od_IaftLDO[71]; // @Metadata=(Units="mA",Description="Current after LDO")
	  double	od_VaftSwch[71]; // @Metadata=(Units="Volt",Description="Voltage after switch")
	  double	clockhi_VbefLDO[71]; // @Metadata=(Units="Volt",Description="R00/RebG clockhi PS\Voltage before LDO")
	  double	clockhi_IbefLDO[71]; // @Metadata=(Units="mA",Description="Current before LDO")
	  double	clockhi_VaftLDO[71]; // @Metadata=(Units="Volt",Description="Voltage after LDO")
	  double	clockhi_IaftLDO[71]; // @Metadata=(Units="mA",Description="Current after LDO")
	  double	clockhi_VaftSwch[71]; // @Metadata=(Units="Volt",Description="Voltage after switch")
	  double	clocklo_VbefLDO[71]; // @Metadata=(Units="Volt",Description="R00/RebG clocklo PS\Voltage before LDO")
	  double	clocklo_IbefLDO[71]; // @Metadata=(Units="mA",Description="Current before LDO")
	  double	clocklo_VaftLDO[71]; // @Metadata=(Units="Volt",Description="Voltage after LDO")
	  double	clocklo_VaftLDO2[71]; // @Metadata=(Units="Volt",Description="Voltage after LDO2")
	  double	clocklo_IaftLDO[71]; // @Metadata=(Units="mA",Description="Current after LDO")
	  double	clocklo_VaftSwch[71]; // @Metadata=(Units="Volt",Description="Voltage after switch")
	  double	dphi_VbefLDO[8]; // @Metadata=(Units="Volt",Description="R00/RebG dphi PS\Voltage before LDO")
	  double	dphi_IbefLDO[8]; // @Metadata=(Units="mA",Description="Current before LDO")
	  double	dphi_VaftLDO[8]; // @Metadata=(Units="Volt",Description="Voltage after LDO")
	  double	dphi_IaftLDO[8]; // @Metadata=(Units="mA",Description="Current after LDO")
	  double	dphi_VaftSwch[8]; // @Metadata=(Units="Volt",Description="Voltage after switch")
	  double	hvbias_VbefSwch[71]; // @Metadata=(Units="Volt",Description="R00/RebG hvbias PS\Voltage before switch")
	  double	hvbias_IbefSwch[71]; // @Metadata=(Units="mA",Description="Current before switch")
	  double	power[71]; // @Metadata=(Units="Watt",Description="R00/RebG all PSs\Total power")
	  double	heater_VbefLDO[67]; // @Metadata=(Units="Volt",Description="R00/RebW heater PS\Voltage before LDO")
	  double	heater_IbefLDO[67]; // @Metadata=(Units="mA",Description="Current before LDO")
	  double	heater_VaftLDO[67]; // @Metadata=(Units="Volt",Description="Voltage after LDO")
	  double	heater_IaftLDO[67]; // @Metadata=(Units="mA",Description="Current after LDO")
	  double	heater_VaftSwch[67]; // @Metadata=(Units="Volt",Description="Voltage after switch")
	};
#pragma keylist rebpower_Reb_4f71074f 
struct rebpower_Rebps_eb81a48a {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	boardTemp0[13]; // @Metadata=(Units="Celsius",Description="Board temperature 0")
	  string	location; // @Metadata=(Units="unitless",Description="Rebps Location")
	  double	boardTemp1[13]; // @Metadata=(Units="Celsius",Description="Board temperature 1")
	  double	boardTemp2[13]; // @Metadata=(Units="Celsius",Description="Board temperature 2")
	  double	boardTemp3[13]; // @Metadata=(Units="Celsius",Description="Board temperature 3")
	  double	boardTemp4[13]; // @Metadata=(Units="Celsius",Description="Board temperature 4")
	  double	boardTemp5[13]; // @Metadata=(Units="Celsius",Description="Board temperature 5")
	  double	boardTemp6[13]; // @Metadata=(Units="Celsius",Description="Board temperature 6")
	};
#pragma keylist rebpower_Rebps_eb81a48a 
struct refrig_Cold1_582662fb {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	dischrgtmp_P; // @Metadata=(Units="Celsius",Description="Discharge Temperature (PLC)")
	  double	dischrgtmp_M; // @Metadata=(Units="Celsius",Description="Discharge Temperature (Maq20)")
	  double	dischrgPrs; // @Metadata=(Units="psia",Description="Discharge Pressure")
	  double	suctiontmp_P; // @Metadata=(Units="Celsius",Description="Suction Temperature (PLC)")
	  double	suctiontmp_M; // @Metadata=(Units="Celsius",Description="Suction Temperature (Maq20)")
	  double	suctionPrs; // @Metadata=(Units="psia",Description="Suction Pressure")
	  double	liquidtmp_P; // @Metadata=(Units="Celsius",Description="Liquid Temperature (PLC)")
	  double	liquidtmp_M; // @Metadata=(Units="Celsius",Description="Liquid Temperature (Maq20)")
	  double	compVoltage; // @Metadata=(Units="Volt",Description="Compressor Voltage")
	  double	compCurrent; // @Metadata=(Units="A",Description="Compressor Current")
	  double	compPower; // @Metadata=(Units="VA",Description="Compressor Power")
	  double	compVfdVolt; // @Metadata=(Units="Volt",Description="Compressor VFD Voltage")
	  double	compVfdCurr; // @Metadata=(Units="A",Description="Compressor VFD Current")
	  double	compVfdFreq; // @Metadata=(Units="Hz",Description="Compressor VFD Frequency")
	  double	hGBValvePosn; // @Metadata=(Units="%",Description="HGB Valve Position")
	  double	coolValvePosn; // @Metadata=(Units="%",Description="Coolant Valve Position")
	  double	coolFlowRate; // @Metadata=(Units="l/min",Description="Coolant Flow Rate")
	  double	waterInTmp; // @Metadata=(Units="Celsius",Description="Water Inlet Temperature")
	  double	waterOutTmp; // @Metadata=(Units="Celsius",Description="Water Outlet Temperature")
	  double	cabinetTmp; // @Metadata=(Units="Celsius",Description="Cabinet Temperature")
	  double	ambientTmp; // @Metadata=(Units="Celsius",Description="Ambient Temperature")
	  double	fan1Speed; // @Metadata=(Units="unitless",Description="Fan 1 Speed (RPM)")
	  double	fan2Speed; // @Metadata=(Units="unitless",Description="Fan 2 Speed (RPM)")
	  double	fan3Speed; // @Metadata=(Units="unitless",Description="Fan 3 Speed (RPM)")
	  double	liquidSubCooling; // @Metadata=(Units="Celsius",Description="Cold1 SubCooling")
	};
#pragma keylist refrig_Cold1_582662fb 
struct refrig_Cold2_773985da {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	dischrgtmp_P; // @Metadata=(Units="Celsius",Description="Discharge Temperature (PLC)")
	  double	dischrgtmp_M; // @Metadata=(Units="Celsius",Description="Discharge Temperature (Maq20)")
	  double	dischrgPrs; // @Metadata=(Units="psia",Description="Discharge Pressure")
	  double	suctiontmp_P; // @Metadata=(Units="Celsius",Description="Suction Temperature (PLC)")
	  double	suctiontmp_M; // @Metadata=(Units="Celsius",Description="Suction Temperature (Maq20)")
	  double	suctionPrs; // @Metadata=(Units="psia",Description="Suction Pressure")
	  double	liquidtmp_P; // @Metadata=(Units="Celsius",Description="Liquid Temperature (PLC)")
	  double	liquidtmp_M; // @Metadata=(Units="Celsius",Description="Liquid Temperature (Maq20)")
	  double	compVoltage; // @Metadata=(Units="Volt",Description="Compressor Voltage")
	  double	compCurrent; // @Metadata=(Units="A",Description="Compressor Current")
	  double	compPower; // @Metadata=(Units="VA",Description="Compressor Power")
	  double	compVfdVolt; // @Metadata=(Units="Volt",Description="Compressor VFD Voltage")
	  double	compVfdCurr; // @Metadata=(Units="A",Description="Compressor VFD Current")
	  double	compVfdFreq; // @Metadata=(Units="Hz",Description="Compressor VFD Frequency")
	  double	hGBValvePosn; // @Metadata=(Units="%",Description="HGB Valve Position")
	  double	coolValvePosn; // @Metadata=(Units="%",Description="Coolant Valve Position")
	  double	coolFlowRate; // @Metadata=(Units="l/min",Description="Coolant Flow Rate")
	  double	waterInTmp; // @Metadata=(Units="Celsius",Description="Water Inlet Temperature")
	  double	waterOutTmp; // @Metadata=(Units="Celsius",Description="Water Outlet Temperature")
	  double	cabinetTmp; // @Metadata=(Units="Celsius",Description="Cabinet Temperature")
	  double	ambientTmp; // @Metadata=(Units="Celsius",Description="Ambient Temperature")
	  double	fan1Speed; // @Metadata=(Units="unitless",Description="Fan 1 Speed (RPM)")
	  double	fan2Speed; // @Metadata=(Units="unitless",Description="Fan 2 Speed (RPM)")
	  double	fan3Speed; // @Metadata=(Units="unitless",Description="Fan 3 Speed (RPM)")
	  double	liquidSubCooling; // @Metadata=(Units="Celsius",Description="Cold2 SubCooling")
	};
#pragma keylist refrig_Cold2_773985da 
struct refrig_Cryo1_f513bfca {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	dischrgtmp_P; // @Metadata=(Units="Celsius",Description="Discharge Temperature (PLC)")
	  double	dischrgtmp_M; // @Metadata=(Units="Celsius",Description="Discharge Temperature (MAQ20)")
	  double	dischrgPrs; // @Metadata=(Units="psia",Description="Discharge Pressure")
	  double	suctiontmp_P; // @Metadata=(Units="Celsius",Description="Suction Temperature (PLC)")
	  double	suctiontmp_M; // @Metadata=(Units="Celsius",Description="Suction Temperature (MAQ20)")
	  double	suctionPrs; // @Metadata=(Units="psia",Description="Suction Pressure")
	  double	oilLevel; // @Metadata=(Units="mm",Description="Oil Level")
	  double	compVoltage; // @Metadata=(Units="Volt",Description="Compressor Voltage")
	  double	compCurrent; // @Metadata=(Units="A",Description="Compressor Current")
	  double	compPower; // @Metadata=(Units="VA",Description="Compressor Power")
	  double	waterInTmp; // @Metadata=(Units="Celsius",Description="Water Inlet Temperature")
	  double	waterOutTmp; // @Metadata=(Units="Celsius",Description="Water Outlet Temperature")
	  double	afterCoolTmp; // @Metadata=(Units="Celsius",Description="After Cooler Temperature")
	  double	phaseSepTmp; // @Metadata=(Units="Celsius",Description="Phase Separator Temperature")
	  double	oilSepTmp; // @Metadata=(Units="Celsius",Description="Oil Separator Temperature")
	  double	surgeTankTmp; // @Metadata=(Units="Celsius",Description="Surge Tank Temperature")
	  double	fanSpeed; // @Metadata=(Units="unitless",Description="Fan Speed (RPM)")
	};
#pragma keylist refrig_Cryo1_f513bfca 
struct refrig_Cryo2_8b562a70 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	dischrgtmp_P; // @Metadata=(Units="Celsius",Description="Discharge Temperature (PLC)")
	  double	dischrgtmp_M; // @Metadata=(Units="Celsius",Description="Discharge Temperature (MAQ20)")
	  double	dischrgPrs; // @Metadata=(Units="psia",Description="Discharge Pressure")
	  double	suctiontmp_P; // @Metadata=(Units="Celsius",Description="Suction Temperature (PLC)")
	  double	suctiontmp_M; // @Metadata=(Units="Celsius",Description="Suction Temperature (MAQ20)")
	  double	suctionPrs; // @Metadata=(Units="psia",Description="Suction Pressure")
	  double	oilLevel; // @Metadata=(Units="mm",Description="Oil Level")
	  double	compVoltage; // @Metadata=(Units="Volt",Description="Compressor Voltage")
	  double	compCurrent; // @Metadata=(Units="A",Description="Compressor Current")
	  double	compPower; // @Metadata=(Units="VA",Description="Compressor Power")
	  double	waterInTmp; // @Metadata=(Units="Celsius",Description="Water Inlet Temperature")
	  double	waterOutTmp; // @Metadata=(Units="Celsius",Description="Water Outlet Temperature")
	  double	afterCoolTmp; // @Metadata=(Units="Celsius",Description="After Cooler Temperature")
	  double	phaseSepTmp; // @Metadata=(Units="Celsius",Description="Phase Separator Temperature")
	  double	oilSepTmp; // @Metadata=(Units="Celsius",Description="Oil Separator Temperature")
	  double	surgeTankTmp; // @Metadata=(Units="Celsius",Description="Surge Tank Temperature")
	  double	fanSpeed; // @Metadata=(Units="unitless",Description="Fan Speed (RPM)")
	};
#pragma keylist refrig_Cryo2_8b562a70 
struct refrig_Cryo3_963396ac {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	dischrgtmp_P; // @Metadata=(Units="Celsius",Description="Discharge Temperature (PLC)")
	  double	dischrgtmp_M; // @Metadata=(Units="Celsius",Description="Discharge Temperature (MAQ20)")
	  double	dischrgPrs; // @Metadata=(Units="psia",Description="Discharge Pressure")
	  double	suctiontmp_P; // @Metadata=(Units="Celsius",Description="Suction Temperature (PLC)")
	  double	suctiontmp_M; // @Metadata=(Units="Celsius",Description="Suction Temperature (MAQ20)")
	  double	suctionPrs; // @Metadata=(Units="psia",Description="Suction Pressure")
	  double	oilLevel; // @Metadata=(Units="mm",Description="Oil Level")
	  double	compVoltage; // @Metadata=(Units="Volt",Description="Compressor Voltage")
	  double	compCurrent; // @Metadata=(Units="A",Description="Compressor Current")
	  double	compPower; // @Metadata=(Units="VA",Description="Compressor Power")
	  double	waterInTmp; // @Metadata=(Units="Celsius",Description="Water Inlet Temperature")
	  double	waterOutTmp; // @Metadata=(Units="Celsius",Description="Water Outlet Temperature")
	  double	afterCoolTmp; // @Metadata=(Units="Celsius",Description="After Cooler Temperature")
	  double	phaseSepTmp; // @Metadata=(Units="Celsius",Description="Phase Separator Temperature")
	  double	oilSepTmp; // @Metadata=(Units="Celsius",Description="Oil Separator Temperature")
	  double	surgeTankTmp; // @Metadata=(Units="Celsius",Description="Surge Tank Temperature")
	  double	cabinetTmp; // @Metadata=(Units="Celsius",Description="Cabinet Temperature")
	  double	ambientTmp; // @Metadata=(Units="Celsius",Description="Ambient Temperature")
	  double	fanSpeed; // @Metadata=(Units="unitless",Description="Fan Speed (RPM)")
	};
#pragma keylist refrig_Cryo3_963396ac 
struct refrig_Cryo4_674763ce {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	dischrgtmp_P; // @Metadata=(Units="Celsius",Description="Discharge Temperature (PLC)")
	  double	dischrgtmp_M; // @Metadata=(Units="Celsius",Description="Discharge Temperature (MAQ20)")
	  double	dischrgPrs; // @Metadata=(Units="psia",Description="Discharge Pressure")
	  double	suctiontmp_P; // @Metadata=(Units="Celsius",Description="Suction Temperature (PLC)")
	  double	suctiontmp_M; // @Metadata=(Units="Celsius",Description="Suction Temperature (MAQ20)")
	  double	suctionPrs; // @Metadata=(Units="psia",Description="Suction Pressure")
	  double	oilLevel; // @Metadata=(Units="mm",Description="Oil Level")
	  double	compVoltage; // @Metadata=(Units="Volt",Description="Compressor Voltage")
	  double	compCurrent; // @Metadata=(Units="A",Description="Compressor Current")
	  double	compPower; // @Metadata=(Units="VA",Description="Compressor Power")
	  double	waterInTmp; // @Metadata=(Units="Celsius",Description="Water Inlet Temperature")
	  double	waterOutTmp; // @Metadata=(Units="Celsius",Description="Water Outlet Temperature")
	  double	afterCoolTmp; // @Metadata=(Units="Celsius",Description="After Cooler Temperature")
	  double	phaseSepTmp; // @Metadata=(Units="Celsius",Description="Phase Separator Temperature")
	  double	oilSepTmp; // @Metadata=(Units="Celsius",Description="Oil Separator Temperature")
	  double	surgeTankTmp; // @Metadata=(Units="Celsius",Description="Surge Tank Temperature")
	  double	fanSpeed; // @Metadata=(Units="unitless",Description="Fan Speed (RPM)")
	};
#pragma keylist refrig_Cryo4_674763ce 
struct refrig_Cryo5_d5938a98 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	dischrgtmp_P; // @Metadata=(Units="Celsius",Description="Discharge Temperature (PLC)")
	  double	dischrgtmp_M; // @Metadata=(Units="Celsius",Description="Discharge Temperature (MAQ20)")
	  double	dischrgPrs; // @Metadata=(Units="psia",Description="Discharge Pressure")
	  double	suctiontmp_P; // @Metadata=(Units="Celsius",Description="Suction Temperature (PLC)")
	  double	suctiontmp_M; // @Metadata=(Units="Celsius",Description="Suction Temperature (MAQ20)")
	  double	suctionPrs; // @Metadata=(Units="psia",Description="Suction Pressure")
	  double	oilLevel; // @Metadata=(Units="mm",Description="Oil Level")
	  double	compVoltage; // @Metadata=(Units="Volt",Description="Compressor Voltage")
	  double	compCurrent; // @Metadata=(Units="A",Description="Compressor Current")
	  double	compPower; // @Metadata=(Units="VA",Description="Compressor Power")
	  double	waterInTmp; // @Metadata=(Units="Celsius",Description="Water Inlet Temperature")
	  double	waterOutTmp; // @Metadata=(Units="Celsius",Description="Water Outlet Temperature")
	  double	afterCoolTmp; // @Metadata=(Units="Celsius",Description="After Cooler Temperature")
	  double	phaseSepTmp; // @Metadata=(Units="Celsius",Description="Phase Separator Temperature")
	  double	oilSepTmp; // @Metadata=(Units="Celsius",Description="Oil Separator Temperature")
	  double	surgeTankTmp; // @Metadata=(Units="Celsius",Description="Surge Tank Temperature")
	  double	cabinetTmp; // @Metadata=(Units="Celsius",Description="Cabinet Temperature")
	  double	ambientTmp; // @Metadata=(Units="Celsius",Description="Ambient Temperature")
	  double	fanSpeed; // @Metadata=(Units="unitless",Description="Fan Speed (RPM)")
	};
#pragma keylist refrig_Cryo5_d5938a98 
struct refrig_Cryo6_b780d21a {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	dischrgtmp_P; // @Metadata=(Units="Celsius",Description="Discharge Temperature (PLC)")
	  double	dischrgtmp_M; // @Metadata=(Units="Celsius",Description="Discharge Temperature (MAQ20)")
	  double	dischrgPrs; // @Metadata=(Units="psia",Description="Discharge Pressure")
	  double	suctiontmp_P; // @Metadata=(Units="Celsius",Description="Suction Temperature (PLC)")
	  double	suctiontmp_M; // @Metadata=(Units="Celsius",Description="Suction Temperature (MAQ20)")
	  double	suctionPrs; // @Metadata=(Units="psia",Description="Suction Pressure")
	  double	oilLevel; // @Metadata=(Units="mm",Description="Oil Level")
	  double	compVoltage; // @Metadata=(Units="Volt",Description="Compressor Voltage")
	  double	compCurrent; // @Metadata=(Units="A",Description="Compressor Current")
	  double	compPower; // @Metadata=(Units="VA",Description="Compressor Power")
	  double	waterInTmp; // @Metadata=(Units="Celsius",Description="Water Inlet Temperature")
	  double	waterOutTmp; // @Metadata=(Units="Celsius",Description="Water Outlet Temperature")
	  double	afterCoolTmp; // @Metadata=(Units="Celsius",Description="After Cooler Temperature")
	  double	phaseSepTmp; // @Metadata=(Units="Celsius",Description="Phase Separator Temperature")
	  double	oilSepTmp; // @Metadata=(Units="Celsius",Description="Oil Separator Temperature")
	  double	surgeTankTmp; // @Metadata=(Units="Celsius",Description="Surge Tank Temperature")
	  double	fanSpeed; // @Metadata=(Units="unitless",Description="Fan Speed (RPM)")
	};
#pragma keylist refrig_Cryo6_b780d21a 
struct vacuum_CryoVacGauge_6aaf36b0 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	cryoVac; // @Metadata=(Units="Torr",Description="Cryostat vacuum")
	};
#pragma keylist vacuum_CryoVacGauge_6aaf36b0 
struct vacuum_ForelineVacGauge_e4dfeedd {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	forelineVac; // @Metadata=(Units="Torr",Description="Foreline pump vacuum")
	};
#pragma keylist vacuum_ForelineVacGauge_e4dfeedd 
struct vacuum_Hex1VacGauge_0717ba17 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	hex1Vac; // @Metadata=(Units="Torr",Description="Heat exchanger 1 vacuum")
	};
#pragma keylist vacuum_Hex1VacGauge_0717ba17 
struct vacuum_Hex2VacGauge_4bf1ceef {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	hex2Vac; // @Metadata=(Units="Torr",Description="Heat exchanger 2 vacuum")
	};
#pragma keylist vacuum_Hex2VacGauge_4bf1ceef 
struct vacuum_IonPumps_c94c3043 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	cip1_I; // @Metadata=(Units="mA",Description="Cryo ion pump 1 current")
	  double	cip2_I; // @Metadata=(Units="mA",Description="Cryo ion pump 2 current")
	  double	cip3_I; // @Metadata=(Units="mA",Description="Cryo ion pump 3 current")
	  double	cip4_I; // @Metadata=(Units="mA",Description="Cryo ion pump 4 current")
	  double	cip5_I; // @Metadata=(Units="mA",Description="Cryo ion pump 5 current")
	  double	cip6_I; // @Metadata=(Units="mA",Description="Cryo ion pump 6 current")
	  double	cip1_V; // @Metadata=(Units="Volt",Description="Cryo ion pump 1 voltage")
	  double	cip2_V; // @Metadata=(Units="Volt",Description="Cryo ion pump 2 voltage")
	  double	cip3_V; // @Metadata=(Units="Volt",Description="Cryo ion pump 3 voltage")
	  double	cip4_V; // @Metadata=(Units="Volt",Description="Cryo ion pump 4 voltage")
	  double	cip5_V; // @Metadata=(Units="Volt",Description="Cryo ion pump 5 voltage")
	  double	cip6_V; // @Metadata=(Units="Volt",Description="Cryo ion pump 6 voltage")
	};
#pragma keylist vacuum_IonPumps_c94c3043 
struct vacuum_TurboPump_7ac2997c {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	turboSpeed; // @Metadata=(Units="unitless",Description="Turbo pump speed (RPM)")
	  double	turboCurrent; // @Metadata=(Units="mA",Description="TurboPump current")
	  double	turboVoltage; // @Metadata=(Units="Volt",Description="TurboPump voltage")
	  double	turboPower; // @Metadata=(Units="W",Description="TurboPump power")
	  double	turboPumpTemp; // @Metadata=(Units="deg C",Description="TurboPump pump temperature")
	};
#pragma keylist vacuum_TurboPump_7ac2997c 
struct vacuum_TurboVacGauge_79fa1512 {  // @Metadata=(Description="")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	turboVac; // @Metadata=(Units="Torr",Description="Turbo pump vacuum")
	};
#pragma keylist vacuum_TurboVacGauge_79fa1512 
struct ackcmd_8a9cf216 {  // @Metadata=(Description="")
  string<8>	private_revCode; //private
  double	private_sndStamp;    //private
  double	private_rcvStamp;    //private
  long	private_seqNum;    //private
  string<128>	private_identity;    //private
  long	private_origin;    //private
  long	private_host;    //private
	  long	ack;
	  long	error;
	  string<256>	result;
	  long	host;
	  string	identity;
	  long	origin;
	  long	cmdtype;
	  double	timeout;
	};
#pragma keylist ackcmd_8a9cf216 
};

