// SAL_VERSION=5.0.1 XML_VERSION=7.1.0
module Script {
struct command_configure_778531cc {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	config; // @Metadata=(Units="unitless",Description="Configuration as yaml text that is parsed to make a keyword argument dict for the script's configure method.")
	  long	logLevel; // @Metadata=(Units="unitless",Description="Logging level; as a Python logging level: error=40; warning=30; info=20; debug=10; use default=0.")
	  string	pauseCheckpoint; // @Metadata=(Units="unitless",Description="Checkpoint(s) at which to pause; as a regular expression. No checkpoints if blank; all checkpoints if ".*".")
	  string	stopCheckpoint; // @Metadata=(Units="unitless",Description="Checkpoint(s) at which to stop; as a regular expression. No checkpoints if blank; all checkpoints if ".*".")
	};
#pragma keylist command_configure_778531cc ScriptID
struct command_resume_69796f0f {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	};
#pragma keylist command_resume_69796f0f ScriptID
struct command_run_cc83864c {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	};
#pragma keylist command_run_cc83864c ScriptID
struct command_setAuthList_0e223785 {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	authorizedUsers; // @Metadata=(Units="unitless",Description="Comma seperated list of authorized users currently allowed to command this CSC;")
	  string	nonAuthorizedCSCs; // @Metadata=(Units="unitless",Description="Comma seperated list of CSC's not currently allowed to command this CSC;")
	};
#pragma keylist command_setAuthList_0e223785 ScriptID
struct command_setCheckpoints_41048d29 {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	pause; // @Metadata=(Units="unitless",Description="Checkpoint(s) at which to pause; as a regular expression. No checkpoints if blank; all checkpoints if ".*".")
	  string	stop; // @Metadata=(Units="unitless",Description="Checkpoint(s) at which to stop; as a regular expression. No checkpoints if blank; all checkpoints if ".*".")
	};
#pragma keylist command_setCheckpoints_41048d29 ScriptID
struct command_setGroupId_f231d661 {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	groupId; // @Metadata=(Units="unitless",Description="Group ID for images taken by the script.")
	};
#pragma keylist command_setGroupId_f231d661 ScriptID
struct command_setLogLevel_47461c43 {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	level; // @Metadata=(Units="unitless",Description="Logging level; as a Python logging level: error=40; warning=30; info=20; debug=10.")
	};
#pragma keylist command_setLogLevel_47461c43 ScriptID
struct command_stop_6ae3cfff {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	};
#pragma keylist command_stop_6ae3cfff ScriptID
	 const long indexEnumeration_any=1;
struct logevent_authList_12b17042 {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	authorizedUsers; // @Metadata=(Units="unitless",Description="Comma seperated list of authorized users currently allowed to command this CSC.")
	  string	nonAuthorizedCSCs; // @Metadata=(Units="unitless",Description="Comma seperated list of CSC's not currently allowed to command this CSC.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_authList_12b17042 ScriptID
struct logevent_checkpoints_b4638d34 {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	pause; // @Metadata=(Units="unitless",Description="Checkpoint(s) at which to pause; as a regular expression. No checkpoints if blank; all checkpoints if ".*".")
	  string	stop; // @Metadata=(Units="unitless",Description="Checkpoint(s) at which to stop; as a regular expression. No checkpoints if blank; all checkpoints if ".*".")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_checkpoints_b4638d34 ScriptID
	 const long Script_shared_ScriptState_Unconfigured=1;
	 const long Script_shared_ScriptState_Configured=2;
	 const long Script_shared_ScriptState_Running=3;
	 const long Script_shared_ScriptState_Paused=4;
	 const long Script_shared_ScriptState_Ending=5;
	 const long Script_shared_ScriptState_Stopping=6;
	 const long Script_shared_ScriptState_Failing=7;
	 const long Script_shared_ScriptState_Done=8;
	 const long Script_shared_ScriptState_Stopped=9;
	 const long Script_shared_ScriptState_Failed=10;
	 const long Script_shared_MetadataCoordSys_None=1;
	 const long Script_shared_MetadataCoordSys_ICRS=2;
	 const long Script_shared_MetadataCoordSys_Observed=3;
	 const long Script_shared_MetadataCoordSys_Mount=4;
	 const long Script_shared_MetadataRotSys_None=1;
	 const long Script_shared_MetadataRotSys_Sky=2;
	 const long Script_shared_MetadataRotSys_Horizon=3;
	 const long Script_shared_MetadataRotSys_Mount=4;
	 const long Script_shared_MetadataDome_Closed=1;
	 const long Script_shared_MetadataDome_Open=2;
	 const long Script_shared_MetadataDome_Either=3;
struct logevent_description_3e1d46bf {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	classname; // @Metadata=(Units="unitless",Description="Name of script class.")
	  string	description; // @Metadata=(Units="unitless",Description="Brief description of the script.")
	  string	remotes; // @Metadata=(Units="unitless",Description="Names of remote SAL components used by the script as a comma-separated list. Each name is appended with :&lt;index&gt; if the component is indexed (and possibly with :0 if not indexed).")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_description_3e1d46bf ScriptID
struct logevent_heartbeat_c18f6ac8 {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	heartbeat; // @Metadata=(Units="unitless",Description="Beats the drum.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_heartbeat_c18f6ac8 ScriptID
struct logevent_logLevel_3f120a72 {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	level; // @Metadata=(Units="unitless",Description="Current logging level; a Python logging level: error=40; warning=30; info=20; debug=10.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_logLevel_3f120a72 ScriptID
struct logevent_logMessage_7d416b77 {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	name; // @Metadata=(Units="unitless",Description="Log name.")
	  long	level; // @Metadata=(Units="unitless",Description="Message level; a Python logging level: error=40; warning=30; info=20; debug=10.")
	  string	message; // @Metadata=(Units="unitless",Description="Log message.")
	  string	traceback; // @Metadata=(Units="unitless",Description="Exception traceback; "" if not an exception.")
	  string	filePath; // @Metadata=(Units="unitless",Description="Path to source file.")
	  string	functionName; // @Metadata=(Units="unitless",Description="Function or method name.")
	  long	lineNumber; // @Metadata=(Units="unitless",Description="Line number in the file specified by filePath.")
	  long	process; // @Metadata=(Units="unitless",Description="Process ID.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_logMessage_7d416b77 ScriptID
struct logevent_metadata_998c560d {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  short	coordinateSystem; // @Metadata=(Units="unitless",Description="Coordinate system for position. A MetadataCoordSys enum. Observed is refracted apparent topocentric; e.g. similar to Mount but the telescope model is applied and the azimuth is wrapped. If None then position should be ignored.")
	  double	position[2]; // @Metadata=(Units="degree",Description="Longitude; latitude axes of position in coordinateSystem")
	  short	rotationSystem; // @Metadata=(Units="unitless",Description="Rotation system for cameraAngle; a MetadataRotSys enum")
	  double	cameraAngle; // @Metadata=(Units="degree",Description="Camera angle in rotationSystem")
	  string	filters; // @Metadata=(Units="unitless",Description="Comma-separated names of acceptable filters; or blank for any filter.")
	  short	dome; // @Metadata=(Units="unitless",Description="Desired dome state; a MetadataDome enum.")
	  double	duration; // @Metadata=(Units="second",Description="Estimated duration of the script; excluding slewing to the initial position required by the script.")
	  long	nimages; // @Metadata=(Units="unitless",Description="Predicted number of images to take; 0 if unknown.")
	  string	survey; // @Metadata=(Units="unitless",Description="Survey name.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_metadata_998c560d ScriptID
	 const long metadata_CSys_None=1;
	 const long metadata_CSys_ICRS=2;
	 const long metadata_CSys_Observed=3;
	 const long metadata_CSys_Mount=4;
struct logevent_state_2b995d87 {  // @Metadata=(Description="")
	  long	ScriptID;	//private // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp;    //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp;    //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long	private_seqNum;    //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string<128>	private_identity;    //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long	private_origin;    //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long	private_host;    //private // @Metadata=(Units="unitless",Description="IP of sender")
	  octet	state; // @Metadata=(Units="unitless",Description="A ScriptState enum indicating the script state.")
	  string	reason; // @Metadata=(Units="unitless",Description="More information about the state change; typically a reason for failure if the state is FAILED.")
	  string	groupId; // @Metadata=(Units="unitless",Description="Group ID; none if "".")
	  string	lastCheckpoint; // @Metadata=(Units="unitless",Description="Name of most recently seen checkpoint.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_state_2b995d87 ScriptID
	 const long state_Unconfigured=1;
	 const long state_Configured=2;
	 const long state_Running=3;
	 const long state_Paused=4;
	 const long state_Ending=5;
	 const long state_Stopping=6;
	 const long state_Failing=7;
	 const long state_Done=8;
	 const long state_Stopped=9;
	 const long state_Failed=10;
struct ackcmd_3d1b2de4 {  // @Metadata=(Description="")
  string<8>	private_revCode; //private
  double	private_sndStamp;    //private
  double	private_rcvStamp;    //private
  long	private_seqNum;    //private
  string<128>	private_identity;    //private
  long	private_origin;    //private
  long	private_host;    //private
	  long	ScriptID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  long	ack;
	  long	error;
	  string<256>	result;
	  string	identity;
	  long	host;
	  long	origin;
	  long	cmdtype;
	  double	timeout;
	};
#pragma keylist ackcmd_3d1b2de4 ScriptID
};

