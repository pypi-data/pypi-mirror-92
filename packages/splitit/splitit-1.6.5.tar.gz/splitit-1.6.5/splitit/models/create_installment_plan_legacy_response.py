# coding: utf-8

"""
    splitit-web-api-public-sdk

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class CreateInstallmentPlanLegacyResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'api_key': 'str',
        'installment_plan_status': 'int',
        'result': 'int',
        'payment_gateway': 'str',
        'email': 'str',
        'consumer_full_name': 'str',
        'param_x': 'str',
        'installment_number': 'int',
        'amount': 'float',
        'currency_name': 'str',
        'currency_symbol': 'str',
        'installment_plan_number': 'str',
        'response_header': 'ResponseHeader'
    }

    attribute_map = {
        'api_key': 'ApiKey',
        'installment_plan_status': 'InstallmentPlanStatus',
        'result': 'Result',
        'payment_gateway': 'PaymentGateway',
        'email': 'Email',
        'consumer_full_name': 'ConsumerFullName',
        'param_x': 'ParamX',
        'installment_number': 'InstallmentNumber',
        'amount': 'Amount',
        'currency_name': 'CurrencyName',
        'currency_symbol': 'CurrencySymbol',
        'installment_plan_number': 'InstallmentPlanNumber',
        'response_header': 'ResponseHeader'
    }

    def __init__(self, api_key=None, installment_plan_status=None, result=None, payment_gateway=None, email=None, consumer_full_name=None, param_x=None, installment_number=None, amount=None, currency_name=None, currency_symbol=None, installment_plan_number=None, response_header=None):  # noqa: E501
        """CreateInstallmentPlanLegacyResponse - a model defined in Swagger"""  # noqa: E501

        self._api_key = None
        self._installment_plan_status = None
        self._result = None
        self._payment_gateway = None
        self._email = None
        self._consumer_full_name = None
        self._param_x = None
        self._installment_number = None
        self._amount = None
        self._currency_name = None
        self._currency_symbol = None
        self._installment_plan_number = None
        self._response_header = None
        self.discriminator = None

        if api_key is not None:
            self.api_key = api_key
        self.installment_plan_status = installment_plan_status
        self.result = result
        if payment_gateway is not None:
            self.payment_gateway = payment_gateway
        if email is not None:
            self.email = email
        if consumer_full_name is not None:
            self.consumer_full_name = consumer_full_name
        if param_x is not None:
            self.param_x = param_x
        self.installment_number = installment_number
        self.amount = amount
        if currency_name is not None:
            self.currency_name = currency_name
        if currency_symbol is not None:
            self.currency_symbol = currency_symbol
        if installment_plan_number is not None:
            self.installment_plan_number = installment_plan_number
        if response_header is not None:
            self.response_header = response_header

    @property
    def api_key(self):
        """Gets the api_key of this CreateInstallmentPlanLegacyResponse.  # noqa: E501


        :return: The api_key of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :rtype: str
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key):
        """Sets the api_key of this CreateInstallmentPlanLegacyResponse.


        :param api_key: The api_key of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :type: str
        """

        self._api_key = api_key

    @property
    def installment_plan_status(self):
        """Gets the installment_plan_status of this CreateInstallmentPlanLegacyResponse.  # noqa: E501


        :return: The installment_plan_status of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :rtype: int
        """
        return self._installment_plan_status

    @installment_plan_status.setter
    def installment_plan_status(self, installment_plan_status):
        """Sets the installment_plan_status of this CreateInstallmentPlanLegacyResponse.


        :param installment_plan_status: The installment_plan_status of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :type: int
        """
        
        if installment_plan_status is None:
            raise ValueError("Invalid value for `installment_plan_status`, must not be `None`")  # noqa: E501

        self._installment_plan_status = installment_plan_status

    @property
    def result(self):
        """Gets the result of this CreateInstallmentPlanLegacyResponse.  # noqa: E501


        :return: The result of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :rtype: int
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this CreateInstallmentPlanLegacyResponse.


        :param result: The result of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :type: int
        """
        
        if result is None:
            raise ValueError("Invalid value for `result`, must not be `None`")  # noqa: E501

        self._result = result

    @property
    def payment_gateway(self):
        """Gets the payment_gateway of this CreateInstallmentPlanLegacyResponse.  # noqa: E501


        :return: The payment_gateway of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :rtype: str
        """
        return self._payment_gateway

    @payment_gateway.setter
    def payment_gateway(self, payment_gateway):
        """Sets the payment_gateway of this CreateInstallmentPlanLegacyResponse.


        :param payment_gateway: The payment_gateway of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :type: str
        """

        self._payment_gateway = payment_gateway

    @property
    def email(self):
        """Gets the email of this CreateInstallmentPlanLegacyResponse.  # noqa: E501


        :return: The email of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this CreateInstallmentPlanLegacyResponse.


        :param email: The email of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def consumer_full_name(self):
        """Gets the consumer_full_name of this CreateInstallmentPlanLegacyResponse.  # noqa: E501


        :return: The consumer_full_name of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :rtype: str
        """
        return self._consumer_full_name

    @consumer_full_name.setter
    def consumer_full_name(self, consumer_full_name):
        """Sets the consumer_full_name of this CreateInstallmentPlanLegacyResponse.


        :param consumer_full_name: The consumer_full_name of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :type: str
        """

        self._consumer_full_name = consumer_full_name

    @property
    def param_x(self):
        """Gets the param_x of this CreateInstallmentPlanLegacyResponse.  # noqa: E501


        :return: The param_x of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :rtype: str
        """
        return self._param_x

    @param_x.setter
    def param_x(self, param_x):
        """Sets the param_x of this CreateInstallmentPlanLegacyResponse.


        :param param_x: The param_x of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :type: str
        """

        self._param_x = param_x

    @property
    def installment_number(self):
        """Gets the installment_number of this CreateInstallmentPlanLegacyResponse.  # noqa: E501


        :return: The installment_number of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :rtype: int
        """
        return self._installment_number

    @installment_number.setter
    def installment_number(self, installment_number):
        """Sets the installment_number of this CreateInstallmentPlanLegacyResponse.


        :param installment_number: The installment_number of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :type: int
        """
        
        if installment_number is None:
            raise ValueError("Invalid value for `installment_number`, must not be `None`")  # noqa: E501

        self._installment_number = installment_number

    @property
    def amount(self):
        """Gets the amount of this CreateInstallmentPlanLegacyResponse.  # noqa: E501


        :return: The amount of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this CreateInstallmentPlanLegacyResponse.


        :param amount: The amount of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :type: float
        """
        
        if amount is None:
            raise ValueError("Invalid value for `amount`, must not be `None`")  # noqa: E501

        self._amount = amount

    @property
    def currency_name(self):
        """Gets the currency_name of this CreateInstallmentPlanLegacyResponse.  # noqa: E501


        :return: The currency_name of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :rtype: str
        """
        return self._currency_name

    @currency_name.setter
    def currency_name(self, currency_name):
        """Sets the currency_name of this CreateInstallmentPlanLegacyResponse.


        :param currency_name: The currency_name of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :type: str
        """

        self._currency_name = currency_name

    @property
    def currency_symbol(self):
        """Gets the currency_symbol of this CreateInstallmentPlanLegacyResponse.  # noqa: E501


        :return: The currency_symbol of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :rtype: str
        """
        return self._currency_symbol

    @currency_symbol.setter
    def currency_symbol(self, currency_symbol):
        """Sets the currency_symbol of this CreateInstallmentPlanLegacyResponse.


        :param currency_symbol: The currency_symbol of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :type: str
        """

        self._currency_symbol = currency_symbol

    @property
    def installment_plan_number(self):
        """Gets the installment_plan_number of this CreateInstallmentPlanLegacyResponse.  # noqa: E501


        :return: The installment_plan_number of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :rtype: str
        """
        return self._installment_plan_number

    @installment_plan_number.setter
    def installment_plan_number(self, installment_plan_number):
        """Sets the installment_plan_number of this CreateInstallmentPlanLegacyResponse.


        :param installment_plan_number: The installment_plan_number of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :type: str
        """

        self._installment_plan_number = installment_plan_number

    @property
    def response_header(self):
        """Gets the response_header of this CreateInstallmentPlanLegacyResponse.  # noqa: E501


        :return: The response_header of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :rtype: ResponseHeader
        """
        return self._response_header

    @response_header.setter
    def response_header(self, response_header):
        """Sets the response_header of this CreateInstallmentPlanLegacyResponse.


        :param response_header: The response_header of this CreateInstallmentPlanLegacyResponse.  # noqa: E501
        :type: ResponseHeader
        """

        self._response_header = response_header

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreateInstallmentPlanLegacyResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateInstallmentPlanLegacyResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
