# coding: utf-8

"""
    splitit-web-api-public-sdk

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetInitiatedInstallmentPlanResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'response_header': 'ResponseHeader',
        'installment_plan_number': 'str',
        'plan_data': 'PlanData',
        'cart_data': 'CartData',
        'consumer_data': 'ConsumerData',
        'merchant_data': 'MerchantRef',
        'billing_address': 'AddressData',
        'payment_wizard_data_response': 'PaymentWizardDataResponse',
        'error_indicator': 'Error'
    }

    attribute_map = {
        'response_header': 'ResponseHeader',
        'installment_plan_number': 'InstallmentPlanNumber',
        'plan_data': 'PlanData',
        'cart_data': 'CartData',
        'consumer_data': 'ConsumerData',
        'merchant_data': 'MerchantData',
        'billing_address': 'BillingAddress',
        'payment_wizard_data_response': 'PaymentWizardDataResponse',
        'error_indicator': 'ErrorIndicator'
    }

    def __init__(self, response_header=None, installment_plan_number=None, plan_data=None, cart_data=None, consumer_data=None, merchant_data=None, billing_address=None, payment_wizard_data_response=None, error_indicator=None):  # noqa: E501
        """GetInitiatedInstallmentPlanResponse - a model defined in Swagger"""  # noqa: E501

        self._response_header = None
        self._installment_plan_number = None
        self._plan_data = None
        self._cart_data = None
        self._consumer_data = None
        self._merchant_data = None
        self._billing_address = None
        self._payment_wizard_data_response = None
        self._error_indicator = None
        self.discriminator = None

        if response_header is not None:
            self.response_header = response_header
        if installment_plan_number is not None:
            self.installment_plan_number = installment_plan_number
        if plan_data is not None:
            self.plan_data = plan_data
        if cart_data is not None:
            self.cart_data = cart_data
        if consumer_data is not None:
            self.consumer_data = consumer_data
        if merchant_data is not None:
            self.merchant_data = merchant_data
        if billing_address is not None:
            self.billing_address = billing_address
        if payment_wizard_data_response is not None:
            self.payment_wizard_data_response = payment_wizard_data_response
        if error_indicator is not None:
            self.error_indicator = error_indicator

    @property
    def response_header(self):
        """Gets the response_header of this GetInitiatedInstallmentPlanResponse.  # noqa: E501


        :return: The response_header of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :rtype: ResponseHeader
        """
        return self._response_header

    @response_header.setter
    def response_header(self, response_header):
        """Sets the response_header of this GetInitiatedInstallmentPlanResponse.


        :param response_header: The response_header of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :type: ResponseHeader
        """

        self._response_header = response_header

    @property
    def installment_plan_number(self):
        """Gets the installment_plan_number of this GetInitiatedInstallmentPlanResponse.  # noqa: E501


        :return: The installment_plan_number of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :rtype: str
        """
        return self._installment_plan_number

    @installment_plan_number.setter
    def installment_plan_number(self, installment_plan_number):
        """Sets the installment_plan_number of this GetInitiatedInstallmentPlanResponse.


        :param installment_plan_number: The installment_plan_number of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :type: str
        """

        self._installment_plan_number = installment_plan_number

    @property
    def plan_data(self):
        """Gets the plan_data of this GetInitiatedInstallmentPlanResponse.  # noqa: E501


        :return: The plan_data of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :rtype: PlanData
        """
        return self._plan_data

    @plan_data.setter
    def plan_data(self, plan_data):
        """Sets the plan_data of this GetInitiatedInstallmentPlanResponse.


        :param plan_data: The plan_data of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :type: PlanData
        """

        self._plan_data = plan_data

    @property
    def cart_data(self):
        """Gets the cart_data of this GetInitiatedInstallmentPlanResponse.  # noqa: E501


        :return: The cart_data of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :rtype: CartData
        """
        return self._cart_data

    @cart_data.setter
    def cart_data(self, cart_data):
        """Sets the cart_data of this GetInitiatedInstallmentPlanResponse.


        :param cart_data: The cart_data of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :type: CartData
        """

        self._cart_data = cart_data

    @property
    def consumer_data(self):
        """Gets the consumer_data of this GetInitiatedInstallmentPlanResponse.  # noqa: E501


        :return: The consumer_data of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :rtype: ConsumerData
        """
        return self._consumer_data

    @consumer_data.setter
    def consumer_data(self, consumer_data):
        """Sets the consumer_data of this GetInitiatedInstallmentPlanResponse.


        :param consumer_data: The consumer_data of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :type: ConsumerData
        """

        self._consumer_data = consumer_data

    @property
    def merchant_data(self):
        """Gets the merchant_data of this GetInitiatedInstallmentPlanResponse.  # noqa: E501


        :return: The merchant_data of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :rtype: MerchantRef
        """
        return self._merchant_data

    @merchant_data.setter
    def merchant_data(self, merchant_data):
        """Sets the merchant_data of this GetInitiatedInstallmentPlanResponse.


        :param merchant_data: The merchant_data of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :type: MerchantRef
        """

        self._merchant_data = merchant_data

    @property
    def billing_address(self):
        """Gets the billing_address of this GetInitiatedInstallmentPlanResponse.  # noqa: E501


        :return: The billing_address of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :rtype: AddressData
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this GetInitiatedInstallmentPlanResponse.


        :param billing_address: The billing_address of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :type: AddressData
        """

        self._billing_address = billing_address

    @property
    def payment_wizard_data_response(self):
        """Gets the payment_wizard_data_response of this GetInitiatedInstallmentPlanResponse.  # noqa: E501


        :return: The payment_wizard_data_response of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :rtype: PaymentWizardDataResponse
        """
        return self._payment_wizard_data_response

    @payment_wizard_data_response.setter
    def payment_wizard_data_response(self, payment_wizard_data_response):
        """Sets the payment_wizard_data_response of this GetInitiatedInstallmentPlanResponse.


        :param payment_wizard_data_response: The payment_wizard_data_response of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :type: PaymentWizardDataResponse
        """

        self._payment_wizard_data_response = payment_wizard_data_response

    @property
    def error_indicator(self):
        """Gets the error_indicator of this GetInitiatedInstallmentPlanResponse.  # noqa: E501


        :return: The error_indicator of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :rtype: Error
        """
        return self._error_indicator

    @error_indicator.setter
    def error_indicator(self, error_indicator):
        """Sets the error_indicator of this GetInitiatedInstallmentPlanResponse.


        :param error_indicator: The error_indicator of this GetInitiatedInstallmentPlanResponse.  # noqa: E501
        :type: Error
        """

        self._error_indicator = error_indicator

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetInitiatedInstallmentPlanResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetInitiatedInstallmentPlanResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
