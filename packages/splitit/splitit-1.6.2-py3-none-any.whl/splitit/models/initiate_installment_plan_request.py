# coding: utf-8

"""
    splitit-web-api-public-sdk

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class InitiateInstallmentPlanRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'plan_data': 'PlanData',
        'cart_data': 'CartData',
        'consumer_data': 'ConsumerData',
        'billing_address': 'AddressData',
        'installment_plan_number': 'str',
        'payment_wizard_data': 'PaymentWizardData',
        'redirect_urls': 'RedirectUrls',
        'events_endpoints': 'EventsEndpoints',
        'credit_card_details': 'CardData'
    }

    attribute_map = {
        'plan_data': 'PlanData',
        'cart_data': 'CartData',
        'consumer_data': 'ConsumerData',
        'billing_address': 'BillingAddress',
        'installment_plan_number': 'InstallmentPlanNumber',
        'payment_wizard_data': 'PaymentWizardData',
        'redirect_urls': 'RedirectUrls',
        'events_endpoints': 'EventsEndpoints',
        'credit_card_details': 'CreditCardDetails'
    }

    def __init__(self, plan_data=None, cart_data=None, consumer_data=None, billing_address=None, installment_plan_number=None, payment_wizard_data=None, redirect_urls=None, events_endpoints=None, credit_card_details=None):  # noqa: E501
        """InitiateInstallmentPlanRequest - a model defined in Swagger"""  # noqa: E501

        self._plan_data = None
        self._cart_data = None
        self._consumer_data = None
        self._billing_address = None
        self._installment_plan_number = None
        self._payment_wizard_data = None
        self._redirect_urls = None
        self._events_endpoints = None
        self._credit_card_details = None
        self.discriminator = None

        if plan_data is not None:
            self.plan_data = plan_data
        if cart_data is not None:
            self.cart_data = cart_data
        if consumer_data is not None:
            self.consumer_data = consumer_data
        if billing_address is not None:
            self.billing_address = billing_address
        if installment_plan_number is not None:
            self.installment_plan_number = installment_plan_number
        if payment_wizard_data is not None:
            self.payment_wizard_data = payment_wizard_data
        if redirect_urls is not None:
            self.redirect_urls = redirect_urls
        if events_endpoints is not None:
            self.events_endpoints = events_endpoints
        if credit_card_details is not None:
            self.credit_card_details = credit_card_details

    @property
    def plan_data(self):
        """Gets the plan_data of this InitiateInstallmentPlanRequest.  # noqa: E501


        :return: The plan_data of this InitiateInstallmentPlanRequest.  # noqa: E501
        :rtype: PlanData
        """
        return self._plan_data

    @plan_data.setter
    def plan_data(self, plan_data):
        """Sets the plan_data of this InitiateInstallmentPlanRequest.


        :param plan_data: The plan_data of this InitiateInstallmentPlanRequest.  # noqa: E501
        :type: PlanData
        """

        self._plan_data = plan_data

    @property
    def cart_data(self):
        """Gets the cart_data of this InitiateInstallmentPlanRequest.  # noqa: E501


        :return: The cart_data of this InitiateInstallmentPlanRequest.  # noqa: E501
        :rtype: CartData
        """
        return self._cart_data

    @cart_data.setter
    def cart_data(self, cart_data):
        """Sets the cart_data of this InitiateInstallmentPlanRequest.


        :param cart_data: The cart_data of this InitiateInstallmentPlanRequest.  # noqa: E501
        :type: CartData
        """

        self._cart_data = cart_data

    @property
    def consumer_data(self):
        """Gets the consumer_data of this InitiateInstallmentPlanRequest.  # noqa: E501


        :return: The consumer_data of this InitiateInstallmentPlanRequest.  # noqa: E501
        :rtype: ConsumerData
        """
        return self._consumer_data

    @consumer_data.setter
    def consumer_data(self, consumer_data):
        """Sets the consumer_data of this InitiateInstallmentPlanRequest.


        :param consumer_data: The consumer_data of this InitiateInstallmentPlanRequest.  # noqa: E501
        :type: ConsumerData
        """

        self._consumer_data = consumer_data

    @property
    def billing_address(self):
        """Gets the billing_address of this InitiateInstallmentPlanRequest.  # noqa: E501


        :return: The billing_address of this InitiateInstallmentPlanRequest.  # noqa: E501
        :rtype: AddressData
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this InitiateInstallmentPlanRequest.


        :param billing_address: The billing_address of this InitiateInstallmentPlanRequest.  # noqa: E501
        :type: AddressData
        """

        self._billing_address = billing_address

    @property
    def installment_plan_number(self):
        """Gets the installment_plan_number of this InitiateInstallmentPlanRequest.  # noqa: E501


        :return: The installment_plan_number of this InitiateInstallmentPlanRequest.  # noqa: E501
        :rtype: str
        """
        return self._installment_plan_number

    @installment_plan_number.setter
    def installment_plan_number(self, installment_plan_number):
        """Sets the installment_plan_number of this InitiateInstallmentPlanRequest.


        :param installment_plan_number: The installment_plan_number of this InitiateInstallmentPlanRequest.  # noqa: E501
        :type: str
        """

        self._installment_plan_number = installment_plan_number

    @property
    def payment_wizard_data(self):
        """Gets the payment_wizard_data of this InitiateInstallmentPlanRequest.  # noqa: E501


        :return: The payment_wizard_data of this InitiateInstallmentPlanRequest.  # noqa: E501
        :rtype: PaymentWizardData
        """
        return self._payment_wizard_data

    @payment_wizard_data.setter
    def payment_wizard_data(self, payment_wizard_data):
        """Sets the payment_wizard_data of this InitiateInstallmentPlanRequest.


        :param payment_wizard_data: The payment_wizard_data of this InitiateInstallmentPlanRequest.  # noqa: E501
        :type: PaymentWizardData
        """

        self._payment_wizard_data = payment_wizard_data

    @property
    def redirect_urls(self):
        """Gets the redirect_urls of this InitiateInstallmentPlanRequest.  # noqa: E501


        :return: The redirect_urls of this InitiateInstallmentPlanRequest.  # noqa: E501
        :rtype: RedirectUrls
        """
        return self._redirect_urls

    @redirect_urls.setter
    def redirect_urls(self, redirect_urls):
        """Sets the redirect_urls of this InitiateInstallmentPlanRequest.


        :param redirect_urls: The redirect_urls of this InitiateInstallmentPlanRequest.  # noqa: E501
        :type: RedirectUrls
        """

        self._redirect_urls = redirect_urls

    @property
    def events_endpoints(self):
        """Gets the events_endpoints of this InitiateInstallmentPlanRequest.  # noqa: E501


        :return: The events_endpoints of this InitiateInstallmentPlanRequest.  # noqa: E501
        :rtype: EventsEndpoints
        """
        return self._events_endpoints

    @events_endpoints.setter
    def events_endpoints(self, events_endpoints):
        """Sets the events_endpoints of this InitiateInstallmentPlanRequest.


        :param events_endpoints: The events_endpoints of this InitiateInstallmentPlanRequest.  # noqa: E501
        :type: EventsEndpoints
        """

        self._events_endpoints = events_endpoints

    @property
    def credit_card_details(self):
        """Gets the credit_card_details of this InitiateInstallmentPlanRequest.  # noqa: E501


        :return: The credit_card_details of this InitiateInstallmentPlanRequest.  # noqa: E501
        :rtype: CardData
        """
        return self._credit_card_details

    @credit_card_details.setter
    def credit_card_details(self, credit_card_details):
        """Sets the credit_card_details of this InitiateInstallmentPlanRequest.


        :param credit_card_details: The credit_card_details of this InitiateInstallmentPlanRequest.  # noqa: E501
        :type: CardData
        """

        self._credit_card_details = credit_card_details

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InitiateInstallmentPlanRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InitiateInstallmentPlanRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
