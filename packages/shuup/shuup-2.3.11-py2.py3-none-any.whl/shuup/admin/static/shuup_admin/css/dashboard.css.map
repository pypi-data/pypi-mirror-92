{"version":3,"sources":["dashboard.scss","../../../node_modules/bootstrap/scss/mixins/_breakpoints.scss","../../base/scss/variables.scss"],"names":[],"mappings":"AAWA,OACI,kBAAA,CACA,oBAAA,CACA,UAAA,CACA,iBAAA,CACA,eC4CA,yBD1CA,mBAVA,WCoDA,yBD1CA,mBAVA,WAoBA,oBApBA,WCoDA,yBDhCA,oBApBA,WA4BA,mBA5BA,WCoDA,yBDxBA,mBA5BA,WAoCA,kBApCA,WAwCA,uBACI,iBAAA,CACA,QAAA,CACA,WAGI,6CACI,cAIR,wCACI,eAAA,CACA,WAAA,CACA,eAAA,CACA,WAEA,8CACI,cAGJ,0CACI,qBAAA,CACA,kBAIR,sCACI,SAAA,CACA,OAAA,CACA,eAAA,CACA,QAAA,CACA,kBE/EF,CFgFE,eAAA,CACA,iDAAA,CAAA,0CAEA,4CACI,UAAA,CACA,iCAAA,CACA,kCAAA,CACA,+BAAA,CACA,iBAAA,CACA,QAAA,CACA,UAGJ,yCACI,eAEA,2CACI,UAAA,CACA,gBAGJ,2CACI,UAAA,CACA,cAEA,oJAGI,eAAA,CACA,0BAQpB,oBACI,SAAA,CACA,qBE7EA,CF8EA,iBAAA,CACA,mDEhDI,CFgDJ,4CAEA,iCACI,+BAAA,CACA,iBAAA,CACA,kBAAA,CACA,YAAA,CACA,aAAA,CACA,iBAEA,mCACI,iBAAA,CACA,cAIP,kCACG,UAAA,CACA,UAAA,CACA,gBAEA,6CACI,qBAAA,CACA,QAAA,CACA,aErGH,CFsGG,qBAAA,CAEA,gBAAA,CACA,eAAA,CACA,wBAAA,CACA,qBAAA,CACA,yBAGJ,6CACI,YAAA,CACA,kBAAA,CACA,WAAA,CACA,UAAA,CACA,qBAAA,CACA,kBAEA,+CACI,gBAAA,CACA,0BAKZ,mCACI,YAAA,CACA,sBAEA,sCACI,QAAA,CACA,gBAGJ,6CACI,UAAA,CACA,eAAA,CACA,yBAAA,CACA,aAAA,CACA,eAAA,CACA,gBAMJ,4FACI,iBAAA,CACA,cAAA,CACA,UElJH,CFmJG,iBAGJ,kFACI,UAAA,CACA,oBAEA,wFACI,mBAEA,8GACI,SAAA,CACA,kBAKZ,4EACI,eAAA,CACA,UAEA,kFACI,aAAA,CACA,UAAA,CACA,4BAAA,CACA,iBAEA,wGACI,SAIR,kGACI,mBAGJ,0GACI,kBAAA,CACA,eAAA,CACA,mBAIR,sGACI,kBE7ON,CF8OM,UAAA,CACA,gBAOR,iCACI,kCADJ,mCACI,kCADJ,iCACI,+BADJ,gCACI,kCADJ,mCACI,kCADJ,kCACI,kCADJ,mCACI,kCADJ,iCACI","file":"dashboard.css","sourceRoot":"../../../static_src/dashboard/scss","sourcesContent":["@import '~bootstrap/scss/_functions';\n@import '~bootstrap/scss/_variables';\n@import \"../../base/scss/variables.scss\";\n@import '~bootstrap/scss/mixins/_breakpoints';\n\n$block-columns: 12;\n\n@mixin block-width($block-width) {\n    width: round(percentage($block-width / $block-columns));\n}\n\n.block {\n    margin-bottom: 30px;\n    display: inline-block;\n    width: 100%;\n    position: absolute;\n    padding: 0 15px;\n\n    &.width-small {\n        @include media-breakpoint-up(sm) {\n            @include block-width(6);\n        }\n\n        @include media-breakpoint-up(md) {\n            @include block-width(3);\n        }\n    }\n\n    &.width-medium {\n        @include block-width(12);\n\n        @include media-breakpoint-up(sm) {\n            @include block-width(6);\n        }\n    }\n\n    &.width-large {\n        @include block-width(12);\n\n        @include media-breakpoint-up(md) {\n            @include block-width(9);\n        }\n    }\n\n    &.width-full {\n        @include block-width(12);\n    }\n\n    .block-settings {\n        position: absolute;\n        top: 13px;\n        right: 25px;\n\n        &.open {\n            .toggle-settings {\n                color: $primary;\n            }\n        }\n\n        .toggle-settings {\n            background: none;\n            border: none;\n            padding: 3px 7px;\n            color: $gray-light;\n\n            &:hover {\n                color: $primary;\n            }\n\n            i {\n                vertical-align: middle;\n                text-align: center;\n            }\n        }\n\n        .dropdown-menu {\n            left: auto;\n            right: 0;\n            border-radius: 0;\n            border: 0;\n            background: $primary;\n            font-size: 0.85em;\n            box-shadow: 1px 2px 2px 1px rgba(0, 0, 0, 0.2);\n\n            &:after {\n                content: \"\";\n                border-left: 6px solid transparent;\n                border-right: 6px solid transparent;\n                border-bottom: 6px solid $primary;\n                position: absolute;\n                top: -6px;\n                right: 7px;\n            }\n\n            li {\n                padding: 0px 10px;\n\n                i {\n                    width: 20px;\n                    text-align: left;\n                }\n\n                a {\n                    color: #fff;\n                    padding: 3px 0px;\n\n                    &:hover,\n                    &:focus,\n                    &:active {\n                        background: none;\n                        text-decoration: underline;\n                    }\n                }\n            }\n        }\n\n    }\n\n    .block-inner {\n        padding: 0px;\n        background-color: $white;\n        border-radius: 4px;\n        box-shadow: $shadow-md;\n\n        .block-title {\n            border-bottom: 2px solid $primary;\n            margin-bottom: 5px;\n            padding-bottom: 5px;\n            margin-top: 0px;\n            padding-top: 0;\n            font-size: 1.6rem;\n\n            i {\n                margin-right: 10px;\n                color: $primary;\n            }\n        }\n\n         .block-header {\n            width: 100%;\n            color: #fff;\n            overflow: hidden;\n\n            .text-wrap {\n                background-color: #fff;\n                margin: 0;\n                color: $text-color;\n                vertical-align: middle;\n                padding: 0.5em 1em;\n                font-size: 1.1rem;\n                font-weight: 500;\n                text-transform: uppercase;\n                padding-bottom: 0.2em;\n                background-color: gainsboro;\n            }\n\n            .icon-wrap {\n                display:none;\n                background: darken($primary, 8%);\n                height: 2rem;\n                width: 2rem;\n                vertical-align: middle;\n                text-align: center;\n\n                i {\n                    font-size: 2.5rem;\n                    color: rgba(255, 255, 255, 0.85);\n                }\n            }\n        }\n\n        .block-content {\n            padding: 1rem;\n            background-color:#fff;\n\n            h2 {\n                margin: 0;\n                font-weight: 400;\n            }\n\n            .subtitle {\n                color: #999;\n                padding-top: 1em;\n                border-top: 1px solid #DDD;\n                display: block;\n                margin-top: 10px;\n                font-size: 0.8rem;\n            }\n        }\n\n        .activity-list,\n        .notifications {\n            .timestamp {\n                padding-left: 10px;\n                font-size: 0.9em;\n                color: $gray-light;\n                text-align: right;\n            }\n\n            table {\n                width: 100%;\n                padding-bottom: 10px;\n\n                td {\n                    padding-bottom: 2px;\n\n                    &.dismiss-td {\n                        width: 1px;\n                        padding-right: 1em;\n                    }\n                }\n            }\n\n            ul {\n                list-style: none;\n                padding: 0;\n\n                li {\n                    display: table;\n                    width: 100%;\n                    border-bottom: 1px solid #ddd;\n                    padding: 10px 5px;\n\n                    &:last-child {\n                        border: 0;\n                    }\n                }\n\n                .timestamp {\n                    display: table-cell;\n                }\n\n                .activity-name {\n                    padding-right: 10px;\n                    text-align: left;\n                    display: table-cell;\n                }\n            }\n\n            .dismiss-button {\n                background: $success;\n                color: #fff;\n                padding: 1px 3px;\n            }\n        }\n    }\n\n    // Mixin for changing block header background colors\n    @mixin block-bg-color($color) {\n        .block-header {\n            border-bottom: 2.5px solid $color;\n        }\n    }\n\n    .block-blue {\n        @include block-bg-color($block-blue);\n    }\n    .block-orange {\n        @include block-bg-color($block-orange);\n    }\n    .block-gray {\n        @include block-bg-color($block-gray);\n    }\n    .block-red {\n        @include block-bg-color($block-red);\n    }\n    .block-purple {\n        @include block-bg-color($block-purple);\n    }\n    .block-green {\n        @include block-bg-color($block-green);\n    }\n    .block-yellow {\n        @include block-bg-color($block-yellow);\n    }\n    .block-navy {\n        @include block-bg-color($block-navy);\n    }\n}\n\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","// Brand colors\n$primary: #07B0F2;\n$secondary: #041E40;\n$success: #27ae60;\n$warning: #e67e22;\n$danger: #e74c3c;\n$info: #228FB7;\n\n// Success colors\n$state-success-text: $success;\n$state-success-bg: $success;\n$state-success-border: $success;\n$alert-success-text: #fff;\n\n// Info colors\n$state-info-text: $info;\n$state-info-bg: $info;\n$state-info-border: $info;\n$alert-info-text: #fff;\n\n// Warning colors\n$state-warning-text: $warning;\n$state-warning-bg: $warning;\n$state-warning-border: $warning;\n$alert-warning-text: #fff;\n\n// Danger colors\n$state-danger-text: $danger;\n$state-danger-bg: $danger;\n$state-danger-border: $danger;\n$alert-danger-text: #fff;\n\n$font-size-base: 0.9rem;\n\n// Heading font sizes\n$h1-font-size: $font-size-base * 1.7;\n$h2-font-size: $font-size-base * 1.6;\n$h3-font-size: $font-size-base * 1.2;\n$h4-font-size: $font-size-base * 1.1;\n$h5-font-size: $font-size-base * 1;\n$h6-font-size: 0.9rem;\n\n// Other colors\n$white: #fff;\n$gray-bg: #F5F7F8;\n$text-color: darken($gray-bg, 70%);\n$active-text-color: #fff;\n$border-color: darken($gray-bg, 15%);\n$gray: $text-color;\n$gray-light: #888;\n$gray-lighter: #aaa;\n\n// Block colors\n$block-light-blue: rgba(66, 154, 175, 0.5);\n$block-blue: #429AAF;\n$block-red: #C54141;\n$block-orange: #D16B2C;\n$block-gray: #555555;\n$block-purple: #7F5C99;\n$block-green: #94B933;\n$block-yellow: #CFBE00;\n$block-navy: #41589B;\n\n$headings-font-weight: 600;\n\n$icon-folder-color: #E1AE46;\n\n$nav-bg: $gray-bg;\n$nav-bg-hover: #333;\n$main-menu-width: 280px;\n$top-header-height: 60px;\n\n$shadow-color: rgba($secondary, 0.1);\n$shadow-lg: 8px 0 40px -8px $shadow-color;\n$shadow-md: 0 4px 20px -2px $shadow-color;\n$shadow-dropdown: 0 8px 18px $shadow-color;\n\n$border-radius-lg: .3rem;\n$border-radius-xl: .4rem;\n\n// Pagination\n$pagination-bg: $nav-bg;\n$pagination-color: #fff;\n$pagination-border: #000;\n\n$pagination-disabled-color: $pagination-color;\n$pagination-disabled-bg: $pagination-bg;\n$pagination-disabled-border: $pagination-border;\n\n$pagination-hover-border: $pagination-border;\n$pagination-hover-bg: $nav-bg-hover;\n$pagination-hover-color: #fff;\n\n$pagination-active-border: $pagination-border;\n$pagination-active-bg: $nav-bg-hover;\n$pagination-active-color: $pagination-hover-color;\n\n\n// Select2 bootstrap css vars\n$input-border: $input-border-color;\n$input-border-focus: $input-focus-border-color;\n$input-bg-disabled: $input-disabled-bg;\n$input-height-base: $input-height;\n$input-height-small: $input-height-sm;\n$input-height-large: $input-height-lg;\n$line-height-small: $line-height-sm;\n$line-height-large: $line-height-lg;\n\n$padding-base-vertical: $input-padding-y;\n$padding-base-horizontal: $input-padding-x;\n$padding-small-vertical: $input-padding-y-sm;\n$padding-small-horizontal: $input-padding-x-sm;\n$padding-large-vertical: $input-padding-y-lg;\n$padding-large-horizontal: $input-padding-x-lg;\n\n$btn-default-bg: $primary;\n$btn-default-color: #fff;\n$btn-default-border: $primary;\n\n@mixin reset-filter() {\n    filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);\n}\n\n$xs: strip-unit(map-get($grid-breakpoints, \"xs\"));\n$sm: strip-unit(map-get($grid-breakpoints, \"sm\"));\n$md: strip-unit(map-get($grid-breakpoints, \"md\"));\n$lg: strip-unit(map-get($grid-breakpoints, \"lg\"));\n$xl: strip-unit(map-get($grid-breakpoints, \"xl\"));\n\n@mixin rotate($angle) {\n    transform: rotate($angle)\n}\n\n@mixin transition($args) {\n    transition: $args ease-in-out;\n}\n"]}