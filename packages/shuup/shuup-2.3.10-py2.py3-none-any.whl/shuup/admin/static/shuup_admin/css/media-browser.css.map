{"version":3,"sources":["media-browser.scss","../../../../../node_modules/bootstrap/scss/mixins/_breakpoints.scss","../../../../../static_src/base/scss/variables.scss"],"names":[],"mappings":"AAKA,aACI,cCmEA,4BDhEJ,aAEQ,cAGJ,gCACI,eAAA,CACA,SAAA,CACA,SAGJ,mBACI,oBAGJ,kBACI,eAAA,CACA,gBAAA,CACA,aAAA,CACA,oBAAA,CACA,aEgBK,CFfL,kBAAA,CACA,eAAA,CACA,uBC4BJ,0BDpCA,kBAWQ,gBAGJ,wBACI,0BAIR,gCACI,cAGJ,gCACI,aE/CE,CFgDF,gBAGJ,qCACI,WAGJ,eACI,iBAKR,OACI,mBAAA,CACA,mBAEA,kBACI,gBAAA,CACA,iBAEJ,iBACI,gBAAA,CACA,cAMJ,0BAEI,gBAEA,qCACI,aAAA,CACA,kBCXR,4BDSI,qCAKQ,oBAIA,kDACI,qBAGJ,6CACI,iBAMhB,8BACI,iBAEA,oFAEI,mBClCR,4BDqCY,kHACI,YCvBhB,mDD4BY,oHACI,YCzDhB,0BD8DY,oHACI,YAIR,kHACI,aAAA,CACA,eAAA,CACA,iBAAA,CACA,YAAA,CACA,wBAAA,CACA,kBAAA,CACA,mCAAA,CAAA,4BAEA,4PAEI,qBAGJ,0HACI,YAIR,0GACI,kBAEA,8GACI,aEzGP,CF0GO,qBAEA,0HACI,cAOZ,yDACI,kBAGJ,6CACI,eAIR,2CACI,gBAAA,CACA,UE3HC,CF4HD,iBAAA,CACA,8BAAA,CAAA,uBAEA,gDACI,gBAIR,4CACI,iBAAA,CACA,cAAA,CACA,sBAAA,CACA,UAAA,CACA,0BAAA,CAAA,mBAEA,yDACI,mBAEA,6DACI,gBAIR,wDACI,eAEA,6DACI,cAAA,CACA,gBAKZ,gDACI,iBAAA,CACA,KAAA,CACA,MAAA,CACA,OAAA,CACA,QAAA,CACA,SAAA,CACA,iBAAA,CACA,0BAAA,CAAA,kBAAA,CACA,+BAAA,CACA,UAAA,CACA,iBAAA,CACA,eAEA,uDAEI,eAAA,CACA,cAGJ,sDACI,gBAAA,CACA,gBAQhB,SACI,iBAAA,CACA,iCAAA,CAAA,0BAEA,6CAEI,yCAAA,CAAA,kCAIA,0BACI,gCAGJ,4BACI,iBAAA,CACA,WAGJ,2BACI,UAGJ,gCACI,UAAA,CACA,SAAA,CACA,mBAEA,mCACI,GACI,0BAAA,CAAA,mBAEJ,IACI,2BAAA,CAAA,oBAEJ,GACI,0BAAA,CAAA,oBARR,2BACI,GACI,0BAAA,CAAA,mBAEJ,IACI,2BAAA,CAAA,oBAEJ,GACI,0BAAA,CAAA,oBAIR,uCACI,+CAAA,CAAA,wCAMhB,YACI,cAAA,CACA,MAAA,CACA,OAAA,CACA,QAAA,CACA,WAAA,CACA,eAAA,CACA,WAAA,CACA,6EAAA,CAAA,qEAAA,CACA,eAAA,CACA,wCAAA,CAAA,gCAAA,CAAA,wBAAA,CAAA,+CAEA,iBACI,kCAAA,CAAA,2BAGJ,wBACI,qBAAA,CACA,eAAA,CACA,iCAAA,CAAA,yBAAA,CAkBA,iBAAA,CACA,UAAA,CACA,iBAlBA,kCACI,8BAGJ,8BACI,8BAGJ,6BACI,8BAEA,0CACI,UAQR,iCACI,YAGJ,qCACI,UAAA,CACA,kBEzUF,CF0UE,iBAAA,CACA,uCAAA,CAAA,gCAKZ,cACI,SAAA,CACA,iBAAA,CACA,UAAA,CACA,QAAA,CACA","file":"media-browser.css","sourceRoot":"../../../modules/media/static_src/media/browser","sourcesContent":["@import '~bootstrap/scss/_functions';\n@import '~bootstrap/scss/_variables';\n@import \"../../../../../static_src/base/scss/variables\";\n@import '~bootstrap/scss/mixins/_breakpoints';\n\n.folder-icon {\n    color: $icon-folder-color;\n}\n\n.folder-tree {\n    @include media-breakpoint-down(md) {\n        display: none;\n    }\n\n    ul, li {\n        list-style: none;\n        padding: 0;\n        margin: 0;\n    }\n\n    ul ul {\n        padding-left: 2.5rem;\n    }\n\n    li a {\n        font-size: 0.9rem;\n        padding: 5px 10px;\n        display: block;\n        text-decoration: none;\n        color: $text-color;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n\n        @include media-breakpoint-up(xl) {\n            font-size: 1rem;\n        }\n\n        &:hover {\n            text-decoration: underline;\n        }\n    }\n\n    li.in-path > a .name {\n        color: $text-color;\n    }\n\n    li.current > a .name {\n        color: $primary;\n        font-weight: 500;\n    }\n\n    ul li.new-folder-item a {\n        color: $gray-light;\n    }\n\n    i {\n        margin-right: 6px;\n    }\n\n}\n\n.title {\n    padding-bottom: 15px;\n    margin-bottom: 30px;\n\n    i, a {\n        margin-right: 7px;\n        font-size: 1.2rem;\n    }\n    a.current {\n        font-size: 1.5rem;\n        color: $text-color;\n    }\n}\n\n.folder-view {\n\n    .btn-toolbar {\n        margin: 0;\n        margin-bottom: 50px;\n\n        .btn-group {\n            margin-left: 0;\n            margin-right: 15px;\n\n            @include media-breakpoint-down(md) {\n                margin-bottom: 10px;\n            }\n\n            &.icons {\n                button {\n                    padding: 6px 10px 4px 10px;\n                }\n\n                i {\n                    font-size: 1.4rem;\n                }\n            }\n        }\n    }\n\n    .folder-contents {\n        min-height: 350px;\n\n        .grid-folder,\n        .grid-file {\n            margin-bottom: 60px;\n\n            @include media-breakpoint-down(md) {\n                &:nth-child(2n+1) {\n                    clear: both;\n                }\n            }\n\n            @include media-breakpoint-between(md, lg) {\n                &:nth-child(3n+1) {\n                    clear: both;\n                }\n            }\n\n            @include media-breakpoint-up(xl) {\n                &:nth-child(4n+1) {\n                    clear: both;\n                }\n            }\n\n            a.file-preview {\n                display: block;\n                background: #fff;\n                text-align: center;\n                padding: 15px;\n                border: 1px solid $border-color;\n                margin-bottom: 10px;\n                transition: border-color 0.1s;\n\n                &:hover,\n                &:focus {\n                    border-color: $primary;\n                }\n\n                img {\n                    margin: auto;\n                }\n            }\n\n            .file-name {\n                text-align: center;\n\n                a {\n                    color: $text-color;\n                    text-decoration: none;\n\n                    &:hover {\n                        color: $primary;\n                    }\n                }\n            }\n        }\n\n        .grid-folder {\n            .file-preview {\n                padding: 30px 15px;\n            }\n\n            i {\n                font-size: 60px;\n            }\n        }\n\n        .upload-hint {\n            padding-top: 60px;\n            color: $gray-light;\n            text-align: center;\n            transition: opacity 0.2s;\n\n            span {\n                font-weight: 700;\n            }\n        }\n\n        .empty-folder {\n            text-align: center;\n            padding: 50px 0px;\n            border: 3px dashed #eee;\n            color: #999;\n            transition: all 0.2s;\n\n            .empty-image {\n                margin-bottom: 25px;\n\n                img {\n                    max-width: 300px;\n                }\n            }\n\n            .empty-text {\n                font-size: 18px;\n\n                span {\n                    font-size: 26px;\n                    font-weight: 600;\n                }\n            }\n        }\n\n        .upload-indicator {\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            opacity: 0;\n            visibility: hidden;\n            transition: all 0.4s;\n            background: rgba($info, 0.15);\n            color: #fff;\n            text-align: center;\n            padding: 53px 0px;\n\n            .image {\n                margin-bottom: 50px;\n                max-width: 300px;\n                margin: 0 auto;\n            }\n\n            .text {\n                font-size: 2.5rem;\n                font-weight: 500;\n            }\n        }\n    }\n\n}\n\n\n.fd-zone {\n    position: relative;\n    transition: background 0.5s;\n\n    .empty-folder,\n    .upload-hint {\n        transition: border-color, color 0.5s;\n    }\n\n    &.over {\n        &.grid-folder {\n            background: rgba($info, 85%);\n        }\n\n        .empty-folder {\n            visibility: hidden;\n            color: #fff;\n        }\n\n        .upload-hint {\n            opacity: 0;\n        }\n\n        .upload-indicator {\n            z-index: 10;\n            opacity: 1;\n            visibility: visible;\n\n            @keyframes uploadIndicator {\n                0% {\n                    transform: scale(1)\n                }\n                40% {\n                    transform: scale(0.9)\n                }\n                100% {\n                    transform: scale(1)\n                }\n            }\n\n            .image {\n                animation: uploadIndicator 1.5s infinite;\n            }\n        }\n    }\n}\n\n.queue-view {\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 40px;\n    background: #eee;\n    padding: 5px;\n    box-shadow: 0 -2px 5px 0 rgba(0, 0, 0, 0.16), 0 -2px 10px 0 rgba(0, 0, 0, 0.12);\n    overflow: hidden;\n    transition: transform 0.4s;\n\n    &.done {\n        transform: translateY(100%)\n    }\n\n    .queue-file {\n        border: 2px solid #aaa;\n        background: #fff;\n        transition: background 0.5s;\n\n        &.uploading {\n            background: rgba($primary, 0.2);\n        }\n\n        &.error {\n            background: rgba($danger, 0.2);\n        }\n\n        &.done {\n            background: rgba($success, 0.2);\n\n            .qf-progress {\n                opacity: 0\n            }\n        }\n\n        border-radius: 4px;\n        float: left;\n        margin-right: 4px;\n\n        .qf-name {\n            padding: 3px;\n        }\n\n        .qf-progress {\n            height: 5px;\n            background: $primary;\n            border-radius: 2px;\n            transition: width 0.1s, opacity 1s;\n        }\n    }\n}\n\n.file-cog-btn {\n    padding: 0;\n    position: absolute;\n    right: 25px;\n    top: 10px;\n    width: 20px;\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","// Brand colors\n$primary: #07B0F2;\n$secondary: #041E40;\n$success: #27ae60;\n$warning: #e67e22;\n$danger: #e74c3c;\n$info: #228FB7;\n\n// Success colors\n$state-success-text: $success;\n$state-success-bg: $success;\n$state-success-border: $success;\n$alert-success-text: #fff;\n\n// Info colors\n$state-info-text: $info;\n$state-info-bg: $info;\n$state-info-border: $info;\n$alert-info-text: #fff;\n\n// Warning colors\n$state-warning-text: $warning;\n$state-warning-bg: $warning;\n$state-warning-border: $warning;\n$alert-warning-text: #fff;\n\n// Danger colors\n$state-danger-text: $danger;\n$state-danger-bg: $danger;\n$state-danger-border: $danger;\n$alert-danger-text: #fff;\n\n$font-size-base: 0.9rem;\n\n// Heading font sizes\n$h1-font-size: $font-size-base * 1.7;\n$h2-font-size: $font-size-base * 1.6;\n$h3-font-size: $font-size-base * 1.2;\n$h4-font-size: $font-size-base * 1.1;\n$h5-font-size: $font-size-base * 1;\n$h6-font-size: 0.9rem;\n\n// Other colors\n$white: #fff;\n$gray-bg: #F5F7F8;\n$text-color: darken($gray-bg, 70%);\n$active-text-color: #fff;\n$border-color: darken($gray-bg, 15%);\n$gray: $text-color;\n$gray-light: #888;\n$gray-lighter: #aaa;\n\n// Block colors\n$block-light-blue: rgba(66, 154, 175, 0.5);\n$block-blue: #429AAF;\n$block-red: #C54141;\n$block-orange: #D16B2C;\n$block-gray: #555555;\n$block-purple: #7F5C99;\n$block-green: #94B933;\n$block-yellow: #CFBE00;\n$block-navy: #41589B;\n\n$headings-font-weight: 600;\n\n$icon-folder-color: #E1AE46;\n\n$nav-bg: $gray-bg;\n$nav-bg-hover: #333;\n$main-menu-width: 280px;\n$top-header-height: 60px;\n\n$shadow-color: rgba($secondary, 0.1);\n$shadow-lg: 8px 0 40px -8px $shadow-color;\n$shadow-md: 0 4px 20px -2px $shadow-color;\n$shadow-dropdown: 0 8px 18px $shadow-color;\n\n$border-radius-lg: .3rem;\n$border-radius-xl: .4rem;\n\n// Pagination\n$pagination-bg: $nav-bg;\n$pagination-color: #fff;\n$pagination-border: #000;\n\n$pagination-disabled-color: $pagination-color;\n$pagination-disabled-bg: $pagination-bg;\n$pagination-disabled-border: $pagination-border;\n\n$pagination-hover-border: $pagination-border;\n$pagination-hover-bg: $nav-bg-hover;\n$pagination-hover-color: #fff;\n\n$pagination-active-border: $pagination-border;\n$pagination-active-bg: $nav-bg-hover;\n$pagination-active-color: $pagination-hover-color;\n\n\n// Select2 bootstrap css vars\n$input-border: $input-border-color;\n$input-border-focus: $input-focus-border-color;\n$input-bg-disabled: $input-disabled-bg;\n$input-height-base: $input-height;\n$input-height-small: $input-height-sm;\n$input-height-large: $input-height-lg;\n$line-height-small: $line-height-sm;\n$line-height-large: $line-height-lg;\n\n$padding-base-vertical: $input-padding-y;\n$padding-base-horizontal: $input-padding-x;\n$padding-small-vertical: $input-padding-y-sm;\n$padding-small-horizontal: $input-padding-x-sm;\n$padding-large-vertical: $input-padding-y-lg;\n$padding-large-horizontal: $input-padding-x-lg;\n\n$btn-default-bg: $primary;\n$btn-default-color: #fff;\n$btn-default-border: $primary;\n\n@mixin reset-filter() {\n    filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);\n}\n\n$xs: strip-unit(map-get($grid-breakpoints, \"xs\"));\n$sm: strip-unit(map-get($grid-breakpoints, \"sm\"));\n$md: strip-unit(map-get($grid-breakpoints, \"md\"));\n$lg: strip-unit(map-get($grid-breakpoints, \"lg\"));\n$xl: strip-unit(map-get($grid-breakpoints, \"xl\"));\n\n@mixin rotate($angle) {\n    transform: rotate($angle)\n}\n\n@mixin transition($args) {\n    transition: $args ease-in-out;\n}\n"]}