Metadata-Version: 2.1
Name: vectors2d
Version: 0.95
Summary: Small but useful module that allows the work with vectors in 2-dimensional space.
Home-page: https://github.com/MitryP/vectors
Author: Dmitry Popov
Author-email: thedmitryp@ukr.net
License: MIT
Download-URL: https://github.com/MitryP/vectors/archive/0.95.tar.gz
Description: # Vectors2D
        It's a small module called to facilitate work with vectors in Python. Adds class Vector2D and operations with vectors in 2 dimensions.
        All functions take Vector2D. They also take tuples or lists of int or float with len == 2.
        Vectors can be added, subbed, multiplied by other vector or by int/float and more. You can find all the functions of the module below.
        
        ---
        ## Installing
        Simply run `pip install vectors2d` from your command line.
        
        
        ## Class:
        ` Vector2D ` : takes ints, floats, tuple, list when creating. If not given, creates zero vector (0;0). If given only one number, assigns it to "x" coordinate. Also can take other Vector2D object.
        ### Class methods:
        1. `iszero()` : check if vector is zero vector.
        2. `isparallel(vector)` : check if the vector is parallel to the given vector. Takes Vector2D, list ot tuple.
        3. `isperpendicular(vector)` : check if the vector is perpendicular to the given vector. Takes Vector2D, list ot tuple.
        4. `iscodirected(vector)` : check if vector is co-directed to given vector. Takes Vector2D, list ot tuple.
        
        
        ## Global functions:
        1. `absolute_vector(vector)` : calculates absolute value of given vector. Takes Vector2D object, list or tuple. Returns float;
        2. `sum_vectors(*vectors)` : adds all the given vectors. Takes Vector2D objects, lists and tuples in any combination. Returns Vector2D;
        3. `sub_vectors(*vectors)` : subtracts all the given vectors. Takes Vector2D objects, lists and tuples in any combination. Returns Vector2D;
        4. `mult_vector(vector, multiplier)` : multiplies given vector by given number (can be int or float). "vector" takes Vector2D object, list and tuple as vector; "multiplier" takes int and float as multiplier. Returns Vector2D;
        5. `scalar_mult_vectors(vectors*)` : calculates scalar multiplication of given vectors. Takes Vector2D objects, lists and tuples in any combination. Returns float;
        6. `get_angle(vector1, vector2)` : returns angle between two given vectors in radians. Takes Vector2D objects, lists and tuples in any combination. Returns float;
        7. `vector_from_dots(dot1, dot2)` : calculates vector from two given dots. Returns Vector2D.
        
        ## GitHub:
        Extended documentation with examples is available at
        ```
        https://github.com/MitryP/vectors/
        ```
Keywords: vectors,2-dimensional,flat,coordinates,open-source
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Description-Content-Type: text/markdown
