[metadata]
name = panoptes-pocs
description = PANOPTES Observatory Control System
author = Project PANOPTES
author-email = developers@projectpanoptes.org
license = mit
long-description = file: README.md
long-description-content-type = text/markdown; charset=UTF-8
url = https://github.com/panoptes/POCS
project-urls = 
	Documentation = https://panoptes-pocs.readthedocs.org
	Forum = https://forum.projectpanoptes.org
platforms = linux
classifiers = 
	Development Status :: 4 - Beta
	Environment :: Console
	Intended Audience :: Science/Research
	License :: OSI Approved :: MIT License
	Operating System :: POSIX
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3 :: Only
	Topic :: Scientific/Engineering :: Astronomy
	Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir = 
	=src
scripts = 
	bin/panoptes-develop
	bin/pocs
	bin/pocs-shell
	bin/peas-shell
setup_requires = pyscaffold>=3.2a0,<3.3a0
install_requires = 
	astroplan
	astropy
	panoptes-utils>=0.2.30
	pyserial
	transitions
python_requires = >=3.7

[options.packages.find]
where = src
exclude = 
	tests

[options.extras_require]
focuser = 
	matplotlib
	scipy
google = 
	google-cloud-storage
	gsutil
testing = 
	coverage
	mocket
	pycodestyle
	pytest
	pytest-cov
	pytest-doctestplus
	pytest-remotedata>=0.3.1
	responses

[options.entry_points]

[test]
extras = True

[tool:pytest]
addopts = 
	--cov panoptes.pocs
	--cov panoptes.peas
	--cov-branch
	--cov-report term-missing:skip-covered
	--cov-report xml:build/coverage.xml
	--no-cov-on-fail
	--doctest-modules
	--doctest-ignore-import-errors
	--doctest-modules
	-x
	-vv
norecursedirs = 
	docker
	script
	resources
	dist
	build
	.tox
testpaths = tests src
doctest_optionflags = ELLIPSIS NORMALIZE_WHITESPACE ALLOW_UNICODE IGNORE_EXCEPTION_DETAIL
filterwarnings = 
	ignore:elementwise == comparison failed:DeprecationWarning
	ignore::pytest.PytestDeprecationWarning
doctest_plus = enabled
markers = 
	theskyx
	without_camera
	with_camera
	without_mount
	with_mount
	without_sensors
	with_sensors

[aliases]
dists = bdist_wheel

[bdist_wheel]
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[flake8]
exclude = 
	.tox
	build
	dist
	.eggs
	docs/conf.py

[pycodestyle]
max-line-length = 100

[pyscaffold]
version = 3.2.3
package = pocs
extensions = 
	no_skeleton
	namespace
	markdown
namespace = panoptes

[coverage:report]
exclude_lines = 
	pragma: no cover
	
	def __repr__
	if self\.debug
	
	raise AssertionError
	raise NotImplementedError
	
	if 0:
	if __name__ == .__main__.:
ignore_errors = True

[egg_info]
tag_build = 
tag_date = 0

